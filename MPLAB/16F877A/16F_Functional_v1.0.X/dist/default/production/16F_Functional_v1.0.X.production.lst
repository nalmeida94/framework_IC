

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Mar 14 09:58:58 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  009F                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347                           
   348                           	psect	idataBANK0
   349  04FA                     __pidataBANK0:	
   350                           
   351                           ;initializer for _receivedData
   352  04FA  3458               	retlw	88
   353                           
   354                           	psect	strings
   355  0500                     __pstrings:	
   356  0500                     stringtab:	
   357  0500                     __stringtab:	
   358  0500                     stringcode:	
   359                           ;	String table - string pointers are 1 byte each
   360                           
   361  0500                     stringdir:	
   362  0500  3005               	movlw	high stringdir
   363  0501  008A               	movwf	10
   364  0502  0804               	movf	4,w
   365  0503  0A84               	incf	4,f
   366  0504  0782               	addwf	2,f
   367  0505                     __stringbase:	
   368  0505  3400               	retlw	0
   369  0506                     __end_of__stringtab:	
   370  0506                     _dpowers:	
   371  0506  3401               	retlw	1
   372  0507  3400               	retlw	0
   373  0508  340A               	retlw	10
   374  0509  3400               	retlw	0
   375  050A  3464               	retlw	100
   376  050B  3400               	retlw	0
   377  050C  34E8               	retlw	232
   378  050D  3403               	retlw	3
   379  050E  3410               	retlw	16
   380  050F  3427               	retlw	39
   381  0510                     __end_of_dpowers:	
   382  0510                     _hexpowers:	
   383  0510  3401               	retlw	1
   384  0511  3400               	retlw	0
   385  0512  3410               	retlw	16
   386  0513  3400               	retlw	0
   387  0514  3400               	retlw	0
   388  0515  3401               	retlw	1
   389  0516  3400               	retlw	0
   390  0517  3410               	retlw	16
   391  0518                     __end_of_hexpowers:	
   392  001F                     _ADCON0bits	set	31
   393  001E                     _ADRESH	set	30
   394  000B                     _INTCONbits	set	11
   395  000C                     _PIR1bits	set	12
   396  0008                     _PORTDbits	set	8
   397  001A                     _RCREG	set	26
   398  0013                     _SSPBUF	set	19
   399  0019                     _TXREG	set	25
   400  00FE                     _ADCS0	set	254
   401  00FF                     _ADCS1	set	255
   402  00F8                     _ADON	set	248
   403  00A4                     _CKP	set	164
   404  00C4                     _CREN	set	196
   405  00C2                     _FERR	set	194
   406  005F                     _GIE	set	95
   407  00C1                     _OERR	set	193
   408  005E                     _PEIE	set	94
   409  003B                     _RC3	set	59
   410  003C                     _RC4	set	60
   411  0065                     _RCIF	set	101
   412  00C6                     _RX9	set	198
   413  00C7                     _SPEN	set	199
   414  00A5                     _SSPEN	set	165
   415  0063                     _SSPIF	set	99
   416  00A0                     _SSPM0	set	160
   417  00A1                     _SSPM1	set	161
   418  00A2                     _SSPM2	set	162
   419  00A3                     _SSPM3	set	163
   420  00A6                     _SSPOV	set	166
   421  0064                     _TXIF	set	100
   422  00A7                     _WCOL	set	167
   423  009F                     _ADCON1bits	set	159
   424  009E                     _ADRESL	set	158
   425  0081                     _OPTION_REGbits	set	129
   426  008C                     _PIE1bits	set	140
   427  0099                     _SPBRG	set	153
   428  0093                     _SSPADD	set	147
   429  0091                     _SSPCON2	set	145
   430  0091                     _SSPCON2bits	set	145
   431  0094                     _SSPSTAT	set	148
   432  0094                     _SSPSTATbits	set	148
   433  04FE                     _ADCS2	set	1278
   434  04FF                     _ADFM	set	1279
   435  04C2                     _BRGH	set	1218
   436  0465                     _RCIE	set	1125
   437  04C4                     _SYNC	set	1220
   438  0443                     _TRISD3	set	1091
   439  0444                     _TRISD4	set	1092
   440  04C6                     _TX9	set	1222
   441  04C5                     _TXEN	set	1221
   442  0464                     _TXIE	set	1124
   443  0518                     STR_2:	
   444  0518  340A               	retlw	10
   445  0519  340A               	retlw	10
   446  051A  340D               	retlw	13
   447  051B  344C               	retlw	76	;'L'
   448  051C  3465               	retlw	101	;'e'
   449  051D  3474               	retlw	116	;'t'
   450  051E  3420               	retlw	32	;' '
   451  051F  3454               	retlw	84	;'T'
   452  0520  3468               	retlw	104	;'h'
   453  0521  3465               	retlw	101	;'e'
   454  0522  3420               	retlw	32	;' '
   455  0523  3443               	retlw	67	;'C'
   456  0524  3461               	retlw	97	;'a'
   457  0525  3472               	retlw	114	;'r'
   458  0526  346E               	retlw	110	;'n'
   459  0527  3461               	retlw	97	;'a'
   460  0528  3467               	retlw	103	;'g'
   461  0529  3465               	retlw	101	;'e'
   462  052A  3420               	retlw	32	;' '
   463  052B  3442               	retlw	66	;'B'
   464  052C  3465               	retlw	101	;'e'
   465  052D  3467               	retlw	103	;'g'
   466  052E  3469               	retlw	105	;'i'
   467  052F  346E               	retlw	110	;'n'
   468  0530  342C               	retlw	44	;','
   469  0531  3420               	retlw	32	;' '
   470  0532  346E               	retlw	110	;'n'
   471  0533  346F               	retlw	111	;'o'
   472  0534  3477               	retlw	119	;'w'
   473  0535  3421               	retlw	33	;'!'
   474  0536  340A               	retlw	10
   475  0537  340A               	retlw	10
   476  0538  3400               	retlw	0
   477  0539                     STR_5:	
   478  0539  340A               	retlw	10
   479  053A  340D               	retlw	13
   480  053B  344C               	retlw	76	;'L'
   481  053C  3465               	retlw	101	;'e'
   482  053D  3469               	retlw	105	;'i'
   483  053E  3474               	retlw	116	;'t'
   484  053F  3475               	retlw	117	;'u'
   485  0540  3472               	retlw	114	;'r'
   486  0541  3461               	retlw	97	;'a'
   487  0542  3420               	retlw	32	;' '
   488  0543  3453               	retlw	83	;'S'
   489  0544  3465               	retlw	101	;'e'
   490  0545  3467               	retlw	103	;'g'
   491  0546  3475               	retlw	117	;'u'
   492  0547  346E               	retlw	110	;'n'
   493  0548  3464               	retlw	100	;'d'
   494  0549  346F               	retlw	111	;'o'
   495  054A  343A               	retlw	58	;':'
   496  054B  3420               	retlw	32	;' '
   497  054C  345B               	retlw	91	;'['
   498  054D  3420               	retlw	32	;' '
   499  054E  3425               	retlw	37	;'%'
   500  054F  3430               	retlw	48	;'0'
   501  0550  3432               	retlw	50	;'2'
   502  0551  3458               	retlw	88	;'X'
   503  0552  3420               	retlw	32	;' '
   504  0553  345D               	retlw	93	;']'
   505  0554  3400               	retlw	0
   506  0555                     STR_4:	
   507  0555  340A               	retlw	10
   508  0556  340D               	retlw	13
   509  0557  344C               	retlw	76	;'L'
   510  0558  3465               	retlw	101	;'e'
   511  0559  3469               	retlw	105	;'i'
   512  055A  3474               	retlw	116	;'t'
   513  055B  3475               	retlw	117	;'u'
   514  055C  3472               	retlw	114	;'r'
   515  055D  3461               	retlw	97	;'a'
   516  055E  3420               	retlw	32	;' '
   517  055F  344D               	retlw	77	;'M'
   518  0560  3469               	retlw	105	;'i'
   519  0561  346E               	retlw	110	;'n'
   520  0562  3475               	retlw	117	;'u'
   521  0563  3474               	retlw	116	;'t'
   522  0564  346F               	retlw	111	;'o'
   523  0565  343A               	retlw	58	;':'
   524  0566  3420               	retlw	32	;' '
   525  0567  345B               	retlw	91	;'['
   526  0568  3420               	retlw	32	;' '
   527  0569  3425               	retlw	37	;'%'
   528  056A  3430               	retlw	48	;'0'
   529  056B  3432               	retlw	50	;'2'
   530  056C  3458               	retlw	88	;'X'
   531  056D  3420               	retlw	32	;' '
   532  056E  345D               	retlw	93	;']'
   533  056F  3400               	retlw	0
   534  0570                     STR_3:	
   535  0570  340A               	retlw	10
   536  0571  340D               	retlw	13
   537  0572  344C               	retlw	76	;'L'
   538  0573  3465               	retlw	101	;'e'
   539  0574  3469               	retlw	105	;'i'
   540  0575  3474               	retlw	116	;'t'
   541  0576  3475               	retlw	117	;'u'
   542  0577  3472               	retlw	114	;'r'
   543  0578  3461               	retlw	97	;'a'
   544  0579  3420               	retlw	32	;' '
   545  057A  3448               	retlw	72	;'H'
   546  057B  346F               	retlw	111	;'o'
   547  057C  3472               	retlw	114	;'r'
   548  057D  3461               	retlw	97	;'a'
   549  057E  343A               	retlw	58	;':'
   550  057F  3420               	retlw	32	;' '
   551  0580  345B               	retlw	91	;'['
   552  0581  3420               	retlw	32	;' '
   553  0582  3425               	retlw	37	;'%'
   554  0583  3430               	retlw	48	;'0'
   555  0584  3432               	retlw	50	;'2'
   556  0585  3458               	retlw	88	;'X'
   557  0586  3420               	retlw	32	;' '
   558  0587  345D               	retlw	93	;']'
   559  0588  3400               	retlw	0
   560  0589                     STR_8:	
   561  0589  3430               	retlw	48	;'0'
   562  058A  3431               	retlw	49	;'1'
   563  058B  3432               	retlw	50	;'2'
   564  058C  3433               	retlw	51	;'3'
   565  058D  3434               	retlw	52	;'4'
   566  058E  3435               	retlw	53	;'5'
   567  058F  3436               	retlw	54	;'6'
   568  0590  3437               	retlw	55	;'7'
   569  0591  3438               	retlw	56	;'8'
   570  0592  3439               	retlw	57	;'9'
   571  0593  3441               	retlw	65	;'A'
   572  0594  3442               	retlw	66	;'B'
   573  0595  3443               	retlw	67	;'C'
   574  0596  3444               	retlw	68	;'D'
   575  0597  3445               	retlw	69	;'E'
   576  0598  3446               	retlw	70	;'F'
   577  0599  3400               	retlw	0
   578  059A                     STR_6:	
   579  059A  340A               	retlw	10
   580  059B  340D               	retlw	13
   581  059C  3452               	retlw	82	;'R'
   582  059D  3465               	retlw	101	;'e'
   583  059E  3467               	retlw	103	;'g'
   584  059F  3469               	retlw	105	;'i'
   585  05A0  3473               	retlw	115	;'s'
   586  05A1  3474               	retlw	116	;'t'
   587  05A2  3472               	retlw	114	;'r'
   588  05A3  346F               	retlw	111	;'o'
   589  05A4  3475               	retlw	117	;'u'
   590  05A5  3420               	retlw	32	;' '
   591  05A6  3425               	retlw	37	;'%'
   592  05A7  3475               	retlw	117	;'u'
   593  05A8  3400               	retlw	0
   594  05A9                     STR_7:	
   595  05A9  340A               	retlw	10
   596  05AA  340D               	retlw	13
   597  05AB  340A               	retlw	10
   598  05AC  340D               	retlw	13
   599  05AD  340A               	retlw	10
   600  05AE  340D               	retlw	13
   601  05AF  3400               	retlw	0
   602  05AD                     
   603                           ; #config settings
   604  0000                     
   605                           	psect	cinit
   606  0015                     start_initialization:	
   607  0015                     __initialization:	
   608                           
   609                           ; Clear objects allocated to BITBANK0
   610  0015  01DA               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   611                           
   612                           ; Clear objects allocated to BANK0
   613  0016  01D6               	clrf	__pbssBANK0& (0+127)
   614  0017  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   615  0018  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   616  0019  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   617                           
   618                           ; Clear objects allocated to BANK1
   619  001A  1383               	bcf	3,7	;select IRP bank0
   620  001B  30A0               	movlw	low __pbssBANK1
   621  001C  0084               	movwf	4
   622  001D  30D4               	movlw	low (__pbssBANK1+52)
   623  001E  120A  158A  2758  120A  118A  	fcall	clear_ram0
   624                           
   625                           ; Initialize objects allocated to BANK0
   626  0023  120A  118A  24FA   	fcall	__pidataBANK0	;fetch initializer
   627  0026  00DB               	movwf	__pdataBANK0& (0+127)
   628  0027                     end_of_initialization:	
   629                           ;End of C runtime variable initialization code
   630                           
   631  0027                     __end_of__initialization:	
   632  0027  0183               	clrf	3
   633  0028  120A  118A  2BCB   	ljmp	_main	;jump to C main() function
   634                           
   635                           	psect	bitbssBANK0
   636  02D0                     __pbitbssBANK0:	
   637  02D0                     _hasAnError:	
   638  02D0                     	ds	1
   639  02D1                     _val:	
   640  02D1                     	ds	1
   641                           
   642                           	psect	bssBANK0
   643  0056                     __pbssBANK0:	
   644  0056                     _data_ADC:	
   645  0056                     	ds	2
   646  0058                     _i:	
   647  0058                     	ds	1
   648  0059                     _leitura:	
   649  0059                     	ds	1
   650                           
   651                           	psect	dataBANK0
   652  005B                     __pdataBANK0:	
   653  005B                     _receivedData:	
   654  005B                     	ds	1
   655                           
   656                           	psect	bssBANK1
   657  00A0                     __pbssBANK1:	
   658  00A0                     _string:	
   659  00A0                     	ds	26
   660  00BA                     _string_aux:	
   661  00BA                     	ds	26
   662                           
   663                           	psect	clrtext
   664  0F58                     clear_ram0:	
   665                           ;	Called with FSR containing the base address, and
   666                           ;	W with the last address+1
   667                           
   668  0F58  0064               	clrwdt	;clear the watchdog before getting into this loop
   669  0F59                     clrloop0:	
   670  0F59  0180               	clrf	0	;clear RAM location pointed to by FSR
   671  0F5A  0A84               	incf	4,f	;increment pointer
   672  0F5B  0604               	xorwf	4,w	;XOR with final address
   673  0F5C  1903               	btfsc	3,2	;have we reached the end yet?
   674  0F5D  3400               	retlw	0	;all done for this memory range, return
   675  0F5E  0604               	xorwf	4,w	;XOR again to restore value
   676  0F5F  2F59               	goto	clrloop0	;do the next byte
   677                           
   678                           	psect	cstackCOMMON
   679  0070                     __pcstackCOMMON:	
   680  0070                     ?_isdigit:	
   681  0070                     ?_configADInterrupt:	
   682                           ; 1 bit 
   683                           
   684  0070                     ?_configAD:	
   685                           ; 0 bytes @ 0x0
   686                           
   687  0070                     ?_selectChanel:	
   688                           ; 0 bytes @ 0x0
   689                           
   690  0070                     ?_InitI2C_Master:	
   691                           ; 0 bytes @ 0x0
   692                           
   693  0070                     ?_I2C_Start:	
   694                           ; 0 bytes @ 0x0
   695                           
   696  0070                     ?_I2C_ReStart:	
   697                           ; 0 bytes @ 0x0
   698                           
   699  0070                     ?_I2C_Stop:	
   700                           ; 0 bytes @ 0x0
   701                           
   702  0070                     ?_I2C_Send_NACK:	
   703                           ; 0 bytes @ 0x0
   704                           
   705  0070                     ?_I2C_Write_Byte:	
   706                           ; 0 bytes @ 0x0
   707                           
   708  0070                     ?_I2C_Idle:	
   709                           ; 1 bit 
   710                           
   711  0070                     ?_configTimer:	
   712                           ; 0 bytes @ 0x0
   713                           
   714  0070                     ?_configRS232:	
   715                           ; 0 bytes @ 0x0
   716                           
   717  0070                     ?_configUSARTInterrupts:	
   718                           ; 0 bytes @ 0x0
   719                           
   720  0070                     ?_putch:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0070                     ?_interruptions:	
   724                           ; 0 bytes @ 0x0
   725                           
   726  0070                     ?_read_RTC_I2c:	
   727                           ; 0 bytes @ 0x0
   728                           
   729  0070                     ?_main:	
   730                           ; 0 bytes @ 0x0
   731                           
   732  0070                     ?i1_putch:	
   733                           ; 0 bytes @ 0x0
   734                           
   735  0070                     ??i1_putch:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ?i1_isdigit:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ??i1_isdigit:	
   742                           ; 1 bit 
   743                           
   744  0070                     ?_strcpy:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ?_I2C_Read_Byte:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?___awmod:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?i1_printf:	
   754                           ; 2 bytes @ 0x0
   755                           
   756  0070                     ?i1___wmul:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0070                     ?i1___lwdiv:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0070                     strcpy@from:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     i1putch@byte:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     i1_isdigit$805:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ___awmod@divisor:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     i1___wmul@multiplier:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0070                     i1___lwdiv@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780                           
   781                           ; 2 bytes @ 0x0
   782  0070                     	ds	1
   783  0071                     ??_strcpy:	
   784  0071                     i1isdigit@c:	
   785                           ; 0 bytes @ 0x1
   786                           
   787                           
   788                           ; 1 bytes @ 0x1
   789  0071                     	ds	1
   790  0072                     strcpy@to:	
   791  0072                     ___awmod@dividend:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0072                     i1___wmul@multiplicand:	
   795                           ; 2 bytes @ 0x2
   796                           
   797  0072                     i1___lwdiv@dividend:	
   798                           ; 2 bytes @ 0x2
   799                           
   800                           
   801                           ; 2 bytes @ 0x2
   802  0072                     	ds	1
   803  0073                     strcpy@cp:	
   804                           
   805                           ; 1 bytes @ 0x3
   806  0073                     	ds	1
   807  0074                     ??___awmod:	
   808  0074                     ??i1___wmul:	
   809                           ; 0 bytes @ 0x4
   810                           
   811  0074                     ??i1___lwdiv:	
   812                           ; 0 bytes @ 0x4
   813                           
   814  0074                     i1___wmul@product:	
   815                           ; 0 bytes @ 0x4
   816                           
   817                           
   818                           ; 2 bytes @ 0x4
   819  0074                     	ds	1
   820  0075                     ___awmod@counter:	
   821  0075                     i1___lwdiv@quotient:	
   822                           ; 1 bytes @ 0x5
   823                           
   824                           
   825                           ; 2 bytes @ 0x5
   826  0075                     	ds	1
   827  0076                     ___awmod@sign:	
   828                           
   829                           ; 1 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     i1___lwdiv@counter:	
   832                           
   833                           ; 1 bytes @ 0x7
   834  0077                     	ds	1
   835  0078                     ?i1___lwmod:	
   836  0078                     i1___lwmod@divisor:	
   837                           ; 2 bytes @ 0x8
   838                           
   839                           
   840                           ; 2 bytes @ 0x8
   841  0078                     	ds	2
   842  007A                     i1___lwmod@dividend:	
   843                           
   844                           ; 2 bytes @ 0xA
   845  007A                     	ds	2
   846  007C                     ??i1___lwmod:	
   847                           
   848                           ; 0 bytes @ 0xC
   849  007C                     	ds	1
   850  007D                     i1___lwmod@counter:	
   851                           
   852                           ; 1 bytes @ 0xD
   853  007D                     	ds	1
   854                           
   855                           	psect	cstackBANK0
   856  0020                     __pcstackBANK0:	
   857  0020                     ??i1_printf:	
   858                           
   859                           ; 0 bytes @ 0x0
   860  0020                     	ds	3
   861  0023                     i1printf@idx:	
   862                           
   863                           ; 1 bytes @ 0x3
   864  0023                     	ds	1
   865  0024                     i1printf@f:	
   866                           
   867                           ; 1 bytes @ 0x4
   868  0024                     	ds	1
   869  0025                     i1printf@ap:	
   870                           
   871                           ; 1 bytes @ 0x5
   872  0025                     	ds	1
   873  0026                     i1printf@prec:	
   874                           
   875                           ; 1 bytes @ 0x6
   876  0026                     	ds	1
   877  0027                     i1printf@flag:	
   878                           
   879                           ; 1 bytes @ 0x7
   880  0027                     	ds	1
   881  0028                     i1printf@val:	
   882                           
   883                           ; 2 bytes @ 0x8
   884  0028                     	ds	2
   885  002A                     i1printf@width:	
   886                           
   887                           ; 2 bytes @ 0xA
   888  002A                     	ds	2
   889  002C                     i1printf@c:	
   890                           
   891                           ; 1 bytes @ 0xC
   892  002C                     	ds	1
   893  002D                     ??_interruptions:	
   894                           
   895                           ; 0 bytes @ 0xD
   896  002D                     	ds	7
   897  0034                     ??_isdigit:	
   898  0034                     ??_configADInterrupt:	
   899                           ; 0 bytes @ 0x14
   900                           
   901  0034                     ??_configAD:	
   902                           ; 0 bytes @ 0x14
   903                           
   904  0034                     ??_selectChanel:	
   905                           ; 0 bytes @ 0x14
   906                           
   907  0034                     ??_InitI2C_Master:	
   908                           ; 0 bytes @ 0x14
   909                           
   910  0034                     ??_I2C_Start:	
   911                           ; 0 bytes @ 0x14
   912                           
   913  0034                     ??_I2C_ReStart:	
   914                           ; 0 bytes @ 0x14
   915                           
   916  0034                     ??_I2C_Stop:	
   917                           ; 0 bytes @ 0x14
   918                           
   919  0034                     ??_I2C_Send_NACK:	
   920                           ; 0 bytes @ 0x14
   921                           
   922  0034                     ??_I2C_Write_Byte:	
   923                           ; 0 bytes @ 0x14
   924                           
   925  0034                     ??_I2C_Read_Byte:	
   926                           ; 0 bytes @ 0x14
   927                           
   928  0034                     ??_I2C_Idle:	
   929                           ; 0 bytes @ 0x14
   930                           
   931  0034                     ??_configTimer:	
   932                           ; 0 bytes @ 0x14
   933                           
   934  0034                     ??_configRS232:	
   935                           ; 0 bytes @ 0x14
   936                           
   937  0034                     ??_configUSARTInterrupts:	
   938                           ; 0 bytes @ 0x14
   939                           
   940  0034                     ??_putch:	
   941                           ; 0 bytes @ 0x14
   942                           
   943  0034                     ?___wmul:	
   944                           ; 0 bytes @ 0x14
   945                           
   946  0034                     ?___lwdiv:	
   947                           ; 2 bytes @ 0x14
   948                           
   949  0034                     selectChanel@channel:	
   950                           ; 2 bytes @ 0x14
   951                           
   952  0034                     I2C_Write_Byte@Byte:	
   953                           ; 1 bytes @ 0x14
   954                           
   955  0034                     putch@byte:	
   956                           ; 1 bytes @ 0x14
   957                           
   958  0034                     _isdigit$805:	
   959                           ; 1 bytes @ 0x14
   960                           
   961  0034                     ___wmul@multiplier:	
   962                           ; 1 bytes @ 0x14
   963                           
   964  0034                     ___lwdiv@divisor:	
   965                           ; 2 bytes @ 0x14
   966                           
   967                           
   968                           ; 2 bytes @ 0x14
   969  0034                     	ds	1
   970  0035                     ??_read_RTC_I2c:	
   971  0035                     isdigit@c:	
   972                           ; 0 bytes @ 0x15
   973                           
   974                           
   975                           ; 1 bytes @ 0x15
   976  0035                     	ds	1
   977  0036                     read_RTC_I2c@pos_memoria:	
   978  0036                     ___wmul@multiplicand:	
   979                           ; 1 bytes @ 0x16
   980                           
   981  0036                     ___lwdiv@dividend:	
   982                           ; 2 bytes @ 0x16
   983                           
   984                           
   985                           ; 2 bytes @ 0x16
   986  0036                     	ds	2
   987  0038                     ??___wmul:	
   988  0038                     ??___lwdiv:	
   989                           ; 0 bytes @ 0x18
   990                           
   991  0038                     ___wmul@product:	
   992                           ; 0 bytes @ 0x18
   993                           
   994                           
   995                           ; 2 bytes @ 0x18
   996  0038                     	ds	1
   997  0039                     ___lwdiv@quotient:	
   998                           
   999                           ; 2 bytes @ 0x19
  1000  0039                     	ds	2
  1001  003B                     ___lwdiv@counter:	
  1002                           
  1003                           ; 1 bytes @ 0x1B
  1004  003B                     	ds	1
  1005  003C                     ?___lwmod:	
  1006  003C                     ___lwmod@divisor:	
  1007                           ; 2 bytes @ 0x1C
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x1C
  1011  003C                     	ds	2
  1012  003E                     ___lwmod@dividend:	
  1013                           
  1014                           ; 2 bytes @ 0x1E
  1015  003E                     	ds	2
  1016  0040                     ??___lwmod:	
  1017                           
  1018                           ; 0 bytes @ 0x20
  1019  0040                     	ds	1
  1020  0041                     ___lwmod@counter:	
  1021                           
  1022                           ; 1 bytes @ 0x21
  1023  0041                     	ds	1
  1024  0042                     ?_printf:	
  1025                           
  1026                           ; 2 bytes @ 0x22
  1027  0042                     	ds	2
  1028  0044                     ??_printf:	
  1029                           
  1030                           ; 0 bytes @ 0x24
  1031  0044                     	ds	3
  1032  0047                     printf@idx:	
  1033                           
  1034                           ; 1 bytes @ 0x27
  1035  0047                     	ds	1
  1036  0048                     printf@ap:	
  1037                           
  1038                           ; 1 bytes @ 0x28
  1039  0048                     	ds	1
  1040  0049                     printf@prec:	
  1041                           
  1042                           ; 1 bytes @ 0x29
  1043  0049                     	ds	1
  1044  004A                     printf@val:	
  1045                           
  1046                           ; 2 bytes @ 0x2A
  1047  004A                     	ds	2
  1048  004C                     printf@flag:	
  1049                           
  1050                           ; 1 bytes @ 0x2C
  1051  004C                     	ds	1
  1052  004D                     printf@width:	
  1053                           
  1054                           ; 2 bytes @ 0x2D
  1055  004D                     	ds	2
  1056  004F                     printf@f:	
  1057                           
  1058                           ; 1 bytes @ 0x2F
  1059  004F                     	ds	1
  1060  0050                     printf@c:	
  1061                           
  1062                           ; 1 bytes @ 0x30
  1063  0050                     	ds	1
  1064  0051                     ??_main:	
  1065                           
  1066                           ; 0 bytes @ 0x31
  1067  0051                     	ds	2
  1068  0053                     main@channel:	
  1069                           
  1070                           ; 1 bytes @ 0x33
  1071  0053                     	ds	1
  1072  0054                     main@i:	
  1073                           
  1074                           ; 2 bytes @ 0x34
  1075  0054                     	ds	2
  1076                           
  1077                           	psect	maintext
  1078  03CB                     __pmaintext:	
  1079 ;;
  1080 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1081 ;;
  1082 ;; *************** function _main *****************
  1083 ;; Defined at:
  1084 ;;		line 130 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  i               2   52[BANK0 ] int 
  1089 ;;  channel         1   51[BANK0 ] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;		None               void
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : B00/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         0       3       0       0       0
  1101 ;;      Temps:          0       2       0       0       0
  1102 ;;      Totals:         0       5       0       0       0
  1103 ;;Total ram usage:        5 bytes
  1104 ;; Hardware stack levels required when called:    5
  1105 ;; This function calls:
  1106 ;;		_InitI2C_Master
  1107 ;;		_configAD
  1108 ;;		_configADInterrupt
  1109 ;;		_configRS232
  1110 ;;		_configTimer
  1111 ;;		_configUSARTInterrupts
  1112 ;;		_printf
  1113 ;;		_read_RTC_I2c
  1114 ;;		_selectChanel
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _main
  1122  03CB                     _main:	
  1123                           
  1124                           ;main.c: 131: TRISD3 = 0;
  1125                           
  1126                           ;incstack = 0
  1127                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1128  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1129  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1130  03CD  1188               	bcf	8,3	;volatile
  1131                           
  1132                           ;main.c: 132: TRISD4 = 0;
  1133  03CE  1208               	bcf	8,4	;volatile
  1134                           
  1135                           ;main.c: 135: configTimer();
  1136  03CF  120A  158A  2790  120A  118A  	fcall	_configTimer
  1137                           
  1138                           ;main.c: 138: configADInterrupt();
  1139  03D4  120A  158A  2760  120A  118A  	fcall	_configADInterrupt
  1140                           
  1141                           ;main.c: 139: configAD();
  1142  03D9  120A  158A  27BA  120A  118A  	fcall	_configAD
  1143                           
  1144                           ;main.c: 142: configRS232();
  1145  03DE  120A  118A  24EA  120A  118A  	fcall	_configRS232
  1146                           
  1147                           ;main.c: 143: configUSARTInterrupts();
  1148  03E3  120A  158A  27AB  120A  118A  	fcall	_configUSARTInterrupts
  1149                           
  1150                           ;main.c: 147: InitI2C_Master();
  1151  03E8  120A  158A  27E4  120A  118A  	fcall	_InitI2C_Master
  1152                           
  1153                           ;main.c: 150: unsigned char channel = 1;
  1154  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1155  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1156  03EF  01D3               	clrf	main@channel
  1157  03F0  0AD3               	incf	main@channel,f
  1158                           
  1159                           ;main.c: 151: selectChanel(channel);
  1160  03F1  0853               	movf	main@channel,w
  1161  03F2  120A  118A  26CF  120A  118A  	fcall	_selectChanel
  1162                           
  1163                           ;main.c: 152: ADON = 1;
  1164  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1165  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1166  03F9  141F               	bsf	31,0	;volatile
  1167                           
  1168                           ;main.c: 157: printf("\n\n\rLet The Carnage Begin, now!\n\n");
  1169  03FA  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1170  03FB                     L1:	
  1171  03FB  120A  118A  202B  120A  118A  	fcall	_printf
  1172                           
  1173                           ;main.c: 160: for(int i=0; i<(2000/20); i++)
  1174                           
  1175                           ;main.c: 159: while (1){
  1176  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0402  01D4               	clrf	main@i
  1179  0403  01D5               	clrf	main@i+1
  1180  0404  0855               	movf	main@i+1,w
  1181  0405  3A80               	xorlw	128
  1182  0406  00FF               	movwf	127
  1183  0407  3080               	movlw	128
  1184  0408  027F               	subwf	127,w
  1185  0409  1D03               	skipz
  1186  040A  2C0D               	goto	u2255
  1187  040B  3064               	movlw	100
  1188  040C  0254               	subwf	main@i,w
  1189  040D                     u2255:	
  1190  040D  1803               	btfsc	3,0
  1191  040E  2C2D               	goto	l2173
  1192  040F                     l2169:	
  1193                           
  1194                           ;main.c: 161: {
  1195                           ;main.c: 162: _delay((unsigned long)((20)*(20000000/4000.0)));
  1196  040F  3082               	movlw	130
  1197  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0412  00D2               	movwf	??_main+1
  1200  0413  30DD               	movlw	221
  1201  0414  00D1               	movwf	??_main
  1202  0415                     u2277:	
  1203  0415  0BD1               	decfsz	??_main,f
  1204  0416  2C15               	goto	u2277
  1205  0417  0BD2               	decfsz	??_main+1,f
  1206  0418  2C15               	goto	u2277
  1207  0419  2C1A               	nop2
  1208  041A  3001               	movlw	1
  1209  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1210  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1211  041D  07D4               	addwf	main@i,f
  1212  041E  1803               	skipnc
  1213  041F  0AD5               	incf	main@i+1,f
  1214  0420  3000               	movlw	0
  1215  0421  07D5               	addwf	main@i+1,f
  1216  0422  0855               	movf	main@i+1,w
  1217  0423  3A80               	xorlw	128
  1218  0424  00FF               	movwf	127
  1219  0425  3080               	movlw	128
  1220  0426  027F               	subwf	127,w
  1221  0427  1D03               	skipz
  1222  0428  2C2B               	goto	u2265
  1223  0429  3064               	movlw	100
  1224  042A  0254               	subwf	main@i,w
  1225  042B                     u2265:	
  1226  042B  1C03               	skipc
  1227  042C  2C0F               	goto	l2169
  1228  042D                     l2173:	
  1229                           
  1230                           ;main.c: 163: }
  1231                           ;main.c: 166: read_RTC_I2c(0x02);
  1232  042D  3002               	movlw	2
  1233  042E  120A  118A  262D  120A  118A  	fcall	_read_RTC_I2c
  1234                           
  1235                           ;main.c: 167: printf("\n\rLeitura Hora: [ %02X ]", leitura);
  1236  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0435  0859               	movf	_leitura,w
  1239  0436  00D1               	movwf	??_main
  1240  0437  01D2               	clrf	??_main+1
  1241  0438  0851               	movf	??_main,w
  1242  0439  00C2               	movwf	?_printf
  1243  043A  0852               	movf	??_main+1,w
  1244  043B  00C3               	movwf	?_printf+1
  1245  043C  306B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1246  043D  120A  118A  202B  120A  118A  	fcall	_printf
  1247                           
  1248                           ;main.c: 169: _delay((unsigned long)((10)*(20000000/4000.0)));
  1249  0442  3041               	movlw	65
  1250  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0445  00D2               	movwf	??_main+1
  1253  0446  30EE               	movlw	238
  1254  0447  00D1               	movwf	??_main
  1255  0448                     u2287:	
  1256  0448  0BD1               	decfsz	??_main,f
  1257  0449  2C48               	goto	u2287
  1258  044A  0BD2               	decfsz	??_main+1,f
  1259  044B  2C48               	goto	u2287
  1260  044C  0000               	nop
  1261                           
  1262                           ;main.c: 172: read_RTC_I2c(0x01);
  1263  044D  3001               	movlw	1
  1264  044E  120A  118A  262D  120A  118A  	fcall	_read_RTC_I2c
  1265                           
  1266                           ;main.c: 173: printf("\n\rLeitura Minuto: [ %02X ]", leitura);
  1267  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0455  0859               	movf	_leitura,w
  1270  0456  00D1               	movwf	??_main
  1271  0457  01D2               	clrf	??_main+1
  1272  0458  0851               	movf	??_main,w
  1273  0459  00C2               	movwf	?_printf
  1274  045A  0852               	movf	??_main+1,w
  1275  045B  00C3               	movwf	?_printf+1
  1276  045C  3050               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1277  045D  120A  118A  202B  120A  118A  	fcall	_printf
  1278                           
  1279                           ;main.c: 175: _delay((unsigned long)((10)*(20000000/4000.0)));
  1280  0462  3041               	movlw	65
  1281  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0465  00D2               	movwf	??_main+1
  1284  0466  30EE               	movlw	238
  1285  0467  00D1               	movwf	??_main
  1286  0468                     u2297:	
  1287  0468  0BD1               	decfsz	??_main,f
  1288  0469  2C68               	goto	u2297
  1289  046A  0BD2               	decfsz	??_main+1,f
  1290  046B  2C68               	goto	u2297
  1291  046C  0000               	nop
  1292                           
  1293                           ;main.c: 178: read_RTC_I2c(0x00);
  1294  046D  3000               	movlw	0
  1295  046E  120A  118A  262D  120A  118A  	fcall	_read_RTC_I2c
  1296                           
  1297                           ;main.c: 179: printf("\n\rLeitura Segundo: [ %02X ]", leitura);
  1298  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0475  0859               	movf	_leitura,w
  1301  0476  00D1               	movwf	??_main
  1302  0477  01D2               	clrf	??_main+1
  1303  0478  0851               	movf	??_main,w
  1304  0479  00C2               	movwf	?_printf
  1305  047A  0852               	movf	??_main+1,w
  1306  047B  00C3               	movwf	?_printf+1
  1307  047C  3034               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1308  047D  120A  118A  202B  120A  118A  	fcall	_printf
  1309                           
  1310                           ;main.c: 181: _delay((unsigned long)((10)*(20000000/4000.0)));
  1311  0482  3041               	movlw	65
  1312  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0485  00D2               	movwf	??_main+1
  1315  0486  30EE               	movlw	238
  1316  0487  00D1               	movwf	??_main
  1317  0488                     u2307:	
  1318  0488  0BD1               	decfsz	??_main,f
  1319  0489  2C88               	goto	u2307
  1320  048A  0BD2               	decfsz	??_main+1,f
  1321  048B  2C88               	goto	u2307
  1322  048C  0000               	nop
  1323                           
  1324                           ;main.c: 183: printf("\n\rRegistrou %u", data_ADC);
  1325  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1326  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1327  048F  0857               	movf	_data_ADC+1,w
  1328  0490  00C3               	movwf	?_printf+1
  1329  0491  0856               	movf	_data_ADC,w
  1330  0492  00C2               	movwf	?_printf
  1331  0493  3095               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1332  0494  120A  118A  202B  120A  118A  	fcall	_printf
  1333                           
  1334                           ;main.c: 185: _delay((unsigned long)((10)*(20000000/4000.0)));
  1335  0499  3041               	movlw	65
  1336  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1337  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1338  049C  00D2               	movwf	??_main+1
  1339  049D  30EE               	movlw	238
  1340  049E  00D1               	movwf	??_main
  1341  049F                     u2317:	
  1342  049F  0BD1               	decfsz	??_main,f
  1343  04A0  2C9F               	goto	u2317
  1344  04A1  0BD2               	decfsz	??_main+1,f
  1345  04A2  2C9F               	goto	u2317
  1346  04A3  0000               	nop
  1347                           
  1348                           ;main.c: 187: printf("\n\r\n\r\n\r");
  1349  04A4  30A4               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1350  04A5  2BFB               	goto	L1
  1351  04A6                     __end_of_main:	
  1352                           
  1353                           	psect	text1
  1354  06CF                     __ptext1:	
  1355 ;; *************** function _selectChanel *****************
  1356 ;; Defined at:
  1357 ;;		line 53 in file "ad.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  channel         1    wreg     unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  channel         1   20[BANK0 ] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       1       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       1       0       0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    3
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _selectChanel
  1387  06CF                     _selectChanel:	
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _selectChanel: [wreg+status,2+status,0]
  1391                           ;selectChanel@channel stored from wreg
  1392  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1393  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1394  06D1  00B4               	movwf	selectChanel@channel
  1395                           
  1396                           ;ad.c: 54: if(channel == 0){
  1397  06D2  0834               	movf	selectChanel@channel,w
  1398  06D3  1D03               	btfss	3,2
  1399  06D4  2ED9               	goto	l1723
  1400                           
  1401                           ;ad.c: 55: ADCON0bits.CHS2 = 0;
  1402  06D5  129F               	bcf	31,5	;volatile
  1403                           
  1404                           ;ad.c: 56: ADCON0bits.CHS1 = 0;
  1405  06D6  121F               	bcf	31,4	;volatile
  1406                           
  1407                           ;ad.c: 57: ADCON0bits.CHS0 = 0;
  1408  06D7  119F               	bcf	31,3	;volatile
  1409                           
  1410                           ;ad.c: 58: }
  1411  06D8  0008               	return
  1412  06D9                     l1723:	
  1413                           
  1414                           ;ad.c: 59: else if(channel == 1){
  1415  06D9  0334               	decf	selectChanel@channel,w
  1416  06DA  1D03               	btfss	3,2
  1417  06DB  2EE0               	goto	l1727
  1418                           
  1419                           ;ad.c: 60: ADCON0bits.CHS2 = 0;
  1420  06DC  129F               	bcf	31,5	;volatile
  1421                           
  1422                           ;ad.c: 61: ADCON0bits.CHS1 = 0;
  1423  06DD  121F               	bcf	31,4	;volatile
  1424                           
  1425                           ;ad.c: 62: ADCON0bits.CHS0 = 1;
  1426  06DE  159F               	bsf	31,3	;volatile
  1427                           
  1428                           ;ad.c: 63: }
  1429  06DF  0008               	return
  1430  06E0                     l1727:	
  1431                           
  1432                           ;ad.c: 64: else if(channel == 2){
  1433  06E0  3002               	movlw	2
  1434  06E1  0634               	xorwf	selectChanel@channel,w
  1435  06E2  1D03               	btfss	3,2
  1436  06E3  2EE8               	goto	l1731
  1437                           
  1438                           ;ad.c: 65: ADCON0bits.CHS2 = 0;
  1439  06E4  129F               	bcf	31,5	;volatile
  1440                           
  1441                           ;ad.c: 66: ADCON0bits.CHS1 = 1;
  1442  06E5  161F               	bsf	31,4	;volatile
  1443                           
  1444                           ;ad.c: 67: ADCON0bits.CHS0 = 0;
  1445  06E6  119F               	bcf	31,3	;volatile
  1446                           
  1447                           ;ad.c: 68: }
  1448  06E7  0008               	return
  1449  06E8                     l1731:	
  1450                           
  1451                           ;ad.c: 69: else if(channel == 3){
  1452  06E8  3003               	movlw	3
  1453  06E9  0634               	xorwf	selectChanel@channel,w
  1454  06EA  1D03               	btfss	3,2
  1455  06EB  2EF0               	goto	l1735
  1456                           
  1457                           ;ad.c: 70: ADCON0bits.CHS2 = 0;
  1458  06EC  129F               	bcf	31,5	;volatile
  1459                           
  1460                           ;ad.c: 71: ADCON0bits.CHS1 = 1;
  1461  06ED  161F               	bsf	31,4	;volatile
  1462                           
  1463                           ;ad.c: 72: ADCON0bits.CHS0 = 1;
  1464  06EE  159F               	bsf	31,3	;volatile
  1465                           
  1466                           ;ad.c: 73: }
  1467  06EF  0008               	return
  1468  06F0                     l1735:	
  1469                           
  1470                           ;ad.c: 74: else if(channel == 4){
  1471  06F0  3004               	movlw	4
  1472  06F1  0634               	xorwf	selectChanel@channel,w
  1473  06F2  1D03               	btfss	3,2
  1474  06F3  2EF8               	goto	l1739
  1475                           
  1476                           ;ad.c: 75: ADCON0bits.CHS2 = 1;
  1477  06F4  169F               	bsf	31,5	;volatile
  1478                           
  1479                           ;ad.c: 76: ADCON0bits.CHS1 = 0;
  1480  06F5  121F               	bcf	31,4	;volatile
  1481                           
  1482                           ;ad.c: 77: ADCON0bits.CHS0 = 0;
  1483  06F6  119F               	bcf	31,3	;volatile
  1484                           
  1485                           ;ad.c: 78: }
  1486  06F7  0008               	return
  1487  06F8                     l1739:	
  1488                           
  1489                           ;ad.c: 79: else if(channel == 5){
  1490  06F8  3005               	movlw	5
  1491  06F9  0634               	xorwf	selectChanel@channel,w
  1492  06FA  1D03               	btfss	3,2
  1493  06FB  2F00               	goto	l1743
  1494                           
  1495                           ;ad.c: 80: ADCON0bits.CHS2 = 1;
  1496  06FC  169F               	bsf	31,5	;volatile
  1497                           
  1498                           ;ad.c: 81: ADCON0bits.CHS1 = 0;
  1499  06FD  121F               	bcf	31,4	;volatile
  1500                           
  1501                           ;ad.c: 82: ADCON0bits.CHS0 = 1;
  1502  06FE  159F               	bsf	31,3	;volatile
  1503                           
  1504                           ;ad.c: 83: }
  1505  06FF  0008               	return
  1506  0700                     l1743:	
  1507                           
  1508                           ;ad.c: 84: else if(channel == 6){
  1509  0700  3006               	movlw	6
  1510  0701  0634               	xorwf	selectChanel@channel,w
  1511  0702  1D03               	btfss	3,2
  1512  0703  2F08               	goto	l1747
  1513                           
  1514                           ;ad.c: 85: ADCON0bits.CHS2 = 1;
  1515  0704  169F               	bsf	31,5	;volatile
  1516                           
  1517                           ;ad.c: 86: ADCON0bits.CHS1 = 1;
  1518  0705  161F               	bsf	31,4	;volatile
  1519                           
  1520                           ;ad.c: 87: ADCON0bits.CHS0 = 0;
  1521  0706  119F               	bcf	31,3	;volatile
  1522                           
  1523                           ;ad.c: 88: }
  1524  0707  0008               	return
  1525  0708                     l1747:	
  1526                           
  1527                           ;ad.c: 89: else if(channel == 7){
  1528  0708  3007               	movlw	7
  1529  0709  0634               	xorwf	selectChanel@channel,w
  1530  070A  1D03               	btfss	3,2
  1531  070B  0008               	return
  1532                           
  1533                           ;ad.c: 90: ADCON0bits.CHS2 = 1;
  1534  070C  169F               	bsf	31,5	;volatile
  1535                           
  1536                           ;ad.c: 91: ADCON0bits.CHS1 = 1;
  1537  070D  161F               	bsf	31,4	;volatile
  1538                           
  1539                           ;ad.c: 92: ADCON0bits.CHS0 = 1;
  1540  070E  159F               	bsf	31,3	;volatile
  1541  070F  0008               	return
  1542  0710                     __end_of_selectChanel:	
  1543                           
  1544                           	psect	text2
  1545  062D                     __ptext2:	
  1546 ;; *************** function _read_RTC_I2c *****************
  1547 ;; Defined at:
  1548 ;;		line 111 in file "main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  pos_memoria     1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  pos_memoria     1   22[BANK0 ] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         0       1       0       0       0
  1564 ;;      Temps:          0       1       0       0       0
  1565 ;;      Totals:         0       2       0       0       0
  1566 ;;Total ram usage:        2 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    4
  1569 ;; This function calls:
  1570 ;;		_I2C_Idle
  1571 ;;		_I2C_ReStart
  1572 ;;		_I2C_Read_Byte
  1573 ;;		_I2C_Send_NACK
  1574 ;;		_I2C_Start
  1575 ;;		_I2C_Stop
  1576 ;;		_I2C_Write_Byte
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _read_RTC_I2c
  1584  062D                     _read_RTC_I2c:	
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _read_RTC_I2c: [wreg+status,2+status,0+pclath+cstack]
  1588                           ;read_RTC_I2c@pos_memoria stored from wreg
  1589  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1590  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1591  062F  00B6               	movwf	read_RTC_I2c@pos_memoria
  1592                           
  1593                           ;main.c: 113: I2C_Idle();
  1594  0630  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1595                           
  1596                           ;main.c: 114: I2C_Start();
  1597  0635  120A  158A  2748  120A  118A  	fcall	_I2C_Start
  1598                           
  1599                           ;main.c: 115: I2C_Idle();
  1600  063A  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1601                           
  1602                           ;main.c: 116: I2C_Write_Byte(0xD0);
  1603  063F  30D0               	movlw	208
  1604  0640  120A  158A  2784  120A  118A  	fcall	_I2C_Write_Byte
  1605                           
  1606                           ;main.c: 117: I2C_Idle();
  1607  0645  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1608                           
  1609                           ;main.c: 118: I2C_Write_Byte(pos_memoria);
  1610  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1611  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1612  064C  0836               	movf	read_RTC_I2c@pos_memoria,w
  1613  064D  120A  158A  2784  120A  118A  	fcall	_I2C_Write_Byte
  1614                           
  1615                           ;main.c: 119: I2C_Idle();
  1616  0652  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1617                           
  1618                           ;main.c: 120: I2C_ReStart();
  1619  0657  120A  158A  2740  120A  118A  	fcall	_I2C_ReStart
  1620                           
  1621                           ;main.c: 121: I2C_Idle();
  1622  065C  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1623                           
  1624                           ;main.c: 122: I2C_Write_Byte(0xD1);
  1625  0661  30D1               	movlw	209
  1626  0662  120A  158A  2784  120A  118A  	fcall	_I2C_Write_Byte
  1627                           
  1628                           ;main.c: 123: I2C_Idle();
  1629  0667  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1630                           
  1631                           ;main.c: 124: leitura = I2C_Read_Byte();
  1632  066C  120A  158A  2772  120A  118A  	fcall	_I2C_Read_Byte
  1633  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0673  00B5               	movwf	??_read_RTC_I2c
  1636  0674  0835               	movf	??_read_RTC_I2c,w
  1637  0675  00D9               	movwf	_leitura
  1638                           
  1639                           ;main.c: 125: I2C_Idle();
  1640  0676  120A  158A  2769  120A  118A  	fcall	_I2C_Idle
  1641                           
  1642                           ;main.c: 126: I2C_Send_NACK();
  1643  067B  120A  158A  277B  120A  118A  	fcall	_I2C_Send_NACK
  1644                           
  1645                           ;main.c: 127: I2C_Stop();
  1646  0680  120A  158A  2750   	fcall	_I2C_Stop
  1647  0683  0008               	return
  1648  0684                     __end_of_read_RTC_I2c:	
  1649                           
  1650                           	psect	text3
  1651  0F84                     __ptext3:	
  1652 ;; *************** function _I2C_Write_Byte *****************
  1653 ;; Defined at:
  1654 ;;		line 108 in file "i2c.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  Byte            1    wreg     unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  Byte            1   20[BANK0 ] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       1       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       1       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    3
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_read_RTC_I2c
  1679 ;;		_write_RTC_I2c
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _I2C_Write_Byte
  1685  0F84                     _I2C_Write_Byte:	
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in _I2C_Write_Byte: [wreg]
  1689                           ;I2C_Write_Byte@Byte stored from wreg
  1690  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0F86  00B4               	movwf	I2C_Write_Byte@Byte
  1693                           
  1694                           ;i2c.c: 110: SSPBUF = Byte;
  1695  0F87  0834               	movf	I2C_Write_Byte@Byte,w
  1696  0F88  0093               	movwf	19	;volatile
  1697  0F89                     l115:	
  1698                           ;i2c.c: 111: while (!SSPIF);
  1699                           
  1700  0F89  1D8C               	btfss	12,3	;volatile
  1701  0F8A  2F89               	goto	l115
  1702                           
  1703                           ;i2c.c: 112: SSPIF = 0;
  1704  0F8B  118C               	bcf	12,3	;volatile
  1705                           
  1706                           ;i2c.c: 113: return SSPCON2bits.ACKSTAT;
  1707                           ;	Return value of _I2C_Write_Byte is never used
  1708  0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  1709  0F8D  1303               	bcf	3,6	;RP1=0, select bank1
  1710  0F8E  0811               	movf	17,w	;volatile
  1711  0F8F  0008               	return
  1712  0F90                     __end_of_I2C_Write_Byte:	
  1713                           
  1714                           	psect	text4
  1715  0F50                     __ptext4:	
  1716 ;; *************** function _I2C_Stop *****************
  1717 ;; Defined at:
  1718 ;;		line 88 in file "i2c.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		None
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    3
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_read_RTC_I2c
  1743 ;;		_write_RTC_I2c
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _I2C_Stop
  1749  0F50                     _I2C_Stop:	
  1750                           
  1751                           ;i2c.c: 89: SSPCON2bits.PEN = 1;
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _I2C_Stop: []
  1755  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  1757  0F52  1511               	bsf	17,2	;volatile
  1758  0F53                     l97:	
  1759                           ;i2c.c: 90: while (!SSPIF);
  1760                           
  1761  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0F54  1D8C               	btfss	12,3	;volatile
  1763  0F55  2F53               	goto	l97
  1764                           
  1765                           ;i2c.c: 91: SSPIF = 0;
  1766  0F56  118C               	bcf	12,3	;volatile
  1767  0F57  0008               	return
  1768  0F58                     __end_of_I2C_Stop:	
  1769                           
  1770                           	psect	text5
  1771  0F48                     __ptext5:	
  1772 ;; *************** function _I2C_Start *****************
  1773 ;; Defined at:
  1774 ;;		line 74 in file "i2c.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;		None               void
  1781 ;; Registers used:
  1782 ;;		None
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    3
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_read_RTC_I2c
  1799 ;;		_write_RTC_I2c
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _I2C_Start
  1805  0F48                     _I2C_Start:	
  1806                           
  1807                           ;i2c.c: 76: SSPCON2bits.SEN = 1;
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _I2C_Start: []
  1811  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0F4A  1411               	bsf	17,0	;volatile
  1814  0F4B                     l85:	
  1815                           ;i2c.c: 77: while (!SSPIF);
  1816                           
  1817  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0F4C  1D8C               	btfss	12,3	;volatile
  1819  0F4D  2F4B               	goto	l85
  1820                           
  1821                           ;i2c.c: 78: SSPIF = 0;
  1822  0F4E  118C               	bcf	12,3	;volatile
  1823  0F4F  0008               	return
  1824  0F50                     __end_of_I2C_Start:	
  1825                           
  1826                           	psect	text6
  1827  0F7B                     __ptext6:	
  1828 ;; *************** function _I2C_Send_NACK *****************
  1829 ;; Defined at:
  1830 ;;		line 101 in file "i2c.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;		None               void
  1837 ;; Registers used:
  1838 ;;		None
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    3
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_read_RTC_I2c
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _I2C_Send_NACK
  1860  0F7B                     _I2C_Send_NACK:	
  1861                           
  1862                           ;i2c.c: 102: SSPCON2bits.ACKDT = 1;
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _I2C_Send_NACK: []
  1866  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  1868  0F7D  1691               	bsf	17,5	;volatile
  1869                           
  1870                           ;i2c.c: 103: SSPCON2bits.ACKEN = 1;
  1871  0F7E  1611               	bsf	17,4	;volatile
  1872  0F7F                     l109:	
  1873                           ;i2c.c: 104: while (!SSPIF);
  1874                           
  1875  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0F80  1D8C               	btfss	12,3	;volatile
  1877  0F81  2F7F               	goto	l109
  1878                           
  1879                           ;i2c.c: 105: SSPIF = 0;
  1880  0F82  118C               	bcf	12,3	;volatile
  1881  0F83  0008               	return
  1882  0F84                     __end_of_I2C_Send_NACK:	
  1883                           
  1884                           	psect	text7
  1885  0F72                     __ptext7:	
  1886 ;; *************** function _I2C_Read_Byte *****************
  1887 ;; Defined at:
  1888 ;;		line 116 in file "i2c.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      unsigned char 
  1895 ;; Registers used:
  1896 ;;		wreg
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_read_RTC_I2c
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _I2C_Read_Byte
  1918  0F72                     _I2C_Read_Byte:	
  1919                           
  1920                           ;i2c.c: 118: SSPCON2bits.RCEN = 1;
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _I2C_Read_Byte: [wreg]
  1924  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0F74  1591               	bsf	17,3	;volatile
  1927  0F75                     l121:	
  1928                           ;i2c.c: 119: while (!SSPIF);
  1929                           
  1930  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0F76  1D8C               	btfss	12,3	;volatile
  1932  0F77  2F75               	goto	l121
  1933                           
  1934                           ;i2c.c: 120: SSPIF = 0;
  1935  0F78  118C               	bcf	12,3	;volatile
  1936                           
  1937                           ;i2c.c: 122: return SSPBUF;
  1938  0F79  0813               	movf	19,w	;volatile
  1939  0F7A  0008               	return
  1940  0F7B                     __end_of_I2C_Read_Byte:	
  1941                           
  1942                           	psect	text8
  1943  0F40                     __ptext8:	
  1944 ;; *************** function _I2C_ReStart *****************
  1945 ;; Defined at:
  1946 ;;		line 81 in file "i2c.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		None
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_read_RTC_I2c
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _I2C_ReStart
  1976  0F40                     _I2C_ReStart:	
  1977                           
  1978                           ;i2c.c: 83: SSPCON2bits.RSEN = 1;
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _I2C_ReStart: []
  1982  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  1984  0F42  1491               	bsf	17,1	;volatile
  1985  0F43                     l91:	
  1986                           ;i2c.c: 84: while (!SSPIF);
  1987                           
  1988  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0F44  1D8C               	btfss	12,3	;volatile
  1990  0F45  2F43               	goto	l91
  1991                           
  1992                           ;i2c.c: 85: SSPIF = 0;
  1993  0F46  118C               	bcf	12,3	;volatile
  1994  0F47  0008               	return
  1995  0F48                     __end_of_I2C_ReStart:	
  1996                           
  1997                           	psect	text9
  1998  0F69                     __ptext9:	
  1999 ;; *************** function _I2C_Idle *****************
  2000 ;; Defined at:
  2001 ;;		line 125 in file "i2c.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;		None               void
  2008 ;; Registers used:
  2009 ;;		wreg, status,2
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    3
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_read_RTC_I2c
  2026 ;;		_write_RTC_I2c
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _I2C_Idle
  2032  0F69                     _I2C_Idle:	
  2033  0F69                     l1555:	
  2034                           ;i2c.c: 128: continue;
  2035                           
  2036                           ;i2c.c: 127: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _I2C_Idle: [wreg+status,2]
  2040                           
  2041  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0F6B  0811               	movf	17,w	;volatile
  2044  0F6C  391F               	andlw	31
  2045  0F6D  1D03               	btfss	3,2
  2046  0F6E  2F69               	goto	l1555
  2047  0F6F  1D14               	btfss	20,2	;volatile
  2048  0F70  0008               	return
  2049  0F71  2F69               	goto	l1555
  2050  0F72                     __end_of_I2C_Idle:	
  2051                           
  2052                           	psect	text10
  2053  002B                     __ptext10:	
  2054 ;; *************** function _printf *****************
  2055 ;; Defined at:
  2056 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  f               1    wreg     PTR const unsigned char 
  2059 ;;		 -> STR_7(7), STR_6(15), STR_5(28), STR_4(27), 
  2060 ;;		 -> STR_3(25), STR_2(33), STR_1(3), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  f               1   47[BANK0 ] PTR const unsigned char 
  2063 ;;		 -> STR_7(7), STR_6(15), STR_5(28), STR_4(27), 
  2064 ;;		 -> STR_3(25), STR_2(33), STR_1(3), 
  2065 ;;  idx             1   39[BANK0 ] unsigned char 
  2066 ;;  tmpval          4    0        struct .
  2067 ;;  width           2   45[BANK0 ] int 
  2068 ;;  val             2   42[BANK0 ] unsigned int 
  2069 ;;  cp              2    0        PTR const unsigned char 
  2070 ;;  len             2    0        unsigned int 
  2071 ;;  c               1   48[BANK0 ] char 
  2072 ;;  flag            1   44[BANK0 ] unsigned char 
  2073 ;;  prec            1   41[BANK0 ] char 
  2074 ;;  ap              1   40[BANK0 ] PTR void [1]
  2075 ;;		 -> ?i1_printf(2), ?_printf(2), 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   34[BANK0 ] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       2       0       0       0
  2086 ;;      Locals:         0      10       0       0       0
  2087 ;;      Temps:          0       3       0       0       0
  2088 ;;      Totals:         0      15       0       0       0
  2089 ;;Total ram usage:       15 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    4
  2092 ;; This function calls:
  2093 ;;		___lwdiv
  2094 ;;		___lwmod
  2095 ;;		___wmul
  2096 ;;		_isdigit
  2097 ;;		_putch
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _printf
  2105  002B                     _printf:	
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2109                           ;printf@f stored from wreg
  2110  002B  1283               	bcf	3,5	;RP0=0, select bank0
  2111  002C  1303               	bcf	3,6	;RP1=0, select bank0
  2112  002D  00CF               	movwf	printf@f
  2113                           
  2114                           ;doprnt.c: 466: va_list ap;
  2115                           ;doprnt.c: 499: signed char c;
  2116                           ;doprnt.c: 501: int width;
  2117                           ;doprnt.c: 506: signed char prec;
  2118                           ;doprnt.c: 508: unsigned char flag;
  2119                           ;doprnt.c: 523: union {
  2120                           ;doprnt.c: 524: unsigned long vd;
  2121                           ;doprnt.c: 525: double integ;
  2122                           ;doprnt.c: 526: } tmpval;
  2123                           ;doprnt.c: 528: unsigned int val;
  2124                           ;doprnt.c: 529: unsigned len;
  2125                           ;doprnt.c: 530: const char * cp;
  2126                           ;doprnt.c: 533: *ap = __va_start();
  2127  002E  3042               	movlw	(low (?_printf| 0))& (0+255)
  2128  002F  00C4               	movwf	??_printf
  2129  0030  0844               	movf	??_printf,w
  2130  0031  00C8               	movwf	printf@ap
  2131  0032                     l1891:	
  2132                           ;doprnt.c: 536: while(c = *f++) {
  2133                           
  2134  0032  3001               	movlw	1
  2135  0033  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0034  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0035  07CF               	addwf	printf@f,f
  2138  0036  30FF               	movlw	-1
  2139  0037  074F               	addwf	printf@f,w
  2140  0038  0084               	movwf	4
  2141  0039  120A  118A  2500  120A  118A  	fcall	stringdir
  2142  003E  00C4               	movwf	??_printf
  2143  003F  0844               	movf	??_printf,w
  2144  0040  00D0               	movwf	printf@c
  2145  0041  0850               	movf	printf@c,w
  2146  0042  1903               	btfsc	3,2
  2147  0043  0008               	return
  2148                           
  2149                           ;doprnt.c: 538: if(c != '%')
  2150  0044  3025               	movlw	37
  2151  0045  0650               	xorwf	printf@c,w
  2152  0046  1903               	btfsc	3,2
  2153  0047  284F               	goto	l1801
  2154                           
  2155                           ;doprnt.c: 540: {
  2156                           ;doprnt.c: 541: (putch(c) );
  2157  0048  0850               	movf	printf@c,w
  2158  0049  120A  158A  2738  120A  118A  	fcall	_putch
  2159                           
  2160                           ;doprnt.c: 542: continue;
  2161  004E  2832               	goto	l1891
  2162  004F                     l1801:	
  2163                           
  2164                           ;doprnt.c: 543: }
  2165                           ;doprnt.c: 546: width = 0;
  2166  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0050  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0051  01CD               	clrf	printf@width
  2169  0052  01CE               	clrf	printf@width+1
  2170                           
  2171                           ;doprnt.c: 548: flag = 0;
  2172  0053  01CC               	clrf	printf@flag
  2173                           
  2174                           ;doprnt.c: 551: switch(*f) {
  2175                           
  2176                           ;doprnt.c: 550: for(;;) {
  2177  0054  285A               	goto	l1807
  2178  0055                     l313:	
  2179                           ;doprnt.c: 579: case '0':
  2180                           
  2181                           
  2182                           ;doprnt.c: 580: flag |= 0x04;
  2183  0055  154C               	bsf	printf@flag,2
  2184                           
  2185                           ;doprnt.c: 581: f++;
  2186  0056  3001               	movlw	1
  2187  0057  00C4               	movwf	??_printf
  2188  0058  0844               	movf	??_printf,w
  2189  0059  07CF               	addwf	printf@f,f
  2190  005A                     l1807:	
  2191                           ;doprnt.c: 584: }
  2192                           
  2193                           ;doprnt.c: 582: continue;
  2194                           
  2195  005A  084F               	movf	printf@f,w
  2196  005B  0084               	movwf	4
  2197  005C  120A  118A  2500  120A  118A  	fcall	stringdir
  2198                           
  2199                           ; Switch size 1, requested type "space"
  2200                           ; Number of cases is 1, Range of values is 48 to 48
  2201                           ; switch strategies available:
  2202                           ; Name         Instructions Cycles
  2203                           ; simple_byte            4     3 (average)
  2204                           ; direct_byte           14    11 (fixed)
  2205                           ; jumptable            263     9 (fixed)
  2206                           ;	Chosen strategy is simple_byte
  2207  0061  3A30               	xorlw	48	; case 48
  2208  0062  1903               	skipnz
  2209  0063  2855               	goto	l313
  2210  0064  2865               	goto	l1809
  2211  0065                     l1809:	
  2212                           ;doprnt.c: 586: }
  2213                           
  2214                           ;doprnt.c: 585: break;
  2215                           
  2216                           
  2217                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2218  0065  084F               	movf	printf@f,w
  2219  0066  0084               	movwf	4
  2220  0067  120A  118A  2500  120A  118A  	fcall	stringdir
  2221  006C  120A  118A  27F0  120A  118A  	fcall	_isdigit
  2222  0071  1C03               	btfss	3,0
  2223  0072  28BB               	goto	l1825
  2224                           
  2225                           ;doprnt.c: 598: width = 0;
  2226  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0075  01CD               	clrf	printf@width
  2229  0076  01CE               	clrf	printf@width+1
  2230  0077                     l1813:	
  2231                           ;doprnt.c: 599: do {
  2232                           
  2233                           
  2234                           ;doprnt.c: 600: width *= 10;
  2235  0077  300A               	movlw	10
  2236  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2238  007A  00B4               	movwf	___wmul@multiplier
  2239  007B  3000               	movlw	0
  2240  007C  00B5               	movwf	___wmul@multiplier+1
  2241  007D  084E               	movf	printf@width+1,w
  2242  007E  00B7               	movwf	___wmul@multiplicand+1
  2243  007F  084D               	movf	printf@width,w
  2244  0080  00B6               	movwf	___wmul@multiplicand
  2245  0081  120A  118A  24A6  120A  118A  	fcall	___wmul
  2246  0086  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0087  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0088  0835               	movf	?___wmul+1,w
  2249  0089  00CE               	movwf	printf@width+1
  2250  008A  0834               	movf	?___wmul,w
  2251  008B  00CD               	movwf	printf@width
  2252                           
  2253                           ;doprnt.c: 601: width += *f++ - '0';
  2254  008C  084F               	movf	printf@f,w
  2255  008D  0084               	movwf	4
  2256  008E  120A  118A  2500  120A  118A  	fcall	stringdir
  2257  0093  3ED0               	addlw	208
  2258  0094  00C4               	movwf	??_printf
  2259  0095  30FF               	movlw	255
  2260  0096  1803               	skipnc
  2261  0097  3000               	movlw	0
  2262  0098  00C5               	movwf	??_printf+1
  2263  0099  0844               	movf	??_printf,w
  2264  009A  07CD               	addwf	printf@width,f
  2265  009B  1803               	skipnc
  2266  009C  0ACE               	incf	printf@width+1,f
  2267  009D  0845               	movf	??_printf+1,w
  2268  009E  07CE               	addwf	printf@width+1,f
  2269  009F  3001               	movlw	1
  2270  00A0  00C4               	movwf	??_printf
  2271  00A1  0844               	movf	??_printf,w
  2272  00A2  07CF               	addwf	printf@f,f
  2273                           
  2274                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2275  00A3  084F               	movf	printf@f,w
  2276  00A4  0084               	movwf	4
  2277  00A5  120A  118A  2500  120A  118A  	fcall	stringdir
  2278  00AA  120A  118A  27F0  120A  118A  	fcall	_isdigit
  2279  00AF  1C03               	btfss	3,0
  2280  00B0  28BB               	goto	l1825
  2281  00B1  2877               	goto	l1813
  2282  00B2                     l324:	
  2283                           ;doprnt.c: 712: case 'X':
  2284                           
  2285                           ;doprnt.c: 638: goto alldone;
  2286                           
  2287                           ;doprnt.c: 637: case 0:
  2288                           
  2289                           ;doprnt.c: 608: }
  2290                           ;doprnt.c: 635: switch(c = *f++) {
  2291                           
  2292                           
  2293                           ;doprnt.c: 718: case 'x':
  2294                           ;doprnt.c: 721: flag |= 0x80;
  2295  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2296  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2297  00B4  17CC               	bsf	printf@flag,7
  2298                           
  2299                           ;doprnt.c: 723: break;
  2300  00B5  28D5               	goto	l1827
  2301  00B6                     l1821:	
  2302                           ;doprnt.c: 817: case 'u':
  2303                           
  2304                           ;doprnt.c: 813: continue;
  2305                           
  2306                           ;doprnt.c: 802: default:
  2307                           
  2308                           
  2309                           ;doprnt.c: 818: flag |= 0xC0;
  2310  00B6  30C0               	movlw	192
  2311  00B7  00C4               	movwf	??_printf
  2312  00B8  0844               	movf	??_printf,w
  2313  00B9  04CC               	iorwf	printf@flag,f
  2314                           
  2315                           ;doprnt.c: 822: }
  2316                           
  2317                           ;doprnt.c: 819: break;
  2318  00BA  28D5               	goto	l1827
  2319  00BB                     l1825:	
  2320  00BB  3001               	movlw	1
  2321  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2322  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2323  00BE  07CF               	addwf	printf@f,f
  2324  00BF  30FF               	movlw	-1
  2325  00C0  074F               	addwf	printf@f,w
  2326  00C1  0084               	movwf	4
  2327  00C2  120A  118A  2500  120A  118A  	fcall	stringdir
  2328  00C7  00D0               	movwf	printf@c
  2329                           
  2330                           ; Switch size 1, requested type "space"
  2331                           ; Number of cases is 4, Range of values is 0 to 120
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte           13     7 (average)
  2335                           ; jumptable            260     6 (fixed)
  2336                           ;	Chosen strategy is simple_byte
  2337  00C8  3A00               	xorlw	0	; case 0
  2338  00C9  1903               	skipnz
  2339  00CA  29FB               	goto	l356
  2340  00CB  3A58               	xorlw	88	; case 88
  2341  00CC  1903               	skipnz
  2342  00CD  28B2               	goto	l324
  2343  00CE  3A2D               	xorlw	45	; case 117
  2344  00CF  1903               	skipnz
  2345  00D0  28B6               	goto	l1821
  2346  00D1  3A0D               	xorlw	13	; case 120
  2347  00D2  1903               	skipnz
  2348  00D3  28B2               	goto	l324
  2349  00D4  2832               	goto	l1891
  2350  00D5                     l1827:	
  2351                           
  2352                           ;doprnt.c: 1273: {
  2353                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2354  00D5  0848               	movf	printf@ap,w
  2355  00D6  0084               	movwf	4
  2356  00D7  1383               	bcf	3,7	;select IRP bank0
  2357  00D8  0800               	movf	0,w
  2358  00D9  00CA               	movwf	printf@val
  2359  00DA  0A84               	incf	4,f
  2360  00DB  0800               	movf	0,w
  2361  00DC  00CB               	movwf	printf@val+1
  2362  00DD  3002               	movlw	2
  2363  00DE  00C4               	movwf	??_printf
  2364  00DF  0844               	movf	??_printf,w
  2365  00E0  07C8               	addwf	printf@ap,f
  2366                           
  2367                           ;doprnt.c: 1287: }
  2368                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  2369  00E1  292A               	goto	l1853
  2370  00E2                     l329:	
  2371                           ;doprnt.c: 1302: case 0xC0:
  2372                           
  2373                           
  2374                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2375  00E2  01D0               	clrf	printf@c
  2376  00E3  0AD0               	incf	printf@c,f
  2377  00E4                     L4:	
  2378  00E4  3005               	movlw	5
  2379  00E5  0650               	xorwf	printf@c,w
  2380  00E6  1903               	btfsc	3,2
  2381  00E7  2933               	goto	l1855
  2382                           
  2383                           ;doprnt.c: 1306: if(val < dpowers[c])
  2384  00E8  0850               	movf	printf@c,w
  2385  00E9  00C4               	movwf	??_printf
  2386  00EA  0744               	addwf	??_printf,w
  2387  00EB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2388  00EC  0084               	movwf	4
  2389  00ED  120A  118A  2500  120A  118A  	fcall	stringdir
  2390  00F2  00C5               	movwf	??_printf+1
  2391  00F3  120A  118A  2500  120A  118A  	fcall	stringdir
  2392  00F8  00C6               	movwf	??_printf+2
  2393  00F9  0846               	movf	??_printf+2,w
  2394  00FA  024B               	subwf	printf@val+1,w
  2395  00FB  1D03               	skipz
  2396  00FC  28FF               	goto	u1765
  2397  00FD  0845               	movf	??_printf+1,w
  2398  00FE  024A               	subwf	printf@val,w
  2399  00FF                     u1765:	
  2400  00FF  1C03               	btfss	3,0
  2401  0100  2933               	goto	l1855
  2402                           
  2403                           ;doprnt.c: 1307: break;
  2404  0101  3001               	movlw	1
  2405  0102  00C4               	movwf	??_printf
  2406  0103  0844               	movf	??_printf,w
  2407  0104  07D0               	addwf	printf@c,f
  2408  0105  28E4               	goto	L4
  2409  0106                     l334:	
  2410                           ;doprnt.c: 1314: case 0x80:
  2411                           
  2412                           ;doprnt.c: 1309: break;
  2413                           
  2414                           
  2415                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2416  0106  01D0               	clrf	printf@c
  2417  0107  0AD0               	incf	printf@c,f
  2418  0108                     L5:	
  2419  0108  3004               	movlw	4
  2420  0109  0650               	xorwf	printf@c,w
  2421  010A  1903               	btfsc	3,2
  2422  010B  2933               	goto	l1855
  2423                           
  2424                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2425  010C  0850               	movf	printf@c,w
  2426  010D  00C4               	movwf	??_printf
  2427  010E  0744               	addwf	??_printf,w
  2428  010F  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2429  0110  0084               	movwf	4
  2430  0111  120A  118A  2500  120A  118A  	fcall	stringdir
  2431  0116  00C5               	movwf	??_printf+1
  2432  0117  120A  118A  2500  120A  118A  	fcall	stringdir
  2433  011C  00C6               	movwf	??_printf+2
  2434  011D  0846               	movf	??_printf+2,w
  2435  011E  024B               	subwf	printf@val+1,w
  2436  011F  1D03               	skipz
  2437  0120  2923               	goto	u1795
  2438  0121  0845               	movf	??_printf+1,w
  2439  0122  024A               	subwf	printf@val,w
  2440  0123                     u1795:	
  2441  0123  1C03               	btfss	3,0
  2442  0124  2933               	goto	l1855
  2443                           
  2444                           ;doprnt.c: 1318: break;
  2445  0125  3001               	movlw	1
  2446  0126  00C4               	movwf	??_printf
  2447  0127  0844               	movf	??_printf,w
  2448  0128  07D0               	addwf	printf@c,f
  2449  0129  2908               	goto	L5
  2450  012A                     l1853:	
  2451                           ;doprnt.c: 1336: }
  2452                           
  2453                           ;doprnt.c: 1320: break;
  2454                           
  2455  012A  084C               	movf	printf@flag,w
  2456  012B  39C0               	andlw	192
  2457                           
  2458                           ; Switch size 1, requested type "space"
  2459                           ; Number of cases is 2, Range of values is 128 to 192
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte            7     4 (average)
  2463                           ; direct_byte          206    11 (fixed)
  2464                           ; jumptable            263     9 (fixed)
  2465                           ;	Chosen strategy is simple_byte
  2466  012C  3A80               	xorlw	128	; case 128
  2467  012D  1903               	skipnz
  2468  012E  2906               	goto	l334
  2469  012F  3A40               	xorlw	64	; case 192
  2470  0130  1903               	skipnz
  2471  0131  28E2               	goto	l329
  2472  0132  2933               	goto	l1855
  2473  0133                     l1855:	
  2474                           
  2475                           ;doprnt.c: 1381: if(width > c)
  2476  0133  0850               	movf	printf@c,w
  2477  0134  00C4               	movwf	??_printf
  2478  0135  01C5               	clrf	??_printf+1
  2479  0136  1BC4               	btfsc	??_printf,7
  2480  0137  03C5               	decf	??_printf+1,f
  2481  0138  0845               	movf	??_printf+1,w
  2482  0139  3A80               	xorlw	128
  2483  013A  00C6               	movwf	??_printf+2
  2484  013B  084E               	movf	printf@width+1,w
  2485  013C  3A80               	xorlw	128
  2486  013D  0246               	subwf	??_printf+2,w
  2487  013E  1D03               	skipz
  2488  013F  2942               	goto	u1815
  2489  0140  084D               	movf	printf@width,w
  2490  0141  0244               	subwf	??_printf,w
  2491  0142                     u1815:	
  2492  0142  1803               	skipnc
  2493  0143  2952               	goto	l1859
  2494                           
  2495                           ;doprnt.c: 1382: width -= c;
  2496  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0146  0850               	movf	printf@c,w
  2499  0147  00C4               	movwf	??_printf
  2500  0148  01C5               	clrf	??_printf+1
  2501  0149  1BC4               	btfsc	??_printf,7
  2502  014A  03C5               	decf	??_printf+1,f
  2503  014B  0844               	movf	??_printf,w
  2504  014C  02CD               	subwf	printf@width,f
  2505  014D  0845               	movf	??_printf+1,w
  2506  014E  1C03               	skipc
  2507  014F  03CE               	decf	printf@width+1,f
  2508  0150  02CE               	subwf	printf@width+1,f
  2509  0151  2956               	goto	l1861
  2510  0152                     l1859:	
  2511                           
  2512                           ;doprnt.c: 1383: else
  2513                           ;doprnt.c: 1384: width = 0;
  2514  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0153  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0154  01CD               	clrf	printf@width
  2517  0155  01CE               	clrf	printf@width+1
  2518  0156                     l1861:	
  2519                           
  2520                           ;doprnt.c: 1387: if(flag & 0x04) {
  2521  0156  1D4C               	btfss	printf@flag,2
  2522  0157  296B               	goto	l1869
  2523  0158                     L6:	
  2524                           
  2525                           ;doprnt.c: 1415: if(width)
  2526  0158  084D               	movf	printf@width,w
  2527  0159  044E               	iorwf	printf@width+1,w
  2528  015A  1903               	btfsc	3,2
  2529  015B  2981               	goto	l1875
  2530                           
  2531                           ;doprnt.c: 1417: (putch('0') );
  2532                           
  2533                           ;doprnt.c: 1416: do
  2534  015C  3030               	movlw	48
  2535  015D  120A  158A  2738  120A  118A  	fcall	_putch
  2536                           
  2537                           ;doprnt.c: 1418: while(--width);
  2538  0162  30FF               	movlw	255
  2539  0163  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0164  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0165  07CD               	addwf	printf@width,f
  2542  0166  1803               	skipnc
  2543  0167  0ACE               	incf	printf@width+1,f
  2544  0168  30FF               	movlw	255
  2545  0169  07CE               	addwf	printf@width+1,f
  2546  016A  2958               	goto	L6
  2547  016B                     l1869:	
  2548                           ;doprnt.c: 1420: } else
  2549                           
  2550                           
  2551                           ;doprnt.c: 1422: {
  2552                           ;doprnt.c: 1424: if(width
  2553                           ;doprnt.c: 1428: )
  2554  016B  084D               	movf	printf@width,w
  2555  016C  044E               	iorwf	printf@width+1,w
  2556  016D  1903               	btfsc	3,2
  2557  016E  2981               	goto	l1875
  2558  016F                     l1871:	
  2559                           ;doprnt.c: 1429: do
  2560                           
  2561                           
  2562                           ;doprnt.c: 1430: (putch(' ') );
  2563  016F  3020               	movlw	32
  2564  0170  120A  158A  2738  120A  118A  	fcall	_putch
  2565                           
  2566                           ;doprnt.c: 1431: while(--width);
  2567  0175  30FF               	movlw	255
  2568  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0178  07CD               	addwf	printf@width,f
  2571  0179  1803               	skipnc
  2572  017A  0ACE               	incf	printf@width+1,f
  2573  017B  30FF               	movlw	255
  2574  017C  07CE               	addwf	printf@width+1,f
  2575  017D  084D               	movf	printf@width,w
  2576  017E  044E               	iorwf	printf@width+1,w
  2577  017F  1D03               	btfss	3,2
  2578  0180  296F               	goto	l1871
  2579  0181                     l1875:	
  2580                           
  2581                           ;doprnt.c: 1469: }
  2582                           ;doprnt.c: 1472: prec = c;
  2583  0181  0850               	movf	printf@c,w
  2584  0182  00C4               	movwf	??_printf
  2585  0183  0844               	movf	??_printf,w
  2586  0184  00C9               	movwf	printf@prec
  2587                           
  2588                           ;doprnt.c: 1474: while(prec--) {
  2589  0185  29E8               	goto	l1889
  2590  0186                     l1877:	
  2591                           ;doprnt.c: 1478: {
  2592                           ;doprnt.c: 1486: case 0xC0:
  2593                           
  2594                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
  2595                           
  2596                           
  2597                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2598  0186  300A               	movlw	10
  2599  0187  00BC               	movwf	___lwmod@divisor
  2600  0188  3000               	movlw	0
  2601  0189  00BD               	movwf	___lwmod@divisor+1
  2602  018A  0849               	movf	printf@prec,w
  2603  018B  00C4               	movwf	??_printf
  2604  018C  0744               	addwf	??_printf,w
  2605  018D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2606  018E  0084               	movwf	4
  2607  018F  120A  118A  2500  120A  118A  	fcall	stringdir
  2608  0194  00B4               	movwf	___lwdiv@divisor
  2609  0195  120A  118A  2500  120A  118A  	fcall	stringdir
  2610  019A  00B5               	movwf	___lwdiv@divisor+1
  2611  019B  084B               	movf	printf@val+1,w
  2612  019C  00B7               	movwf	___lwdiv@dividend+1
  2613  019D  084A               	movf	printf@val,w
  2614  019E  00B6               	movwf	___lwdiv@dividend
  2615  019F  120A  118A  2710  120A  118A  	fcall	___lwdiv
  2616  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2617  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2618  01A6  0835               	movf	?___lwdiv+1,w
  2619  01A7  00BF               	movwf	___lwmod@dividend+1
  2620  01A8  0834               	movf	?___lwdiv,w
  2621  01A9  00BE               	movwf	___lwmod@dividend
  2622  01AA  120A  118A  278A  120A  118A  	fcall	___lwmod
  2623  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2624  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2625  01B1  083C               	movf	?___lwmod,w
  2626  01B2  3E30               	addlw	48
  2627  01B3  00C5               	movwf	??_printf+1
  2628  01B4  0845               	movf	??_printf+1,w
  2629  01B5  29E1               	goto	L3
  2630  01B6                     l1879:	
  2631                           ;doprnt.c: 1497: case 0x80:
  2632                           
  2633                           ;doprnt.c: 1491: break;
  2634                           
  2635                           
  2636                           ;doprnt.c: 1499: {
  2637                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2638  01B6  0849               	movf	printf@prec,w
  2639  01B7  00C4               	movwf	??_printf
  2640  01B8  0744               	addwf	??_printf,w
  2641  01B9  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2642  01BA  0084               	movwf	4
  2643  01BB  120A  118A  2500  120A  118A  	fcall	stringdir
  2644  01C0  00B4               	movwf	___lwdiv@divisor
  2645  01C1  120A  118A  2500  120A  118A  	fcall	stringdir
  2646  01C6  00B5               	movwf	___lwdiv@divisor+1
  2647  01C7  084B               	movf	printf@val+1,w
  2648  01C8  00B7               	movwf	___lwdiv@dividend+1
  2649  01C9  084A               	movf	printf@val,w
  2650  01CA  00B6               	movwf	___lwdiv@dividend
  2651  01CB  120A  118A  2710  120A  118A  	fcall	___lwdiv
  2652  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2653  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2654  01D2  0834               	movf	?___lwdiv,w
  2655  01D3  390F               	andlw	15
  2656  01D4  00C5               	movwf	??_printf+1
  2657  01D5  0845               	movf	??_printf+1,w
  2658  01D6  00C7               	movwf	printf@idx
  2659                           
  2660                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  2661  01D7  0847               	movf	printf@idx,w
  2662  01D8  3E84               	addlw	low ((STR_8-__stringbase)| (0+32768))
  2663  01D9  0084               	movwf	4
  2664  01DA  120A  118A  2500  120A  118A  	fcall	stringdir
  2665  01DF  00C4               	movwf	??_printf
  2666  01E0  0844               	movf	??_printf,w
  2667  01E1                     L3:	
  2668  01E1  00D0               	movwf	printf@c
  2669  01E2                     l1887:	
  2670                           ;doprnt.c: 1523: }
  2671                           
  2672                           ;doprnt.c: 1508: }
  2673                           ;doprnt.c: 1510: break;
  2674                           
  2675                           
  2676                           ;doprnt.c: 1524: (putch(c) );
  2677  01E2  0850               	movf	printf@c,w
  2678  01E3  120A  158A  2738  120A  118A  	fcall	_putch
  2679  01E8                     l1889:	
  2680  01E8  30FF               	movlw	255
  2681  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2682  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2683  01EB  00C4               	movwf	??_printf
  2684  01EC  0844               	movf	??_printf,w
  2685  01ED  07C9               	addwf	printf@prec,f
  2686  01EE  0A49               	incf	printf@prec,w
  2687  01EF  1903               	btfsc	3,2
  2688  01F0  2832               	goto	l1891
  2689  01F1  084C               	movf	printf@flag,w
  2690  01F2  39C0               	andlw	192
  2691                           
  2692                           ; Switch size 1, requested type "space"
  2693                           ; Number of cases is 2, Range of values is 128 to 192
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte            7     4 (average)
  2697                           ; direct_byte          206    11 (fixed)
  2698                           ; jumptable            263     9 (fixed)
  2699                           ;	Chosen strategy is simple_byte
  2700  01F3  3A80               	xorlw	128	; case 128
  2701  01F4  1903               	skipnz
  2702  01F5  29B6               	goto	l1879
  2703  01F6  3A40               	xorlw	64	; case 192
  2704  01F7  1903               	skipnz
  2705  01F8  2986               	goto	l1877
  2706  01F9  29E2               	goto	l1887
  2707  01FA  29E2               	goto	l1887
  2708  01FB                     l356:	
  2709                           ;doprnt.c: 1540: return 0;
  2710                           ;	Return value of _printf is never used
  2711                           
  2712                           ;doprnt.c: 1525: }
  2713                           ;doprnt.c: 1533: }
  2714                           ;doprnt.c: 1535: alldone:
  2715                           
  2716  01FB  0008               	return
  2717  01FC                     __end_of_printf:	
  2718                           
  2719                           	psect	text11
  2720  0F38                     __ptext11:	
  2721 ;; *************** function _putch *****************
  2722 ;; Defined at:
  2723 ;;		line 46 in file "usart.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  byte            1    wreg     unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  byte            1   20[BANK0 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;		None               void
  2730 ;; Registers used:
  2731 ;;		wreg
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         0       0       0       0       0
  2738 ;;      Locals:         0       1       0       0       0
  2739 ;;      Temps:          0       0       0       0       0
  2740 ;;      Totals:         0       1       0       0       0
  2741 ;;Total ram usage:        1 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    3
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_printf
  2748 ;;		_getche
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _putch
  2754  0F38                     _putch:	
  2755                           
  2756                           ;incstack = 0
  2757                           ; Regs used in _putch: [wreg]
  2758                           ;putch@byte stored from wreg
  2759  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0F3A  00B4               	movwf	putch@byte
  2762  0F3B                     l178:	
  2763                           ;usart.c: 49: continue;
  2764                           
  2765                           ;usart.c: 48: while (!TXIF)
  2766                           
  2767  0F3B  1E0C               	btfss	12,4	;volatile
  2768  0F3C  2F3B               	goto	l178
  2769                           
  2770                           ;usart.c: 50: TXREG = byte;
  2771  0F3D  0834               	movf	putch@byte,w
  2772  0F3E  0099               	movwf	25	;volatile
  2773  0F3F  0008               	return
  2774  0F40                     __end_of_putch:	
  2775                           
  2776                           	psect	text12
  2777  07F0                     __ptext12:	
  2778 ;; *************** function _isdigit *****************
  2779 ;; Defined at:
  2780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  c               1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  c               1   21[BANK0 ] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;		None               void
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         0       2       0       0       0
  2796 ;;      Temps:          0       0       0       0       0
  2797 ;;      Totals:         0       2       0       0       0
  2798 ;;Total ram usage:        2 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    3
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_printf
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _isdigit
  2810  07F0                     _isdigit:	
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2814                           ;isdigit@c stored from wreg
  2815  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  2816  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  2817  07F2  00B5               	movwf	isdigit@c
  2818  07F3  01B4               	clrf	_isdigit$805
  2819  07F4  303A               	movlw	58
  2820  07F5  0235               	subwf	isdigit@c,w
  2821  07F6  1803               	skipnc
  2822  07F7  2FFE               	goto	l1571
  2823  07F8  3030               	movlw	48
  2824  07F9  0235               	subwf	isdigit@c,w
  2825  07FA  1C03               	skipc
  2826  07FB  2FFE               	goto	l1571
  2827  07FC  01B4               	clrf	_isdigit$805
  2828  07FD  0AB4               	incf	_isdigit$805,f
  2829  07FE                     l1571:	
  2830  07FE  0C34               	rrf	_isdigit$805,w
  2831  07FF  0008               	return
  2832  0800                     __end_of_isdigit:	
  2833                           
  2834                           	psect	text13
  2835  04A6                     __ptext13:	
  2836 ;; *************** function ___wmul *****************
  2837 ;; Defined at:
  2838 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  multiplier      2   20[BANK0 ] unsigned int 
  2841 ;;  multiplicand    2   22[BANK0 ] unsigned int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  product         2   24[BANK0 ] unsigned int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2   20[BANK0 ] unsigned int 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       4       0       0       0
  2854 ;;      Locals:         0       2       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         0       6       0       0       0
  2857 ;;Total ram usage:        6 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    3
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_printf
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           
  2868                           ;psect for function ___wmul
  2869  04A6                     ___wmul:	
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2873  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2874  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2875  04A8  01B8               	clrf	___wmul@product
  2876  04A9  01B9               	clrf	___wmul@product+1
  2877  04AA                     l1577:	
  2878  04AA  1C34               	btfss	___wmul@multiplier,0
  2879  04AB  2CB2               	goto	l440
  2880  04AC  0836               	movf	___wmul@multiplicand,w
  2881  04AD  07B8               	addwf	___wmul@product,f
  2882  04AE  1803               	skipnc
  2883  04AF  0AB9               	incf	___wmul@product+1,f
  2884  04B0  0837               	movf	___wmul@multiplicand+1,w
  2885  04B1  07B9               	addwf	___wmul@product+1,f
  2886  04B2                     l440:	
  2887  04B2  3001               	movlw	1
  2888  04B3                     u1275:	
  2889  04B3  1003               	clrc
  2890  04B4  0DB6               	rlf	___wmul@multiplicand,f
  2891  04B5  0DB7               	rlf	___wmul@multiplicand+1,f
  2892  04B6  3EFF               	addlw	-1
  2893  04B7  1D03               	skipz
  2894  04B8  2CB3               	goto	u1275
  2895  04B9  3001               	movlw	1
  2896  04BA                     u1285:	
  2897  04BA  1003               	clrc
  2898  04BB  0CB5               	rrf	___wmul@multiplier+1,f
  2899  04BC  0CB4               	rrf	___wmul@multiplier,f
  2900  04BD  3EFF               	addlw	-1
  2901  04BE  1D03               	skipz
  2902  04BF  2CBA               	goto	u1285
  2903  04C0  0834               	movf	___wmul@multiplier,w
  2904  04C1  0435               	iorwf	___wmul@multiplier+1,w
  2905  04C2  1D03               	btfss	3,2
  2906  04C3  2CAA               	goto	l1577
  2907  04C4  0839               	movf	___wmul@product+1,w
  2908  04C5  00B5               	movwf	?___wmul+1
  2909  04C6  0838               	movf	___wmul@product,w
  2910  04C7  00B4               	movwf	?___wmul
  2911  04C8  0008               	return
  2912  04C9                     __end_of___wmul:	
  2913                           
  2914                           	psect	text14
  2915  078A                     __ptext14:	
  2916 ;; *************** function ___lwmod *****************
  2917 ;; Defined at:
  2918 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  divisor         2   28[BANK0 ] unsigned int 
  2921 ;;  dividend        2   30[BANK0 ] unsigned int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  counter         1   33[BANK0 ] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2   28[BANK0 ] unsigned int 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       4       0       0       0
  2934 ;;      Locals:         0       1       0       0       0
  2935 ;;      Temps:          0       1       0       0       0
  2936 ;;      Totals:         0       6       0       0       0
  2937 ;;Total ram usage:        6 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    3
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_printf
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function ___lwmod
  2949  078A                     ___lwmod:	
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2953  078A  1283               	bcf	3,5	;RP0=0, select bank0
  2954  078B  1303               	bcf	3,6	;RP1=0, select bank0
  2955  078C  083C               	movf	___lwmod@divisor,w
  2956  078D  043D               	iorwf	___lwmod@divisor+1,w
  2957  078E  1903               	btfsc	3,2
  2958  078F  2FB9               	goto	l1633
  2959  0790  01C1               	clrf	___lwmod@counter
  2960  0791  0AC1               	incf	___lwmod@counter,f
  2961  0792                     l1623:	
  2962  0792  1BBD               	btfsc	___lwmod@divisor+1,7
  2963  0793  2FA0               	goto	l1625
  2964  0794  3001               	movlw	1
  2965  0795                     u1385:	
  2966  0795  1003               	clrc
  2967  0796  0DBC               	rlf	___lwmod@divisor,f
  2968  0797  0DBD               	rlf	___lwmod@divisor+1,f
  2969  0798  3EFF               	addlw	-1
  2970  0799  1D03               	skipz
  2971  079A  2F95               	goto	u1385
  2972  079B  3001               	movlw	1
  2973  079C  00C0               	movwf	??___lwmod
  2974  079D  0840               	movf	??___lwmod,w
  2975  079E  07C1               	addwf	___lwmod@counter,f
  2976  079F  2F92               	goto	l1623
  2977  07A0                     l1625:	
  2978  07A0  083D               	movf	___lwmod@divisor+1,w
  2979  07A1  023F               	subwf	___lwmod@dividend+1,w
  2980  07A2  1D03               	skipz
  2981  07A3  2FA6               	goto	u1405
  2982  07A4  083C               	movf	___lwmod@divisor,w
  2983  07A5  023E               	subwf	___lwmod@dividend,w
  2984  07A6                     u1405:	
  2985  07A6  1C03               	skipc
  2986  07A7  2FAE               	goto	l1629
  2987  07A8  083C               	movf	___lwmod@divisor,w
  2988  07A9  02BE               	subwf	___lwmod@dividend,f
  2989  07AA  083D               	movf	___lwmod@divisor+1,w
  2990  07AB  1C03               	skipc
  2991  07AC  03BF               	decf	___lwmod@dividend+1,f
  2992  07AD  02BF               	subwf	___lwmod@dividend+1,f
  2993  07AE                     l1629:	
  2994  07AE  3001               	movlw	1
  2995  07AF                     u1415:	
  2996  07AF  1003               	clrc
  2997  07B0  0CBD               	rrf	___lwmod@divisor+1,f
  2998  07B1  0CBC               	rrf	___lwmod@divisor,f
  2999  07B2  3EFF               	addlw	-1
  3000  07B3  1D03               	skipz
  3001  07B4  2FAF               	goto	u1415
  3002  07B5  3001               	movlw	1
  3003  07B6  02C1               	subwf	___lwmod@counter,f
  3004  07B7  1D03               	btfss	3,2
  3005  07B8  2FA0               	goto	l1625
  3006  07B9                     l1633:	
  3007  07B9  083F               	movf	___lwmod@dividend+1,w
  3008  07BA  00BD               	movwf	?___lwmod+1
  3009  07BB  083E               	movf	___lwmod@dividend,w
  3010  07BC  00BC               	movwf	?___lwmod
  3011  07BD  0008               	return
  3012  07BE                     __end_of___lwmod:	
  3013                           
  3014                           	psect	text15
  3015  0710                     __ptext15:	
  3016 ;; *************** function ___lwdiv *****************
  3017 ;; Defined at:
  3018 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  divisor         2   20[BANK0 ] unsigned int 
  3021 ;;  dividend        2   22[BANK0 ] unsigned int 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  quotient        2   25[BANK0 ] unsigned int 
  3024 ;;  counter         1   27[BANK0 ] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2   20[BANK0 ] unsigned int 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3034 ;;      Params:         0       4       0       0       0
  3035 ;;      Locals:         0       3       0       0       0
  3036 ;;      Temps:          0       1       0       0       0
  3037 ;;      Totals:         0       8       0       0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    3
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_printf
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function ___lwdiv
  3050  0710                     ___lwdiv:	
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3054  0710  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0711  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0712  01B9               	clrf	___lwdiv@quotient
  3057  0713  01BA               	clrf	___lwdiv@quotient+1
  3058  0714  0834               	movf	___lwdiv@divisor,w
  3059  0715  0435               	iorwf	___lwdiv@divisor+1,w
  3060  0716  1903               	btfsc	3,2
  3061  0717  2F49               	goto	l1611
  3062  0718  01BB               	clrf	___lwdiv@counter
  3063  0719  0ABB               	incf	___lwdiv@counter,f
  3064  071A                     l1599:	
  3065  071A  1BB5               	btfsc	___lwdiv@divisor+1,7
  3066  071B  2F28               	goto	l1601
  3067  071C  3001               	movlw	1
  3068  071D                     u1315:	
  3069  071D  1003               	clrc
  3070  071E  0DB4               	rlf	___lwdiv@divisor,f
  3071  071F  0DB5               	rlf	___lwdiv@divisor+1,f
  3072  0720  3EFF               	addlw	-1
  3073  0721  1D03               	skipz
  3074  0722  2F1D               	goto	u1315
  3075  0723  3001               	movlw	1
  3076  0724  00B8               	movwf	??___lwdiv
  3077  0725  0838               	movf	??___lwdiv,w
  3078  0726  07BB               	addwf	___lwdiv@counter,f
  3079  0727  2F1A               	goto	l1599
  3080  0728                     l1601:	
  3081  0728  3001               	movlw	1
  3082  0729                     u1335:	
  3083  0729  1003               	clrc
  3084  072A  0DB9               	rlf	___lwdiv@quotient,f
  3085  072B  0DBA               	rlf	___lwdiv@quotient+1,f
  3086  072C  3EFF               	addlw	-1
  3087  072D  1D03               	skipz
  3088  072E  2F29               	goto	u1335
  3089  072F  0835               	movf	___lwdiv@divisor+1,w
  3090  0730  0237               	subwf	___lwdiv@dividend+1,w
  3091  0731  1D03               	skipz
  3092  0732  2F35               	goto	u1345
  3093  0733  0834               	movf	___lwdiv@divisor,w
  3094  0734  0236               	subwf	___lwdiv@dividend,w
  3095  0735                     u1345:	
  3096  0735  1C03               	skipc
  3097  0736  2F3E               	goto	l1607
  3098  0737  0834               	movf	___lwdiv@divisor,w
  3099  0738  02B6               	subwf	___lwdiv@dividend,f
  3100  0739  0835               	movf	___lwdiv@divisor+1,w
  3101  073A  1C03               	skipc
  3102  073B  03B7               	decf	___lwdiv@dividend+1,f
  3103  073C  02B7               	subwf	___lwdiv@dividend+1,f
  3104  073D  1439               	bsf	___lwdiv@quotient,0
  3105  073E                     l1607:	
  3106  073E  3001               	movlw	1
  3107  073F                     u1355:	
  3108  073F  1003               	clrc
  3109  0740  0CB5               	rrf	___lwdiv@divisor+1,f
  3110  0741  0CB4               	rrf	___lwdiv@divisor,f
  3111  0742  3EFF               	addlw	-1
  3112  0743  1D03               	skipz
  3113  0744  2F3F               	goto	u1355
  3114  0745  3001               	movlw	1
  3115  0746  02BB               	subwf	___lwdiv@counter,f
  3116  0747  1D03               	btfss	3,2
  3117  0748  2F28               	goto	l1601
  3118  0749                     l1611:	
  3119  0749  083A               	movf	___lwdiv@quotient+1,w
  3120  074A  00B5               	movwf	?___lwdiv+1
  3121  074B  0839               	movf	___lwdiv@quotient,w
  3122  074C  00B4               	movwf	?___lwdiv
  3123  074D  0008               	return
  3124  074E                     __end_of___lwdiv:	
  3125                           
  3126                           	psect	text16
  3127  0FAB                     __ptext16:	
  3128 ;; *************** function _configUSARTInterrupts *****************
  3129 ;; Defined at:
  3130 ;;		line 32 in file "usart.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;		None               void
  3137 ;; Registers used:
  3138 ;;		None
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    3
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _configUSARTInterrupts
  3160  0FAB                     _configUSARTInterrupts:	
  3161                           
  3162                           ;usart.c: 35: TXIE = 0;
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _configUSARTInterrupts: []
  3166  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0FAD  120C               	bcf	12,4	;volatile
  3169                           
  3170                           ;usart.c: 36: TXIF = 0;
  3171  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0FB0  120C               	bcf	12,4	;volatile
  3174                           
  3175                           ;usart.c: 39: RCIE = 1;
  3176  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  3178  0FB3  168C               	bsf	12,5	;volatile
  3179                           
  3180                           ;usart.c: 40: RCIF = 0;
  3181  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0FB6  128C               	bcf	12,5	;volatile
  3184                           
  3185                           ;usart.c: 42: PEIE = 1;
  3186  0FB7  170B               	bsf	11,6	;volatile
  3187                           
  3188                           ;usart.c: 43: GIE = 1;
  3189  0FB8  178B               	bsf	11,7	;volatile
  3190  0FB9  0008               	return
  3191  0FBA                     __end_of_configUSARTInterrupts:	
  3192                           
  3193                           	psect	text17
  3194  0F90                     __ptext17:	
  3195 ;; *************** function _configTimer *****************
  3196 ;; Defined at:
  3197 ;;		line 17 in file "timer0.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		None
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    3
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function _configTimer
  3227  0F90                     _configTimer:	
  3228                           
  3229                           ;timer0.c: 18: OPTION_REGbits.T0CS = 0;
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in _configTimer: []
  3233  0F90  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0F91  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0F92  1281               	bcf	1,5	;volatile
  3236                           
  3237                           ;timer0.c: 19: OPTION_REGbits.T0SE = 0;
  3238  0F93  1201               	bcf	1,4	;volatile
  3239                           
  3240                           ;timer0.c: 20: OPTION_REGbits.PSA = 0;
  3241  0F94  1181               	bcf	1,3	;volatile
  3242                           
  3243                           ;timer0.c: 24: OPTION_REGbits.PS2 = 1;
  3244  0F95  1501               	bsf	1,2	;volatile
  3245                           
  3246                           ;timer0.c: 25: OPTION_REGbits.PS1 = 0;
  3247  0F96  1081               	bcf	1,1	;volatile
  3248                           
  3249                           ;timer0.c: 26: OPTION_REGbits.PS0 = 1;
  3250  0F97  1401               	bsf	1,0	;volatile
  3251                           
  3252                           ;timer0.c: 30: INTCONbits.TMR0IF = 0;
  3253  0F98  110B               	bcf	11,2	;volatile
  3254                           
  3255                           ;timer0.c: 31: INTCONbits.TMR0IE = 1;
  3256  0F99  168B               	bsf	11,5	;volatile
  3257                           
  3258                           ;timer0.c: 32: INTCONbits.GIE = 1;
  3259  0F9A  178B               	bsf	11,7	;volatile
  3260                           
  3261                           ;timer0.c: 33: INTCONbits.PEIE = 1;
  3262  0F9B  170B               	bsf	11,6	;volatile
  3263  0F9C  0008               	return
  3264  0F9D                     __end_of_configTimer:	
  3265                           
  3266                           	psect	text18
  3267  04EA                     __ptext18:	
  3268 ;; *************** function _configRS232 *****************
  3269 ;; Defined at:
  3270 ;;		line 9 in file "usart.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;		None               void
  3277 ;; Registers used:
  3278 ;;		wreg
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    3
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _configRS232
  3300  04EA                     _configRS232:	
  3301                           
  3302                           ;usart.c: 13: TX9 = 0;
  3303                           
  3304                           ;incstack = 0
  3305                           ; Regs used in _configRS232: [wreg]
  3306  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  3307  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  3308  04EC  1318               	bcf	24,6	;volatile
  3309                           
  3310                           ;usart.c: 14: TXEN = 1;
  3311  04ED  1698               	bsf	24,5	;volatile
  3312                           
  3313                           ;usart.c: 15: SYNC = 0;
  3314  04EE  1218               	bcf	24,4	;volatile
  3315                           
  3316                           ;usart.c: 16: BRGH = 1;
  3317  04EF  1518               	bsf	24,2	;volatile
  3318                           
  3319                           ;usart.c: 19: SPEN = 1;
  3320  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3321  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3322  04F2  1798               	bsf	24,7	;volatile
  3323                           
  3324                           ;usart.c: 20: RX9 = 0;
  3325  04F3  1318               	bcf	24,6	;volatile
  3326                           
  3327                           ;usart.c: 21: CREN = 1;
  3328  04F4  1618               	bsf	24,4	;volatile
  3329                           
  3330                           ;usart.c: 27: SPBRG = 129;
  3331  04F5  3081               	movlw	129
  3332  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3333  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  3334  04F8  0099               	movwf	25	;volatile
  3335  04F9  0008               	return
  3336  04FA                     __end_of_configRS232:	
  3337                           
  3338                           	psect	text19
  3339  0F60                     __ptext19:	
  3340 ;; *************** function _configADInterrupt *****************
  3341 ;; Defined at:
  3342 ;;		line 11 in file "ad.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		None
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0
  3359 ;;      Totals:         0       0       0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function _configADInterrupt
  3372  0F60                     _configADInterrupt:	
  3373                           
  3374                           ;ad.c: 12: PIR1bits.ADIF = 0;
  3375                           
  3376                           ;incstack = 0
  3377                           ; Regs used in _configADInterrupt: []
  3378  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  3380  0F62  130C               	bcf	12,6	;volatile
  3381                           
  3382                           ;ad.c: 13: PIE1bits.ADIE = 1;
  3383  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0F65  170C               	bsf	12,6	;volatile
  3386                           
  3387                           ;ad.c: 15: INTCONbits.GIE = 1;
  3388  0F66  178B               	bsf	11,7	;volatile
  3389                           
  3390                           ;ad.c: 16: INTCONbits.PEIE = 1;
  3391  0F67  170B               	bsf	11,6	;volatile
  3392  0F68  0008               	return
  3393  0F69                     __end_of_configADInterrupt:	
  3394                           
  3395                           	psect	text20
  3396  0FBA                     __ptext20:	
  3397 ;; *************** function _configAD *****************
  3398 ;; Defined at:
  3399 ;;		line 19 in file "ad.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		None
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    3
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _configAD
  3429  0FBA                     _configAD:	
  3430                           
  3431                           ;ad.c: 20: ADCON0bits.ADON = 1;
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _configAD: []
  3435  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0FBC  141F               	bsf	31,0	;volatile
  3438                           
  3439                           ;ad.c: 24: ADFM = 1;
  3440  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0FBF  179F               	bsf	31,7	;volatile
  3443                           
  3444                           ;ad.c: 27: ADCON1bits.PCFG3 = 0;
  3445  0FC0  119F               	bcf	31,3	;volatile
  3446                           
  3447                           ;ad.c: 28: ADCON1bits.PCFG2 = 1;
  3448  0FC1  151F               	bsf	31,2	;volatile
  3449                           
  3450                           ;ad.c: 29: ADCON1bits.PCFG1 = 0;
  3451  0FC2  109F               	bcf	31,1	;volatile
  3452                           
  3453                           ;ad.c: 30: ADCON1bits.PCFG0 = 1;
  3454  0FC3  141F               	bsf	31,0	;volatile
  3455                           
  3456                           ;ad.c: 41: ADCS2 = 0;
  3457  0FC4  131F               	bcf	31,6	;volatile
  3458                           
  3459                           ;ad.c: 42: ADCS1 = 1;
  3460  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  3462  0FC7  179F               	bsf	31,7	;volatile
  3463                           
  3464                           ;ad.c: 43: ADCS0 = 0;
  3465  0FC8  131F               	bcf	31,6	;volatile
  3466  0FC9  0008               	return
  3467  0FCA                     __end_of_configAD:	
  3468                           
  3469                           	psect	text21
  3470  0FE4                     __ptext21:	
  3471 ;; *************** function _InitI2C_Master *****************
  3472 ;; Defined at:
  3473 ;;		line 12 in file "i2c.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;		None               void
  3480 ;; Registers used:
  3481 ;;		wreg, status,2
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    3
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _InitI2C_Master
  3503  0FE4                     _InitI2C_Master:	
  3504                           
  3505                           ;i2c.c: 14: RC4 = 1;
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in _InitI2C_Master: [wreg+status,2]
  3509  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0FE6  1607               	bsf	7,4	;volatile
  3512                           
  3513                           ;i2c.c: 15: RC3 = 1;
  3514  0FE7  1587               	bsf	7,3	;volatile
  3515                           
  3516                           ;i2c.c: 17: SSPADD = ( 20000000 / (4*100000) ) - 1;
  3517  0FE8  3031               	movlw	49
  3518  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0FEA  1303               	bcf	3,6	;RP1=0, select bank1
  3520  0FEB  0093               	movwf	19	;volatile
  3521                           
  3522                           ;i2c.c: 20: SSPIF = 0;
  3523  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0FEE  118C               	bcf	12,3	;volatile
  3526                           
  3527                           ;i2c.c: 23: SSPSTAT = 0;
  3528  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  3530  0FF1  0194               	clrf	20	;volatile
  3531                           
  3532                           ;i2c.c: 24: SSPSTATbits.SMP = 1;
  3533  0FF2  1794               	bsf	20,7	;volatile
  3534                           
  3535                           ;i2c.c: 25: SSPSTATbits.CKE = 0;
  3536  0FF3  1314               	bcf	20,6	;volatile
  3537                           
  3538                           ;i2c.c: 29: WCOL = 0;
  3539  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0FF6  1394               	bcf	20,7	;volatile
  3542                           
  3543                           ;i2c.c: 30: SSPOV = 0;
  3544  0FF7  1314               	bcf	20,6	;volatile
  3545                           
  3546                           ;i2c.c: 31: SSPEN = 0;
  3547  0FF8  1294               	bcf	20,5	;volatile
  3548                           
  3549                           ;i2c.c: 32: CKP = 0;
  3550  0FF9  1214               	bcf	20,4	;volatile
  3551                           
  3552                           ;i2c.c: 34: SSPM3 = 0;
  3553  0FFA  1194               	bcf	20,3	;volatile
  3554                           
  3555                           ;i2c.c: 35: SSPM2 = 1;
  3556  0FFB  1514               	bsf	20,2	;volatile
  3557                           
  3558                           ;i2c.c: 36: SSPM1 = 1;
  3559  0FFC  1494               	bsf	20,1	;volatile
  3560                           
  3561                           ;i2c.c: 37: SSPM0 = 0;
  3562  0FFD  1014               	bcf	20,0	;volatile
  3563                           
  3564                           ;i2c.c: 39: SSPEN = 1;
  3565  0FFE  1694               	bsf	20,5	;volatile
  3566  0FFF  0008               	return
  3567  1000                     __end_of_InitI2C_Master:	
  3568                           
  3569                           	psect	text22
  3570  05B0                     __ptext22:	
  3571 ;; *************** function _interruptions *****************
  3572 ;; Defined at:
  3573 ;;		line 39 in file "main.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3587 ;;      Params:         0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0
  3589 ;;      Temps:          0       7       0       0       0
  3590 ;;      Totals:         0       7       0       0       0
  3591 ;;Total ram usage:        7 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    2
  3594 ;; This function calls:
  3595 ;;		___awmod
  3596 ;;		_strcpy
  3597 ;;		i1_printf
  3598 ;; This function is called by:
  3599 ;;		Interrupt level 1
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _interruptions
  3605  05B0                     _interruptions:	
  3606                           
  3607                           ;main.c: 41: if (RCIF){
  3608  05B0  1E8C               	btfss	12,5	;volatile
  3609  05B1  2E08               	goto	i1l2091
  3610                           
  3611                           ;main.c: 42: if (FERR || OERR)
  3612  05B2  1918               	btfsc	24,2	;volatile
  3613  05B3  2DB6               	goto	i1l272
  3614  05B4  1C98               	btfss	24,1	;volatile
  3615  05B5  2DB9               	goto	i1l2067
  3616  05B6                     i1l272:	
  3617                           
  3618                           ;main.c: 43: {
  3619                           ;main.c: 44: CREN = 0;
  3620  05B6  1218               	bcf	24,4	;volatile
  3621                           
  3622                           ;main.c: 45: hasAnError = 1;
  3623  05B7  145A               	bsf	_hasAnError/(0+8),_hasAnError& (0+7)
  3624                           
  3625                           ;main.c: 46: CREN = 1;
  3626  05B8  1618               	bsf	24,4	;volatile
  3627  05B9                     i1l2067:	
  3628                           
  3629                           ;main.c: 47: }
  3630                           ;main.c: 49: receivedData = RCREG;
  3631  05B9  081A               	movf	26,w	;volatile
  3632  05BA  00AD               	movwf	??_interruptions
  3633  05BB  082D               	movf	??_interruptions,w
  3634  05BC  00DB               	movwf	_receivedData
  3635                           
  3636                           ;main.c: 51: if(receivedData == '\r')
  3637  05BD  300D               	movlw	13
  3638  05BE  065B               	xorwf	_receivedData,w
  3639  05BF  1D03               	btfss	3,2
  3640  05C0  2DDA               	goto	i1l2079
  3641                           
  3642                           ;main.c: 52: {
  3643                           ;main.c: 53: string_aux[i] = '\0';
  3644  05C1  0858               	movf	_i,w
  3645  05C2  3EBA               	addlw	(low (_string_aux| 0))& (0+255)
  3646  05C3  0084               	movwf	4
  3647  05C4  1383               	bcf	3,7	;select IRP bank1
  3648  05C5  0180               	clrf	0
  3649                           
  3650                           ;main.c: 54: strcpy(string,string_aux);
  3651  05C6  30BA               	movlw	(low (_string_aux| 0))& (0+255)
  3652  05C7  00AD               	movwf	??_interruptions
  3653  05C8  082D               	movf	??_interruptions,w
  3654  05C9  00F0               	movwf	strcpy@from
  3655  05CA  30A0               	movlw	(low (_string| 0))& (0+255)
  3656  05CB  120A  158A  27CA  120A  118A  	fcall	_strcpy
  3657                           
  3658                           ;main.c: 55: printf("\n\r");
  3659  05D0  30A8               	movlw	(low (((STR_7+4)-__stringbase)| (0+32768)))& (0+255)
  3660  05D1  120A  118A  21FC  120A  118A  	fcall	i1_printf
  3661                           
  3662                           ;main.c: 56: i = 0;
  3663  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3664  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3665  05D8  01D8               	clrf	_i
  3666                           
  3667                           ;main.c: 57: }else
  3668  05D9  2E08               	goto	i1l2091
  3669  05DA                     i1l2079:	
  3670                           
  3671                           ;main.c: 58: {
  3672                           ;main.c: 59: if(i < 25)
  3673  05DA  3019               	movlw	25
  3674  05DB  0258               	subwf	_i,w
  3675  05DC  1803               	skipnc
  3676  05DD  2E00               	goto	i1l2087
  3677                           
  3678                           ;main.c: 60: {
  3679                           ;main.c: 61: i = i%25;
  3680  05DE  3019               	movlw	25
  3681  05DF  00F0               	movwf	___awmod@divisor
  3682  05E0  3000               	movlw	0
  3683  05E1  00F1               	movwf	___awmod@divisor+1
  3684  05E2  0858               	movf	_i,w
  3685  05E3  00AD               	movwf	??_interruptions
  3686  05E4  01AE               	clrf	??_interruptions+1
  3687  05E5  082D               	movf	??_interruptions,w
  3688  05E6  00F2               	movwf	___awmod@dividend
  3689  05E7  082E               	movf	??_interruptions+1,w
  3690  05E8  00F3               	movwf	___awmod@dividend+1
  3691  05E9  120A  118A  2684  120A  118A  	fcall	___awmod
  3692  05EE  0870               	movf	?___awmod,w
  3693  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3694  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3695  05F1  00AF               	movwf	??_interruptions+2
  3696  05F2  082F               	movf	??_interruptions+2,w
  3697  05F3  00D8               	movwf	_i
  3698                           
  3699                           ;main.c: 62: string_aux[i] = receivedData;
  3700  05F4  085B               	movf	_receivedData,w
  3701  05F5  00AD               	movwf	??_interruptions
  3702  05F6  0858               	movf	_i,w
  3703  05F7  3EBA               	addlw	(low (_string_aux| 0))& (0+255)
  3704  05F8  0084               	movwf	4
  3705  05F9  082D               	movf	??_interruptions,w
  3706  05FA  1383               	bcf	3,7	;select IRP bank1
  3707  05FB  0080               	movwf	0
  3708                           
  3709                           ;main.c: 63: i++;
  3710  05FC  3001               	movlw	1
  3711  05FD  00AD               	movwf	??_interruptions
  3712  05FE  082D               	movf	??_interruptions,w
  3713  05FF  07D8               	addwf	_i,f
  3714  0600                     i1l2087:	
  3715                           
  3716                           ;main.c: 64: }
  3717                           ;main.c: 65: if(i == 25)
  3718  0600  3019               	movlw	25
  3719  0601  0658               	xorwf	_i,w
  3720  0602  1D03               	btfss	3,2
  3721  0603  2E08               	goto	i1l2091
  3722                           
  3723                           ;main.c: 66: i++;
  3724  0604  3001               	movlw	1
  3725  0605  00AD               	movwf	??_interruptions
  3726  0606  082D               	movf	??_interruptions,w
  3727  0607  07D8               	addwf	_i,f
  3728  0608                     i1l2091:	
  3729                           
  3730                           ;main.c: 67: }
  3731                           ;main.c: 68: }
  3732                           ;main.c: 70: if(PIR1bits.ADIF){
  3733  0608  1F0C               	btfss	12,6	;volatile
  3734  0609  2E14               	goto	i1l2099
  3735                           
  3736                           ;main.c: 71: data_ADC = ((ADRESH<<8) + ADRESL);
  3737  060A  081E               	movf	30,w	;volatile
  3738  060B  00D7               	movwf	_data_ADC+1
  3739  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3740  060D  1303               	bcf	3,6	;RP1=0, select bank1
  3741  060E  081E               	movf	30,w	;volatile
  3742  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0611  00D6               	movwf	_data_ADC
  3745                           
  3746                           ;main.c: 72: ADON = 1;
  3747  0612  141F               	bsf	31,0	;volatile
  3748                           
  3749                           ;main.c: 73: PIR1bits.ADIF = 0;
  3750  0613  130C               	bcf	12,6	;volatile
  3751  0614                     i1l2099:	
  3752                           
  3753                           ;main.c: 74: }
  3754                           ;main.c: 76: if(INTCONbits.TMR0IF){
  3755  0614  1D0B               	btfss	11,2	;volatile
  3756  0615  2E22               	goto	i1l279
  3757                           
  3758                           ;main.c: 77: val = ~val;
  3759  0616  3002               	movlw	(0+1) shl (_val& (0+7))
  3760  0617  06DA               	xorwf	_val/(0+8),f
  3761                           
  3762                           ;main.c: 78: PORTDbits.RD4 = val;
  3763  0618  1CDA               	btfss	_val/(0+8),_val& (0+7)
  3764  0619  2E1E               	goto	u223_20
  3765  061A  1283               	bcf	3,5	;RP0=0, select bank0
  3766  061B  1303               	bcf	3,6	;RP1=0, select bank0
  3767  061C  1608               	bsf	8,4	;volatile
  3768  061D  2E21               	goto	i1l2105
  3769  061E                     u223_20:	
  3770  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3771  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0620  1208               	bcf	8,4	;volatile
  3773  0621                     i1l2105:	
  3774                           
  3775                           ;main.c: 80: INTCONbits.TMR0IF = 0;
  3776  0621  110B               	bcf	11,2	;volatile
  3777  0622                     i1l279:	
  3778  0622  0833               	movf	??_interruptions+6,w
  3779  0623  00FF               	movwf	127
  3780  0624  0832               	movf	??_interruptions+5,w
  3781  0625  008A               	movwf	10
  3782  0626  0831               	movf	??_interruptions+4,w
  3783  0627  0084               	movwf	4
  3784  0628  0E30               	swapf	(??_interruptions+3)^0,w
  3785  0629  0083               	movwf	3
  3786  062A  0EFE               	swapf	126,f
  3787  062B  0E7E               	swapf	126,w
  3788  062C  0009               	retfie
  3789  062D                     __end_of_interruptions:	
  3790                           
  3791                           	psect	intentry
  3792  0004                     __pintentry:	
  3793                           ;incstack = 0
  3794                           ; Regs used in _interruptions: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3795                           
  3796  0004                     interrupt_function:	
  3797  007E                     saved_w	set	btemp
  3798  0004  00FE               	movwf	btemp
  3799  0005  0E03               	swapf	3,w
  3800  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0008  00B0               	movwf	??_interruptions+3
  3803  0009  0804               	movf	4,w
  3804  000A  00B1               	movwf	??_interruptions+4
  3805  000B  080A               	movf	10,w
  3806  000C  00B2               	movwf	??_interruptions+5
  3807  000D  087F               	movf	btemp+1,w
  3808  000E  00B3               	movwf	??_interruptions+6
  3809  000F  120A  118A  2DB0   	ljmp	_interruptions
  3810                           
  3811                           	psect	text23
  3812  01FC                     __ptext23:	
  3813 ;; *************** function i1_printf *****************
  3814 ;; Defined at:
  3815 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  f               1    wreg     PTR const unsigned char 
  3818 ;;		 -> STR_7(7), STR_6(15), STR_5(28), STR_4(27), 
  3819 ;;		 -> STR_3(25), STR_2(33), STR_1(3), 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  3822 ;;		 -> STR_7(7), STR_6(15), STR_5(28), STR_4(27), 
  3823 ;;		 -> STR_3(25), STR_2(33), STR_1(3), 
  3824 ;;  printf          4    0        struct .
  3825 ;;  printf          2   10[BANK0 ] int 
  3826 ;;  printf          2    8[BANK0 ] unsigned int 
  3827 ;;  printf          2    0        PTR const unsigned char 
  3828 ;;  printf          2    0        unsigned int 
  3829 ;;  printf          1   12[BANK0 ] char 
  3830 ;;  printf          1    7[BANK0 ] unsigned char 
  3831 ;;  printf          1    6[BANK0 ] char 
  3832 ;;  printf          1    5[BANK0 ] PTR void [1]
  3833 ;;		 -> ?i1_printf(2), ?_printf(2), 
  3834 ;;  printf          1    3[BANK0 ] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  2    0[None  ] int 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0      10       0       0       0
  3846 ;;      Temps:          0       3       0       0       0
  3847 ;;      Totals:         0      13       0       0       0
  3848 ;;Total ram usage:       13 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    1
  3851 ;; This function calls:
  3852 ;;		i1___lwdiv
  3853 ;;		i1___lwmod
  3854 ;;		i1___wmul
  3855 ;;		i1_isdigit
  3856 ;;		i1_putch
  3857 ;; This function is called by:
  3858 ;;		_interruptions
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function i1_printf
  3864  01FC                     i1_printf:	
  3865                           
  3866                           ;incstack = 0
  3867                           ; Regs used in i1_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3868                           ;i1printf@f stored from wreg
  3869  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  3870  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  3871  01FE  00A4               	movwf	i1printf@f
  3872                           
  3873                           ;doprnt.c: 466: va_list ap;
  3874                           ;doprnt.c: 499: signed char c;
  3875                           ;doprnt.c: 501: int width;
  3876                           ;doprnt.c: 506: signed char prec;
  3877                           ;doprnt.c: 508: unsigned char flag;
  3878                           ;doprnt.c: 523: union {
  3879                           ;doprnt.c: 524: unsigned long vd;
  3880                           ;doprnt.c: 525: double integ;
  3881                           ;doprnt.c: 526: } tmpval;
  3882                           ;doprnt.c: 528: unsigned int val;
  3883                           ;doprnt.c: 529: unsigned len;
  3884                           ;doprnt.c: 530: const char * cp;
  3885                           ;doprnt.c: 533: *ap = __va_start();
  3886  01FF  3070               	movlw	(low (?i1_printf| 0))& (0+255)
  3887  0200  00A0               	movwf	??i1_printf
  3888  0201  0820               	movf	??i1_printf,w
  3889  0202  00A5               	movwf	i1printf@ap
  3890  0203                     i1l2055:	
  3891                           ;doprnt.c: 536: while(c = *f++) {
  3892                           
  3893  0203  3001               	movlw	1
  3894  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0206  07A4               	addwf	i1printf@f,f
  3897  0207  30FF               	movlw	-1
  3898  0208  0724               	addwf	i1printf@f,w
  3899  0209  0084               	movwf	4
  3900  020A  120A  118A  2500  120A  118A  	fcall	stringdir
  3901  020F  00A0               	movwf	??i1_printf
  3902  0210  0820               	movf	??i1_printf,w
  3903  0211  00AC               	movwf	i1printf@c
  3904  0212  082C               	movf	i1printf@c,w
  3905  0213  1903               	btfsc	3,2
  3906  0214  0008               	return
  3907                           
  3908                           ;doprnt.c: 538: if(c != '%')
  3909  0215  3025               	movlw	37
  3910  0216  062C               	xorwf	i1printf@c,w
  3911  0217  1903               	btfsc	3,2
  3912  0218  2A20               	goto	i1l1965
  3913                           
  3914                           ;doprnt.c: 540: {
  3915                           ;doprnt.c: 541: (putch(c) );
  3916  0219  082C               	movf	i1printf@c,w
  3917  021A  120A  158A  2730  120A  118A  	fcall	i1_putch
  3918                           
  3919                           ;doprnt.c: 542: continue;
  3920  021F  2A03               	goto	i1l2055
  3921  0220                     i1l1965:	
  3922                           
  3923                           ;doprnt.c: 543: }
  3924                           ;doprnt.c: 546: width = 0;
  3925  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3927  0222  01AA               	clrf	i1printf@width
  3928  0223  01AB               	clrf	i1printf@width+1
  3929                           
  3930                           ;doprnt.c: 548: flag = 0;
  3931  0224  01A7               	clrf	i1printf@flag
  3932                           
  3933                           ;doprnt.c: 551: switch(*f) {
  3934                           
  3935                           ;doprnt.c: 550: for(;;) {
  3936  0225  2A2B               	goto	i1l1971
  3937  0226                     i1l313:	
  3938                           ;doprnt.c: 579: case '0':
  3939                           
  3940                           
  3941                           ;doprnt.c: 580: flag |= 0x04;
  3942  0226  1527               	bsf	i1printf@flag,2
  3943                           
  3944                           ;doprnt.c: 581: f++;
  3945  0227  3001               	movlw	1
  3946  0228  00A0               	movwf	??i1_printf
  3947  0229  0820               	movf	??i1_printf,w
  3948  022A  07A4               	addwf	i1printf@f,f
  3949  022B                     i1l1971:	
  3950                           ;doprnt.c: 584: }
  3951                           
  3952                           ;doprnt.c: 582: continue;
  3953                           
  3954  022B  0824               	movf	i1printf@f,w
  3955  022C  0084               	movwf	4
  3956  022D  120A  118A  2500  120A  118A  	fcall	stringdir
  3957                           
  3958                           ; Switch size 1, requested type "space"
  3959                           ; Number of cases is 1, Range of values is 48 to 48
  3960                           ; switch strategies available:
  3961                           ; Name         Instructions Cycles
  3962                           ; simple_byte            4     3 (average)
  3963                           ; direct_byte           14    11 (fixed)
  3964                           ; jumptable            263     9 (fixed)
  3965                           ;	Chosen strategy is simple_byte
  3966  0232  3A30               	xorlw	48	; case 48
  3967  0233  1903               	skipnz
  3968  0234  2A26               	goto	i1l313
  3969  0235  2A36               	goto	i1l1973
  3970  0236                     i1l1973:	
  3971                           ;doprnt.c: 586: }
  3972                           
  3973                           ;doprnt.c: 585: break;
  3974                           
  3975                           
  3976                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3977  0236  0824               	movf	i1printf@f,w
  3978  0237  0084               	movwf	4
  3979  0238  120A  118A  2500  120A  118A  	fcall	stringdir
  3980  023D  120A  158A  279D  120A  118A  	fcall	i1_isdigit
  3981  0242  1C03               	btfss	3,0
  3982  0243  2A8C               	goto	i1l1989
  3983                           
  3984                           ;doprnt.c: 598: width = 0;
  3985  0244  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0245  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0246  01AA               	clrf	i1printf@width
  3988  0247  01AB               	clrf	i1printf@width+1
  3989  0248                     i1l1977:	
  3990                           ;doprnt.c: 599: do {
  3991                           
  3992                           
  3993                           ;doprnt.c: 600: width *= 10;
  3994  0248  300A               	movlw	10
  3995  0249  00F0               	movwf	i1___wmul@multiplier
  3996  024A  3000               	movlw	0
  3997  024B  00F1               	movwf	i1___wmul@multiplier+1
  3998  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3999  024D  1303               	bcf	3,6	;RP1=0, select bank0
  4000  024E  082B               	movf	i1printf@width+1,w
  4001  024F  00F3               	movwf	i1___wmul@multiplicand+1
  4002  0250  082A               	movf	i1printf@width,w
  4003  0251  00F2               	movwf	i1___wmul@multiplicand
  4004  0252  120A  118A  24C9  120A  118A  	fcall	i1___wmul
  4005  0257  0871               	movf	?i1___wmul+1,w
  4006  0258  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0259  1303               	bcf	3,6	;RP1=0, select bank0
  4008  025A  00AB               	movwf	i1printf@width+1
  4009  025B  0870               	movf	?i1___wmul,w
  4010  025C  00AA               	movwf	i1printf@width
  4011                           
  4012                           ;doprnt.c: 601: width += *f++ - '0';
  4013  025D  0824               	movf	i1printf@f,w
  4014  025E  0084               	movwf	4
  4015  025F  120A  118A  2500  120A  118A  	fcall	stringdir
  4016  0264  3ED0               	addlw	208
  4017  0265  00A0               	movwf	??i1_printf
  4018  0266  30FF               	movlw	255
  4019  0267  1803               	skipnc
  4020  0268  3000               	movlw	0
  4021  0269  00A1               	movwf	??i1_printf+1
  4022  026A  0820               	movf	??i1_printf,w
  4023  026B  07AA               	addwf	i1printf@width,f
  4024  026C  1803               	skipnc
  4025  026D  0AAB               	incf	i1printf@width+1,f
  4026  026E  0821               	movf	??i1_printf+1,w
  4027  026F  07AB               	addwf	i1printf@width+1,f
  4028  0270  3001               	movlw	1
  4029  0271  00A0               	movwf	??i1_printf
  4030  0272  0820               	movf	??i1_printf,w
  4031  0273  07A4               	addwf	i1printf@f,f
  4032                           
  4033                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4034  0274  0824               	movf	i1printf@f,w
  4035  0275  0084               	movwf	4
  4036  0276  120A  118A  2500  120A  118A  	fcall	stringdir
  4037  027B  120A  158A  279D  120A  118A  	fcall	i1_isdigit
  4038  0280  1C03               	btfss	3,0
  4039  0281  2A8C               	goto	i1l1989
  4040  0282  2A48               	goto	i1l1977
  4041  0283                     i1l324:	
  4042                           ;doprnt.c: 712: case 'X':
  4043                           
  4044                           ;doprnt.c: 638: goto alldone;
  4045                           
  4046                           ;doprnt.c: 637: case 0:
  4047                           
  4048                           ;doprnt.c: 608: }
  4049                           ;doprnt.c: 635: switch(c = *f++) {
  4050                           
  4051                           
  4052                           ;doprnt.c: 718: case 'x':
  4053                           ;doprnt.c: 721: flag |= 0x80;
  4054  0283  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0284  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0285  17A7               	bsf	i1printf@flag,7
  4057                           
  4058                           ;doprnt.c: 723: break;
  4059  0286  2AA6               	goto	i1l1991
  4060  0287                     i1l1985:	
  4061                           ;doprnt.c: 817: case 'u':
  4062                           
  4063                           ;doprnt.c: 813: continue;
  4064                           
  4065                           ;doprnt.c: 802: default:
  4066                           
  4067                           
  4068                           ;doprnt.c: 818: flag |= 0xC0;
  4069  0287  30C0               	movlw	192
  4070  0288  00A0               	movwf	??i1_printf
  4071  0289  0820               	movf	??i1_printf,w
  4072  028A  04A7               	iorwf	i1printf@flag,f
  4073                           
  4074                           ;doprnt.c: 822: }
  4075                           
  4076                           ;doprnt.c: 819: break;
  4077  028B  2AA6               	goto	i1l1991
  4078  028C                     i1l1989:	
  4079  028C  3001               	movlw	1
  4080  028D  1283               	bcf	3,5	;RP0=0, select bank0
  4081  028E  1303               	bcf	3,6	;RP1=0, select bank0
  4082  028F  07A4               	addwf	i1printf@f,f
  4083  0290  30FF               	movlw	-1
  4084  0291  0724               	addwf	i1printf@f,w
  4085  0292  0084               	movwf	4
  4086  0293  120A  118A  2500  120A  118A  	fcall	stringdir
  4087  0298  00AC               	movwf	i1printf@c
  4088                           
  4089                           ; Switch size 1, requested type "space"
  4090                           ; Number of cases is 4, Range of values is 0 to 120
  4091                           ; switch strategies available:
  4092                           ; Name         Instructions Cycles
  4093                           ; simple_byte           13     7 (average)
  4094                           ; jumptable            260     6 (fixed)
  4095                           ;	Chosen strategy is simple_byte
  4096  0299  3A00               	xorlw	0	; case 0
  4097  029A  1903               	skipnz
  4098  029B  2BCA               	goto	i1l356
  4099  029C  3A58               	xorlw	88	; case 88
  4100  029D  1903               	skipnz
  4101  029E  2A83               	goto	i1l324
  4102  029F  3A2D               	xorlw	45	; case 117
  4103  02A0  1903               	skipnz
  4104  02A1  2A87               	goto	i1l1985
  4105  02A2  3A0D               	xorlw	13	; case 120
  4106  02A3  1903               	skipnz
  4107  02A4  2A83               	goto	i1l324
  4108  02A5  2A03               	goto	i1l2055
  4109  02A6                     i1l1991:	
  4110                           
  4111                           ;doprnt.c: 1273: {
  4112                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4113  02A6  0825               	movf	i1printf@ap,w
  4114  02A7  0084               	movwf	4
  4115  02A8  1383               	bcf	3,7	;select IRP bank0
  4116  02A9  0800               	movf	0,w
  4117  02AA  00A8               	movwf	i1printf@val
  4118  02AB  0A84               	incf	4,f
  4119  02AC  0800               	movf	0,w
  4120  02AD  00A9               	movwf	i1printf@val+1
  4121  02AE  3002               	movlw	2
  4122  02AF  00A0               	movwf	??i1_printf
  4123  02B0  0820               	movf	??i1_printf,w
  4124  02B1  07A5               	addwf	i1printf@ap,f
  4125                           
  4126                           ;doprnt.c: 1287: }
  4127                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  4128  02B2  2AFB               	goto	i1l2017
  4129  02B3                     i1l329:	
  4130                           ;doprnt.c: 1302: case 0xC0:
  4131                           
  4132                           
  4133                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4134  02B3  01AC               	clrf	i1printf@c
  4135  02B4  0AAC               	incf	i1printf@c,f
  4136  02B5                     L9:	
  4137  02B5  3005               	movlw	5
  4138  02B6  062C               	xorwf	i1printf@c,w
  4139  02B7  1903               	btfsc	3,2
  4140  02B8  2B04               	goto	i1l2019
  4141                           
  4142                           ;doprnt.c: 1306: if(val < dpowers[c])
  4143  02B9  082C               	movf	i1printf@c,w
  4144  02BA  00A0               	movwf	??i1_printf
  4145  02BB  0720               	addwf	??i1_printf,w
  4146  02BC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4147  02BD  0084               	movwf	4
  4148  02BE  120A  118A  2500  120A  118A  	fcall	stringdir
  4149  02C3  00A1               	movwf	??i1_printf+1
  4150  02C4  120A  118A  2500  120A  118A  	fcall	stringdir
  4151  02C9  00A2               	movwf	??i1_printf+2
  4152  02CA  0822               	movf	??i1_printf+2,w
  4153  02CB  0229               	subwf	i1printf@val+1,w
  4154  02CC  1D03               	skipz
  4155  02CD  2AD0               	goto	u202_25
  4156  02CE  0821               	movf	??i1_printf+1,w
  4157  02CF  0228               	subwf	i1printf@val,w
  4158  02D0                     u202_25:	
  4159  02D0  1C03               	btfss	3,0
  4160  02D1  2B04               	goto	i1l2019
  4161                           
  4162                           ;doprnt.c: 1307: break;
  4163  02D2  3001               	movlw	1
  4164  02D3  00A0               	movwf	??i1_printf
  4165  02D4  0820               	movf	??i1_printf,w
  4166  02D5  07AC               	addwf	i1printf@c,f
  4167  02D6  2AB5               	goto	L9
  4168  02D7                     i1l334:	
  4169                           ;doprnt.c: 1314: case 0x80:
  4170                           
  4171                           ;doprnt.c: 1309: break;
  4172                           
  4173                           
  4174                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4175  02D7  01AC               	clrf	i1printf@c
  4176  02D8  0AAC               	incf	i1printf@c,f
  4177  02D9                     L10:	
  4178  02D9  3004               	movlw	4
  4179  02DA  062C               	xorwf	i1printf@c,w
  4180  02DB  1903               	btfsc	3,2
  4181  02DC  2B04               	goto	i1l2019
  4182                           
  4183                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4184  02DD  082C               	movf	i1printf@c,w
  4185  02DE  00A0               	movwf	??i1_printf
  4186  02DF  0720               	addwf	??i1_printf,w
  4187  02E0  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4188  02E1  0084               	movwf	4
  4189  02E2  120A  118A  2500  120A  118A  	fcall	stringdir
  4190  02E7  00A1               	movwf	??i1_printf+1
  4191  02E8  120A  118A  2500  120A  118A  	fcall	stringdir
  4192  02ED  00A2               	movwf	??i1_printf+2
  4193  02EE  0822               	movf	??i1_printf+2,w
  4194  02EF  0229               	subwf	i1printf@val+1,w
  4195  02F0  1D03               	skipz
  4196  02F1  2AF4               	goto	u205_25
  4197  02F2  0821               	movf	??i1_printf+1,w
  4198  02F3  0228               	subwf	i1printf@val,w
  4199  02F4                     u205_25:	
  4200  02F4  1C03               	btfss	3,0
  4201  02F5  2B04               	goto	i1l2019
  4202                           
  4203                           ;doprnt.c: 1318: break;
  4204  02F6  3001               	movlw	1
  4205  02F7  00A0               	movwf	??i1_printf
  4206  02F8  0820               	movf	??i1_printf,w
  4207  02F9  07AC               	addwf	i1printf@c,f
  4208  02FA  2AD9               	goto	L10
  4209  02FB                     i1l2017:	
  4210                           ;doprnt.c: 1336: }
  4211                           
  4212                           ;doprnt.c: 1320: break;
  4213                           
  4214  02FB  0827               	movf	i1printf@flag,w
  4215  02FC  39C0               	andlw	192
  4216                           
  4217                           ; Switch size 1, requested type "space"
  4218                           ; Number of cases is 2, Range of values is 128 to 192
  4219                           ; switch strategies available:
  4220                           ; Name         Instructions Cycles
  4221                           ; simple_byte            7     4 (average)
  4222                           ; direct_byte          206    11 (fixed)
  4223                           ; jumptable            263     9 (fixed)
  4224                           ;	Chosen strategy is simple_byte
  4225  02FD  3A80               	xorlw	128	; case 128
  4226  02FE  1903               	skipnz
  4227  02FF  2AD7               	goto	i1l334
  4228  0300  3A40               	xorlw	64	; case 192
  4229  0301  1903               	skipnz
  4230  0302  2AB3               	goto	i1l329
  4231  0303  2B04               	goto	i1l2019
  4232  0304                     i1l2019:	
  4233                           
  4234                           ;doprnt.c: 1381: if(width > c)
  4235  0304  082C               	movf	i1printf@c,w
  4236  0305  00A0               	movwf	??i1_printf
  4237  0306  01A1               	clrf	??i1_printf+1
  4238  0307  1BA0               	btfsc	??i1_printf,7
  4239  0308  03A1               	decf	??i1_printf+1,f
  4240  0309  0821               	movf	??i1_printf+1,w
  4241  030A  3A80               	xorlw	128
  4242  030B  00A2               	movwf	??i1_printf+2
  4243  030C  082B               	movf	i1printf@width+1,w
  4244  030D  3A80               	xorlw	128
  4245  030E  0222               	subwf	??i1_printf+2,w
  4246  030F  1D03               	skipz
  4247  0310  2B13               	goto	u207_25
  4248  0311  082A               	movf	i1printf@width,w
  4249  0312  0220               	subwf	??i1_printf,w
  4250  0313                     u207_25:	
  4251  0313  1803               	skipnc
  4252  0314  2B23               	goto	i1l2023
  4253                           
  4254                           ;doprnt.c: 1382: width -= c;
  4255  0315  1283               	bcf	3,5	;RP0=0, select bank0
  4256  0316  1303               	bcf	3,6	;RP1=0, select bank0
  4257  0317  082C               	movf	i1printf@c,w
  4258  0318  00A0               	movwf	??i1_printf
  4259  0319  01A1               	clrf	??i1_printf+1
  4260  031A  1BA0               	btfsc	??i1_printf,7
  4261  031B  03A1               	decf	??i1_printf+1,f
  4262  031C  0820               	movf	??i1_printf,w
  4263  031D  02AA               	subwf	i1printf@width,f
  4264  031E  0821               	movf	??i1_printf+1,w
  4265  031F  1C03               	skipc
  4266  0320  03AB               	decf	i1printf@width+1,f
  4267  0321  02AB               	subwf	i1printf@width+1,f
  4268  0322  2B27               	goto	i1l2025
  4269  0323                     i1l2023:	
  4270                           
  4271                           ;doprnt.c: 1383: else
  4272                           ;doprnt.c: 1384: width = 0;
  4273  0323  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0324  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0325  01AA               	clrf	i1printf@width
  4276  0326  01AB               	clrf	i1printf@width+1
  4277  0327                     i1l2025:	
  4278                           
  4279                           ;doprnt.c: 1387: if(flag & 0x04) {
  4280  0327  1D27               	btfss	i1printf@flag,2
  4281  0328  2B3C               	goto	i1l2033
  4282  0329                     L11:	
  4283                           
  4284                           ;doprnt.c: 1415: if(width)
  4285  0329  082A               	movf	i1printf@width,w
  4286  032A  042B               	iorwf	i1printf@width+1,w
  4287  032B  1903               	btfsc	3,2
  4288  032C  2B52               	goto	i1l2039
  4289                           
  4290                           ;doprnt.c: 1417: (putch('0') );
  4291                           
  4292                           ;doprnt.c: 1416: do
  4293  032D  3030               	movlw	48
  4294  032E  120A  158A  2730  120A  118A  	fcall	i1_putch
  4295                           
  4296                           ;doprnt.c: 1418: while(--width);
  4297  0333  30FF               	movlw	255
  4298  0334  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0335  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0336  07AA               	addwf	i1printf@width,f
  4301  0337  1803               	skipnc
  4302  0338  0AAB               	incf	i1printf@width+1,f
  4303  0339  30FF               	movlw	255
  4304  033A  07AB               	addwf	i1printf@width+1,f
  4305  033B  2B29               	goto	L11
  4306  033C                     i1l2033:	
  4307                           ;doprnt.c: 1420: } else
  4308                           
  4309                           
  4310                           ;doprnt.c: 1422: {
  4311                           ;doprnt.c: 1424: if(width
  4312                           ;doprnt.c: 1428: )
  4313  033C  082A               	movf	i1printf@width,w
  4314  033D  042B               	iorwf	i1printf@width+1,w
  4315  033E  1903               	btfsc	3,2
  4316  033F  2B52               	goto	i1l2039
  4317  0340                     i1l2035:	
  4318                           ;doprnt.c: 1429: do
  4319                           
  4320                           
  4321                           ;doprnt.c: 1430: (putch(' ') );
  4322  0340  3020               	movlw	32
  4323  0341  120A  158A  2730  120A  118A  	fcall	i1_putch
  4324                           
  4325                           ;doprnt.c: 1431: while(--width);
  4326  0346  30FF               	movlw	255
  4327  0347  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0348  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0349  07AA               	addwf	i1printf@width,f
  4330  034A  1803               	skipnc
  4331  034B  0AAB               	incf	i1printf@width+1,f
  4332  034C  30FF               	movlw	255
  4333  034D  07AB               	addwf	i1printf@width+1,f
  4334  034E  082A               	movf	i1printf@width,w
  4335  034F  042B               	iorwf	i1printf@width+1,w
  4336  0350  1D03               	btfss	3,2
  4337  0351  2B40               	goto	i1l2035
  4338  0352                     i1l2039:	
  4339                           
  4340                           ;doprnt.c: 1469: }
  4341                           ;doprnt.c: 1472: prec = c;
  4342  0352  082C               	movf	i1printf@c,w
  4343  0353  00A0               	movwf	??i1_printf
  4344  0354  0820               	movf	??i1_printf,w
  4345  0355  00A6               	movwf	i1printf@prec
  4346                           
  4347                           ;doprnt.c: 1474: while(prec--) {
  4348  0356  2BB7               	goto	i1l2053
  4349  0357                     i1l2041:	
  4350                           ;doprnt.c: 1478: {
  4351                           ;doprnt.c: 1486: case 0xC0:
  4352                           
  4353                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
  4354                           
  4355                           
  4356                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4357  0357  300A               	movlw	10
  4358  0358  00F8               	movwf	i1___lwmod@divisor
  4359  0359  3000               	movlw	0
  4360  035A  00F9               	movwf	i1___lwmod@divisor+1
  4361  035B  0826               	movf	i1printf@prec,w
  4362  035C  00A0               	movwf	??i1_printf
  4363  035D  0720               	addwf	??i1_printf,w
  4364  035E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4365  035F  0084               	movwf	4
  4366  0360  120A  118A  2500  120A  118A  	fcall	stringdir
  4367  0365  00F0               	movwf	i1___lwdiv@divisor
  4368  0366  120A  118A  2500  120A  118A  	fcall	stringdir
  4369  036B  00F1               	movwf	i1___lwdiv@divisor+1
  4370  036C  0829               	movf	i1printf@val+1,w
  4371  036D  00F3               	movwf	i1___lwdiv@dividend+1
  4372  036E  0828               	movf	i1printf@val,w
  4373  036F  00F2               	movwf	i1___lwdiv@dividend
  4374  0370  120A  118A  274E  120A  118A  	fcall	i1___lwdiv
  4375  0375  0871               	movf	?i1___lwdiv+1,w
  4376  0376  00FB               	movwf	i1___lwmod@dividend+1
  4377  0377  0870               	movf	?i1___lwdiv,w
  4378  0378  00FA               	movwf	i1___lwmod@dividend
  4379  0379  120A  118A  27BE  120A  118A  	fcall	i1___lwmod
  4380  037E  0878               	movf	?i1___lwmod,w
  4381  037F  3E30               	addlw	48
  4382  0380  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0381  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0382  00A1               	movwf	??i1_printf+1
  4385  0383  0821               	movf	??i1_printf+1,w
  4386  0384  2BB0               	goto	L8
  4387  0385                     i1l2043:	
  4388                           ;doprnt.c: 1497: case 0x80:
  4389                           
  4390                           ;doprnt.c: 1491: break;
  4391                           
  4392                           
  4393                           ;doprnt.c: 1499: {
  4394                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4395  0385  0826               	movf	i1printf@prec,w
  4396  0386  00A0               	movwf	??i1_printf
  4397  0387  0720               	addwf	??i1_printf,w
  4398  0388  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4399  0389  0084               	movwf	4
  4400  038A  120A  118A  2500  120A  118A  	fcall	stringdir
  4401  038F  00F0               	movwf	i1___lwdiv@divisor
  4402  0390  120A  118A  2500  120A  118A  	fcall	stringdir
  4403  0395  00F1               	movwf	i1___lwdiv@divisor+1
  4404  0396  0829               	movf	i1printf@val+1,w
  4405  0397  00F3               	movwf	i1___lwdiv@dividend+1
  4406  0398  0828               	movf	i1printf@val,w
  4407  0399  00F2               	movwf	i1___lwdiv@dividend
  4408  039A  120A  118A  274E  120A  118A  	fcall	i1___lwdiv
  4409  039F  0870               	movf	?i1___lwdiv,w
  4410  03A0  390F               	andlw	15
  4411  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  4412  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  4413  03A3  00A1               	movwf	??i1_printf+1
  4414  03A4  0821               	movf	??i1_printf+1,w
  4415  03A5  00A3               	movwf	i1printf@idx
  4416                           
  4417                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  4418  03A6  0823               	movf	i1printf@idx,w
  4419  03A7  3E84               	addlw	low ((STR_8-__stringbase)| (0+32768))
  4420  03A8  0084               	movwf	4
  4421  03A9  120A  118A  2500  120A  118A  	fcall	stringdir
  4422  03AE  00A0               	movwf	??i1_printf
  4423  03AF  0820               	movf	??i1_printf,w
  4424  03B0                     L8:	
  4425  03B0  00AC               	movwf	i1printf@c
  4426  03B1                     i1l2051:	
  4427                           ;doprnt.c: 1523: }
  4428                           
  4429                           ;doprnt.c: 1508: }
  4430                           ;doprnt.c: 1510: break;
  4431                           
  4432                           
  4433                           ;doprnt.c: 1524: (putch(c) );
  4434  03B1  082C               	movf	i1printf@c,w
  4435  03B2  120A  158A  2730  120A  118A  	fcall	i1_putch
  4436  03B7                     i1l2053:	
  4437  03B7  30FF               	movlw	255
  4438  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4439  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4440  03BA  00A0               	movwf	??i1_printf
  4441  03BB  0820               	movf	??i1_printf,w
  4442  03BC  07A6               	addwf	i1printf@prec,f
  4443  03BD  0A26               	incf	i1printf@prec,w
  4444  03BE  1903               	btfsc	3,2
  4445  03BF  2A03               	goto	i1l2055
  4446  03C0  0827               	movf	i1printf@flag,w
  4447  03C1  39C0               	andlw	192
  4448                           
  4449                           ; Switch size 1, requested type "space"
  4450                           ; Number of cases is 2, Range of values is 128 to 192
  4451                           ; switch strategies available:
  4452                           ; Name         Instructions Cycles
  4453                           ; simple_byte            7     4 (average)
  4454                           ; direct_byte          206    11 (fixed)
  4455                           ; jumptable            263     9 (fixed)
  4456                           ;	Chosen strategy is simple_byte
  4457  03C2  3A80               	xorlw	128	; case 128
  4458  03C3  1903               	skipnz
  4459  03C4  2B85               	goto	i1l2043
  4460  03C5  3A40               	xorlw	64	; case 192
  4461  03C6  1903               	skipnz
  4462  03C7  2B57               	goto	i1l2041
  4463  03C8  2BB1               	goto	i1l2051
  4464  03C9  2BB1               	goto	i1l2051
  4465  03CA                     i1l356:	
  4466                           ;doprnt.c: 1540: return 0;
  4467                           ;	Return value of i1_printf is never used
  4468                           
  4469                           ;doprnt.c: 1525: }
  4470                           ;doprnt.c: 1533: }
  4471                           ;doprnt.c: 1535: alldone:
  4472                           
  4473  03CA  0008               	return
  4474  03CB                     __end_ofi1_printf:	
  4475                           
  4476                           	psect	text24
  4477  0F30                     __ptext24:	
  4478 ;; *************** function i1_putch *****************
  4479 ;; Defined at:
  4480 ;;		line 46 in file "usart.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  byte            1    wreg     unsigned char 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  byte            1    0[COMMON] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;		None               void
  4487 ;; Registers used:
  4488 ;;		wreg
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       0       0       0       0
  4495 ;;      Locals:         1       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0
  4497 ;;      Totals:         1       0       0       0       0
  4498 ;;Total ram usage:        1 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		i1_printf
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function i1_putch
  4509  0F30                     i1_putch:	
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in i1_putch: [wreg]
  4513                           ;i1putch@byte stored from wreg
  4514  0F30  00F0               	movwf	i1putch@byte
  4515  0F31                     i1l178:	
  4516                           ;usart.c: 49: continue;
  4517                           
  4518                           ;usart.c: 48: while (!TXIF)
  4519                           
  4520  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0F33  1E0C               	btfss	12,4	;volatile
  4523  0F34  2F31               	goto	i1l178
  4524                           
  4525                           ;usart.c: 50: TXREG = byte;
  4526  0F35  0870               	movf	i1putch@byte,w
  4527  0F36  0099               	movwf	25	;volatile
  4528  0F37  0008               	return
  4529  0F38                     __end_ofi1_putch:	
  4530                           
  4531                           	psect	text25
  4532  0F9D                     __ptext25:	
  4533 ;; *************** function i1_isdigit *****************
  4534 ;; Defined at:
  4535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  c               1    wreg     unsigned char 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  c               1    1[COMMON] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;		None               void
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4549 ;;      Params:         0       0       0       0       0
  4550 ;;      Locals:         2       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0
  4552 ;;      Totals:         2       0       0       0       0
  4553 ;;Total ram usage:        2 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		i1_printf
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function i1_isdigit
  4564  0F9D                     i1_isdigit:	
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  4568                           ;i1isdigit@c stored from wreg
  4569  0F9D  00F1               	movwf	i1isdigit@c
  4570  0F9E  01F0               	clrf	i1_isdigit$805
  4571  0F9F  303A               	movlw	58
  4572  0FA0  0271               	subwf	i1isdigit@c,w
  4573  0FA1  1803               	skipnc
  4574  0FA2  2FA9               	goto	i1l1663
  4575  0FA3  3030               	movlw	48
  4576  0FA4  0271               	subwf	i1isdigit@c,w
  4577  0FA5  1C03               	skipc
  4578  0FA6  2FA9               	goto	i1l1663
  4579  0FA7  01F0               	clrf	i1_isdigit$805
  4580  0FA8  0AF0               	incf	i1_isdigit$805,f
  4581  0FA9                     i1l1663:	
  4582  0FA9  0C70               	rrf	i1_isdigit$805,w
  4583  0FAA  0008               	return
  4584  0FAB                     __end_ofi1_isdigit:	
  4585                           
  4586                           	psect	text26
  4587  04C9                     __ptext26:	
  4588 ;; *************** function i1___wmul *****************
  4589 ;; Defined at:
  4590 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  multiplier      2    0[COMMON] unsigned int 
  4593 ;;  multiplicand    2    2[COMMON] unsigned int 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  __wmul          2    4[COMMON] unsigned int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    0[COMMON] unsigned int 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         4       0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0
  4608 ;;      Totals:         6       0       0       0       0
  4609 ;;Total ram usage:        6 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		i1_printf
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function i1___wmul
  4620  04C9                     i1___wmul:	
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4624  04C9  01F4               	clrf	i1___wmul@product
  4625  04CA  01F5               	clrf	i1___wmul@product+1
  4626  04CB                     i1l1643:	
  4627  04CB  1C70               	btfss	i1___wmul@multiplier,0
  4628  04CC  2CD3               	goto	i1l440
  4629  04CD  0872               	movf	i1___wmul@multiplicand,w
  4630  04CE  07F4               	addwf	i1___wmul@product,f
  4631  04CF  1803               	skipnc
  4632  04D0  0AF5               	incf	i1___wmul@product+1,f
  4633  04D1  0873               	movf	i1___wmul@multiplicand+1,w
  4634  04D2  07F5               	addwf	i1___wmul@product+1,f
  4635  04D3                     i1l440:	
  4636  04D3  3001               	movlw	1
  4637  04D4                     u145_25:	
  4638  04D4  1003               	clrc
  4639  04D5  0DF2               	rlf	i1___wmul@multiplicand,f
  4640  04D6  0DF3               	rlf	i1___wmul@multiplicand+1,f
  4641  04D7  3EFF               	addlw	-1
  4642  04D8  1D03               	skipz
  4643  04D9  2CD4               	goto	u145_25
  4644  04DA  3001               	movlw	1
  4645  04DB                     u146_25:	
  4646  04DB  1003               	clrc
  4647  04DC  0CF1               	rrf	i1___wmul@multiplier+1,f
  4648  04DD  0CF0               	rrf	i1___wmul@multiplier,f
  4649  04DE  3EFF               	addlw	-1
  4650  04DF  1D03               	skipz
  4651  04E0  2CDB               	goto	u146_25
  4652  04E1  0870               	movf	i1___wmul@multiplier,w
  4653  04E2  0471               	iorwf	i1___wmul@multiplier+1,w
  4654  04E3  1D03               	btfss	3,2
  4655  04E4  2CCB               	goto	i1l1643
  4656  04E5  0875               	movf	i1___wmul@product+1,w
  4657  04E6  00F1               	movwf	?i1___wmul+1
  4658  04E7  0874               	movf	i1___wmul@product,w
  4659  04E8  00F0               	movwf	?i1___wmul
  4660  04E9  0008               	return
  4661  04EA                     __end_ofi1___wmul:	
  4662                           
  4663                           	psect	text27
  4664  07BE                     __ptext27:	
  4665 ;; *************** function i1___lwmod *****************
  4666 ;; Defined at:
  4667 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  divisor         2    8[COMMON] unsigned int 
  4670 ;;  dividend        2   10[COMMON] unsigned int 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  __lwmod         1   13[COMMON] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    8[COMMON] unsigned int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         4       0       0       0       0
  4683 ;;      Locals:         1       0       0       0       0
  4684 ;;      Temps:          1       0       0       0       0
  4685 ;;      Totals:         6       0       0       0       0
  4686 ;;Total ram usage:        6 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		i1_printf
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function i1___lwmod
  4697  07BE                     i1___lwmod:	
  4698                           
  4699                           ;incstack = 0
  4700                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  4701  07BE  0878               	movf	i1___lwmod@divisor,w
  4702  07BF  0479               	iorwf	i1___lwmod@divisor+1,w
  4703  07C0  1903               	btfsc	3,2
  4704  07C1  2FEB               	goto	i1l1711
  4705  07C2  01FD               	clrf	i1___lwmod@counter
  4706  07C3  0AFD               	incf	i1___lwmod@counter,f
  4707  07C4                     i1l1701:	
  4708  07C4  1BF9               	btfsc	i1___lwmod@divisor+1,7
  4709  07C5  2FD2               	goto	i1l1703
  4710  07C6  3001               	movlw	1
  4711  07C7                     u158_25:	
  4712  07C7  1003               	clrc
  4713  07C8  0DF8               	rlf	i1___lwmod@divisor,f
  4714  07C9  0DF9               	rlf	i1___lwmod@divisor+1,f
  4715  07CA  3EFF               	addlw	-1
  4716  07CB  1D03               	skipz
  4717  07CC  2FC7               	goto	u158_25
  4718  07CD  3001               	movlw	1
  4719  07CE  00FC               	movwf	??i1___lwmod
  4720  07CF  087C               	movf	??i1___lwmod,w
  4721  07D0  07FD               	addwf	i1___lwmod@counter,f
  4722  07D1  2FC4               	goto	i1l1701
  4723  07D2                     i1l1703:	
  4724  07D2  0879               	movf	i1___lwmod@divisor+1,w
  4725  07D3  027B               	subwf	i1___lwmod@dividend+1,w
  4726  07D4  1D03               	skipz
  4727  07D5  2FD8               	goto	u160_25
  4728  07D6  0878               	movf	i1___lwmod@divisor,w
  4729  07D7  027A               	subwf	i1___lwmod@dividend,w
  4730  07D8                     u160_25:	
  4731  07D8  1C03               	skipc
  4732  07D9  2FE0               	goto	i1l1707
  4733  07DA  0878               	movf	i1___lwmod@divisor,w
  4734  07DB  02FA               	subwf	i1___lwmod@dividend,f
  4735  07DC  0879               	movf	i1___lwmod@divisor+1,w
  4736  07DD  1C03               	skipc
  4737  07DE  03FB               	decf	i1___lwmod@dividend+1,f
  4738  07DF  02FB               	subwf	i1___lwmod@dividend+1,f
  4739  07E0                     i1l1707:	
  4740  07E0  3001               	movlw	1
  4741  07E1                     u161_25:	
  4742  07E1  1003               	clrc
  4743  07E2  0CF9               	rrf	i1___lwmod@divisor+1,f
  4744  07E3  0CF8               	rrf	i1___lwmod@divisor,f
  4745  07E4  3EFF               	addlw	-1
  4746  07E5  1D03               	skipz
  4747  07E6  2FE1               	goto	u161_25
  4748  07E7  3001               	movlw	1
  4749  07E8  02FD               	subwf	i1___lwmod@counter,f
  4750  07E9  1D03               	btfss	3,2
  4751  07EA  2FD2               	goto	i1l1703
  4752  07EB                     i1l1711:	
  4753  07EB  087B               	movf	i1___lwmod@dividend+1,w
  4754  07EC  00F9               	movwf	?i1___lwmod+1
  4755  07ED  087A               	movf	i1___lwmod@dividend,w
  4756  07EE  00F8               	movwf	?i1___lwmod
  4757  07EF  0008               	return
  4758  07F0                     __end_ofi1___lwmod:	
  4759                           
  4760                           	psect	text28
  4761  074E                     __ptext28:	
  4762 ;; *************** function i1___lwdiv *****************
  4763 ;; Defined at:
  4764 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  divisor         2    0[COMMON] unsigned int 
  4767 ;;  dividend        2    2[COMMON] unsigned int 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  __lwdiv         2    5[COMMON] unsigned int 
  4770 ;;  __lwdiv         1    7[COMMON] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  2    0[COMMON] unsigned int 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4780 ;;      Params:         4       0       0       0       0
  4781 ;;      Locals:         3       0       0       0       0
  4782 ;;      Temps:          1       0       0       0       0
  4783 ;;      Totals:         8       0       0       0       0
  4784 ;;Total ram usage:        8 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		i1_printf
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function i1___lwdiv
  4795  074E                     i1___lwdiv:	
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4799  074E  01F5               	clrf	i1___lwdiv@quotient
  4800  074F  01F6               	clrf	i1___lwdiv@quotient+1
  4801  0750  0870               	movf	i1___lwdiv@divisor,w
  4802  0751  0471               	iorwf	i1___lwdiv@divisor+1,w
  4803  0752  1903               	btfsc	3,2
  4804  0753  2F85               	goto	i1l1689
  4805  0754  01F7               	clrf	i1___lwdiv@counter
  4806  0755  0AF7               	incf	i1___lwdiv@counter,f
  4807  0756                     i1l1677:	
  4808  0756  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  4809  0757  2F64               	goto	i1l1679
  4810  0758  3001               	movlw	1
  4811  0759                     u151_25:	
  4812  0759  1003               	clrc
  4813  075A  0DF0               	rlf	i1___lwdiv@divisor,f
  4814  075B  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4815  075C  3EFF               	addlw	-1
  4816  075D  1D03               	skipz
  4817  075E  2F59               	goto	u151_25
  4818  075F  3001               	movlw	1
  4819  0760  00F4               	movwf	??i1___lwdiv
  4820  0761  0874               	movf	??i1___lwdiv,w
  4821  0762  07F7               	addwf	i1___lwdiv@counter,f
  4822  0763  2F56               	goto	i1l1677
  4823  0764                     i1l1679:	
  4824  0764  3001               	movlw	1
  4825  0765                     u153_25:	
  4826  0765  1003               	clrc
  4827  0766  0DF5               	rlf	i1___lwdiv@quotient,f
  4828  0767  0DF6               	rlf	i1___lwdiv@quotient+1,f
  4829  0768  3EFF               	addlw	-1
  4830  0769  1D03               	skipz
  4831  076A  2F65               	goto	u153_25
  4832  076B  0871               	movf	i1___lwdiv@divisor+1,w
  4833  076C  0273               	subwf	i1___lwdiv@dividend+1,w
  4834  076D  1D03               	skipz
  4835  076E  2F71               	goto	u154_25
  4836  076F  0870               	movf	i1___lwdiv@divisor,w
  4837  0770  0272               	subwf	i1___lwdiv@dividend,w
  4838  0771                     u154_25:	
  4839  0771  1C03               	skipc
  4840  0772  2F7A               	goto	i1l1685
  4841  0773  0870               	movf	i1___lwdiv@divisor,w
  4842  0774  02F2               	subwf	i1___lwdiv@dividend,f
  4843  0775  0871               	movf	i1___lwdiv@divisor+1,w
  4844  0776  1C03               	skipc
  4845  0777  03F3               	decf	i1___lwdiv@dividend+1,f
  4846  0778  02F3               	subwf	i1___lwdiv@dividend+1,f
  4847  0779  1475               	bsf	i1___lwdiv@quotient,0
  4848  077A                     i1l1685:	
  4849  077A  3001               	movlw	1
  4850  077B                     u155_25:	
  4851  077B  1003               	clrc
  4852  077C  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4853  077D  0CF0               	rrf	i1___lwdiv@divisor,f
  4854  077E  3EFF               	addlw	-1
  4855  077F  1D03               	skipz
  4856  0780  2F7B               	goto	u155_25
  4857  0781  3001               	movlw	1
  4858  0782  02F7               	subwf	i1___lwdiv@counter,f
  4859  0783  1D03               	btfss	3,2
  4860  0784  2F64               	goto	i1l1679
  4861  0785                     i1l1689:	
  4862  0785  0876               	movf	i1___lwdiv@quotient+1,w
  4863  0786  00F1               	movwf	?i1___lwdiv+1
  4864  0787  0875               	movf	i1___lwdiv@quotient,w
  4865  0788  00F0               	movwf	?i1___lwdiv
  4866  0789  0008               	return
  4867  078A                     __end_ofi1___lwdiv:	
  4868                           
  4869                           	psect	text29
  4870  0FCA                     __ptext29:	
  4871 ;; *************** function _strcpy *****************
  4872 ;; Defined at:
  4873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  to              1    wreg     PTR unsigned char 
  4876 ;;		 -> string(26), 
  4877 ;;  from            1    0[COMMON] PTR const unsigned char 
  4878 ;;		 -> string_aux(26), 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  to              1    2[COMMON] PTR unsigned char 
  4881 ;;		 -> string(26), 
  4882 ;;  cp              1    3[COMMON] PTR unsigned char 
  4883 ;;		 -> string(26), 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      PTR unsigned char 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4893 ;;      Params:         1       0       0       0       0
  4894 ;;      Locals:         2       0       0       0       0
  4895 ;;      Temps:          1       0       0       0       0
  4896 ;;      Totals:         4       0       0       0       0
  4897 ;;Total ram usage:        4 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_interruptions
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           
  4907                           ;psect for function _strcpy
  4908  0FCA                     _strcpy:	
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0]
  4912                           ;strcpy@to stored from wreg
  4913  0FCA  00F2               	movwf	strcpy@to
  4914  0FCB  0872               	movf	strcpy@to,w
  4915  0FCC  00F1               	movwf	??_strcpy
  4916  0FCD  0871               	movf	??_strcpy,w
  4917  0FCE  00F3               	movwf	strcpy@cp
  4918  0FCF                     i1l1793:	
  4919  0FCF  0870               	movf	strcpy@from,w
  4920  0FD0  0084               	movwf	4
  4921  0FD1  1383               	bcf	3,7	;select IRP bank0
  4922  0FD2  0800               	movf	0,w
  4923  0FD3  00F1               	movwf	??_strcpy
  4924  0FD4  0873               	movf	strcpy@cp,w
  4925  0FD5  0084               	movwf	4
  4926  0FD6  0871               	movf	??_strcpy,w
  4927  0FD7  0080               	movwf	0
  4928  0FD8  0800               	movf	0,w
  4929  0FD9  1903               	btfsc	3,2
  4930  0FDA  0008               	return
  4931  0FDB  3001               	movlw	1
  4932  0FDC  00F1               	movwf	??_strcpy
  4933  0FDD  0871               	movf	??_strcpy,w
  4934  0FDE  07F3               	addwf	strcpy@cp,f
  4935  0FDF  3001               	movlw	1
  4936  0FE0  00F1               	movwf	??_strcpy
  4937  0FE1  0871               	movf	??_strcpy,w
  4938  0FE2  07F0               	addwf	strcpy@from,f
  4939  0FE3  2FCF               	goto	i1l1793
  4940  0FE4                     __end_of_strcpy:	
  4941                           ;	Return value of _strcpy is never used
  4942                           
  4943                           
  4944                           	psect	text30
  4945  0684                     __ptext30:	
  4946 ;; *************** function ___awmod *****************
  4947 ;; Defined at:
  4948 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  divisor         2    0[COMMON] int 
  4951 ;;  dividend        2    2[COMMON] int 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  sign            1    6[COMMON] unsigned char 
  4954 ;;  counter         1    5[COMMON] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  2    0[COMMON] int 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4964 ;;      Params:         4       0       0       0       0
  4965 ;;      Locals:         2       0       0       0       0
  4966 ;;      Temps:          1       0       0       0       0
  4967 ;;      Totals:         7       0       0       0       0
  4968 ;;Total ram usage:        7 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_interruptions
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function ___awmod
  4979  0684                     ___awmod:	
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4983  0684  01F6               	clrf	___awmod@sign
  4984  0685  1FF3               	btfss	___awmod@dividend+1,7
  4985  0686  2E8E               	goto	i1l1929
  4986  0687  09F2               	comf	___awmod@dividend,f
  4987  0688  09F3               	comf	___awmod@dividend+1,f
  4988  0689  0AF2               	incf	___awmod@dividend,f
  4989  068A  1903               	skipnz
  4990  068B  0AF3               	incf	___awmod@dividend+1,f
  4991  068C  01F6               	clrf	___awmod@sign
  4992  068D  0AF6               	incf	___awmod@sign,f
  4993  068E                     i1l1929:	
  4994  068E  1FF1               	btfss	___awmod@divisor+1,7
  4995  068F  2E95               	goto	i1l1933
  4996  0690  09F0               	comf	___awmod@divisor,f
  4997  0691  09F1               	comf	___awmod@divisor+1,f
  4998  0692  0AF0               	incf	___awmod@divisor,f
  4999  0693  1903               	skipnz
  5000  0694  0AF1               	incf	___awmod@divisor+1,f
  5001  0695                     i1l1933:	
  5002  0695  0870               	movf	___awmod@divisor,w
  5003  0696  0471               	iorwf	___awmod@divisor+1,w
  5004  0697  1903               	btfsc	3,2
  5005  0698  2EC2               	goto	i1l1951
  5006  0699  01F5               	clrf	___awmod@counter
  5007  069A  0AF5               	incf	___awmod@counter,f
  5008  069B                     i1l1941:	
  5009  069B  1BF1               	btfsc	___awmod@divisor+1,7
  5010  069C  2EA9               	goto	i1l1943
  5011  069D  3001               	movlw	1
  5012  069E                     u192_25:	
  5013  069E  1003               	clrc
  5014  069F  0DF0               	rlf	___awmod@divisor,f
  5015  06A0  0DF1               	rlf	___awmod@divisor+1,f
  5016  06A1  3EFF               	addlw	-1
  5017  06A2  1D03               	skipz
  5018  06A3  2E9E               	goto	u192_25
  5019  06A4  3001               	movlw	1
  5020  06A5  00F4               	movwf	??___awmod
  5021  06A6  0874               	movf	??___awmod,w
  5022  06A7  07F5               	addwf	___awmod@counter,f
  5023  06A8  2E9B               	goto	i1l1941
  5024  06A9                     i1l1943:	
  5025  06A9  0871               	movf	___awmod@divisor+1,w
  5026  06AA  0273               	subwf	___awmod@dividend+1,w
  5027  06AB  1D03               	skipz
  5028  06AC  2EAF               	goto	u194_25
  5029  06AD  0870               	movf	___awmod@divisor,w
  5030  06AE  0272               	subwf	___awmod@dividend,w
  5031  06AF                     u194_25:	
  5032  06AF  1C03               	skipc
  5033  06B0  2EB7               	goto	i1l1947
  5034  06B1  0870               	movf	___awmod@divisor,w
  5035  06B2  02F2               	subwf	___awmod@dividend,f
  5036  06B3  0871               	movf	___awmod@divisor+1,w
  5037  06B4  1C03               	skipc
  5038  06B5  03F3               	decf	___awmod@dividend+1,f
  5039  06B6  02F3               	subwf	___awmod@dividend+1,f
  5040  06B7                     i1l1947:	
  5041  06B7  3001               	movlw	1
  5042  06B8                     u195_25:	
  5043  06B8  1003               	clrc
  5044  06B9  0CF1               	rrf	___awmod@divisor+1,f
  5045  06BA  0CF0               	rrf	___awmod@divisor,f
  5046  06BB  3EFF               	addlw	-1
  5047  06BC  1D03               	skipz
  5048  06BD  2EB8               	goto	u195_25
  5049  06BE  3001               	movlw	1
  5050  06BF  02F5               	subwf	___awmod@counter,f
  5051  06C0  1D03               	btfss	3,2
  5052  06C1  2EA9               	goto	i1l1943
  5053  06C2                     i1l1951:	
  5054  06C2  0876               	movf	___awmod@sign,w
  5055  06C3  1903               	btfsc	3,2
  5056  06C4  2ECA               	goto	i1l1955
  5057  06C5  09F2               	comf	___awmod@dividend,f
  5058  06C6  09F3               	comf	___awmod@dividend+1,f
  5059  06C7  0AF2               	incf	___awmod@dividend,f
  5060  06C8  1903               	skipnz
  5061  06C9  0AF3               	incf	___awmod@dividend+1,f
  5062  06CA                     i1l1955:	
  5063  06CA  0873               	movf	___awmod@dividend+1,w
  5064  06CB  00F1               	movwf	?___awmod+1
  5065  06CC  0872               	movf	___awmod@dividend,w
  5066  06CD  00F0               	movwf	?___awmod
  5067  06CE  0008               	return
  5068  06CF                     __end_of___awmod:	
  5069  007E                     btemp	set	126	;btemp
  5070  007E                     wtemp	set	126
  5071  007E                     wtemp0	set	126
  5072  0080                     wtemp1	set	128
  5073  0082                     wtemp2	set	130
  5074  0084                     wtemp3	set	132
  5075  0086                     wtemp4	set	134
  5076  0088                     wtemp5	set	136
  5077  007F                     wtemp6	set	127
  5078  007E                     ttemp	set	126
  5079  007E                     ttemp0	set	126
  5080  0081                     ttemp1	set	129
  5081  0084                     ttemp2	set	132
  5082  0087                     ttemp3	set	135
  5083  007F                     ttemp4	set	127
  5084  007E                     ltemp	set	126
  5085  007E                     ltemp0	set	126
  5086  0082                     ltemp1	set	130
  5087  0086                     ltemp2	set	134
  5088  0080                     ltemp3	set	128


Data Sizes:
    Strings     152
    Constant    18
    Data        1
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      60
    BANK1            80      0      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 26
		 -> string_aux(BANK1[26]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 26
		 -> string(BANK1[26]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 26
		 -> string(BANK1[26]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[28]), STR_4(CODE[27]), 
		 -> STR_3(CODE[25]), STR_2(CODE[33]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?i1_printf(COMMON[2]), ?_printf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 26
		 -> string(BANK1[26]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptions in COMMON

    i1_printf->i1___lwmod
    i1___lwmod->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _read_RTC_I2c->_I2C_Write_Byte
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _interruptions in BANK0

    _interruptions->i1_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptions in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptions in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptions in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2331
                                             49 BANK0      5     5      0
                     _InitI2C_Master
                           _configAD
                  _configADInterrupt
                        _configRS232
                        _configTimer
              _configUSARTInterrupts
                             _printf
                       _read_RTC_I2c
                       _selectChanel
 ---------------------------------------------------------------------------------
 (1) _selectChanel                                         1     1      0     176
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_RTC_I2c                                         2     2      0      44
                                             21 BANK0      2     2      0
                           _I2C_Idle
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Byte                                       1     1      0      22
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              23    21      2    2042
                                             34 BANK0     15    13      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                             20 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                             20 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             28 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                             20 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _configUSARTInterrupts                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configRS232                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADInterrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configAD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C_Master                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interruptions                                        7     7      0    2121
                                             13 BANK0      7     7      0
                            ___awmod
                             _strcpy
                           i1_printf
 ---------------------------------------------------------------------------------
 (4) i1_printf                                            21    21      0    1528
                                              0 BANK0     13    13      0
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
                            i1_putch
 ---------------------------------------------------------------------------------
 (5) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               4     3      1     169
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitI2C_Master
   _configAD
   _configADInterrupt
   _configRS232
   _configTimer
   _configUSARTInterrupts
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _read_RTC_I2c
     _I2C_Idle
     _I2C_ReStart
     _I2C_Read_Byte
     _I2C_Send_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _selectChanel

 _interruptions (ROOT)
   ___awmod
   _strcpy
   i1_printf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1___wmul
     i1_isdigit
     i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      34       7       65.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      3C       5       75.0%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7E      12        0.0%
ABS                  0      0      7E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Mar 14 09:58:58 2016

                             _i 0058                               pc 0002              __size_of_I2C_Start 0008  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l91 0F43  
                            l85 0F4B                              l97 0F53           __end_of_interruptions 062D  
                            fsr 0004             ___wmul@multiplicand 0036                i1___wmul@product 0074  
                   __CFG_LVP$ON 0000                             l121 0F75                             l115 0F89  
                           l109 0F7F                             l313 0055                             l324 00B2  
                           l334 0106                             l440 04B2                             l329 00E2  
                           l178 0F3B                             l356 01FB                             _CKP 00A4  
                           _GIE 005F                             _RC3 003B                             _RC4 003C  
                  __CFG_CPD$OFF 0000                             _RX9 00C6                             _TX9 04C6  
          __size_of_I2C_ReStart 0008                             _val 02D1                             fsr0 0004  
                           indf 0000              I2C_Write_Byte@Byte 0034                    ___awmod@sign 0076  
                   main@channel 0053                            l1601 0728                            l1611 0749  
                          l2173 042D                            l1607 073E                            l1623 0792  
                          l1625 07A0                            l1633 07B9                            l1801 004F  
                          l2169 040F                            l1571 07FE                            l1555 0F69  
                          l1731 06E8                            l1723 06D9                            l1629 07AE  
                          l1821 00B6                            l1813 0077                            l1807 005A  
                          l1743 0700                            l1735 06F0                            l1727 06E0  
                          l1577 04AA                            l1825 00BB                            l1809 0065  
                          l1827 00D5                            l1747 0708                            l1739 06F8  
                          l1861 0156                            l1853 012A                            l1599 071A  
                          l1871 016F                            l1855 0133                            l1875 0181  
                          l1859 0152                            l1891 0032                            l1877 0186  
                          l1869 016B                            l1879 01B6                            l1887 01E2  
                          l1889 01E8                            _ADFM 04FF                            _ADON 00F8  
                          STR_1 05AD                    __CFG_WDTE$ON 0000                            STR_2 0518  
                          STR_3 0570                            STR_4 0555                            STR_5 0539  
                          STR_6 059A                            STR_7 05A9                            STR_8 0589  
                          _BRGH 04C2                            _CREN 00C4                            _FERR 00C2  
                          u1315 071D                            u1405 07A6                            u1335 0729  
                          u1415 07AF                            u1345 0735                            u1355 073F  
                          u1275 04B3                            u2307 0488                            u1285 04BA  
                          u2317 049F                            u2255 040D                            u1385 0795  
                          u2265 042B                            u2277 0415                            u1815 0142  
                          u2287 0448                            u2297 0468                            u1765 00FF  
                          u1795 0123                            _PEIE 005E                            _RCIE 0465  
                          _RCIF 0065                            _OERR 00C1                            _WCOL 00A7  
                          _SPEN 00C7                            _TXIE 0464                            _TXEN 04C5  
                          _TXIF 0064                            _SYNC 04C4                    __CFG_WRT$OFF 0000  
                          _main 03CB                __end_of_I2C_Idle 0F72                            btemp 007E  
              __end_of_I2C_Stop 0F58                   __CFG_BOREN$ON 0000                            ltemp 007E  
                 i1printf@width 002A                            start 0012                            ttemp 007E  
                          wtemp 007E                 __end_ofi1_putch 0F38      __size_of_configADInterrupt 0009  
                         _ADCS0 00FE                           _ADCS1 00FF                           _ADCS2 04FE  
                         ?_main 0070                 __end_of___awmod 06CF                 __end_of___lwdiv 074E  
                         i1l313 0226                           i1l324 0283                           i1l334 02D7  
                         i1l440 04D3                           i1l272 05B6                           i1l329 02B3  
               __end_of___lwmod 07BE                           i1l178 0F31                           i1l356 03CA  
                         i1l279 0622                           _RCREG 001A                           _SPBRG 0099  
                         _SSPM0 00A0                           _SSPM1 00A1                           _SSPM2 00A2  
                         _SSPM3 00A3                           _SSPIF 0063                           _SSPEN 00A5  
                         _SSPOV 00A6                           _TXREG 0019                      i1isdigit@c 0071  
            i1___lwmod@dividend 007A                 __end_of_dpowers 0510          __size_of_I2C_Read_Byte 0009  
               __end_of_isdigit 0800                           _putch 0F38                           main@i 0054  
             __end_of_I2C_Start 0F50                           pclath 000A                __end_ofi1___wmul 04EA  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
        __size_of_I2C_Send_NACK 0009                           status 0003             i1___wmul@multiplier 0070  
                         wtemp0 007E                           wtemp1 0080                           wtemp2 0082  
                         wtemp3 0084                           wtemp4 0086                           wtemp5 0088  
                         wtemp6 007F              __size_ofi1___lwdiv 003C              __size_ofi1___lwmod 0032  
              __end_ofi1_printf 03CB                ??_InitI2C_Master 0034                      i1printf@ap 0025  
               __initialization 0015                    __end_of_main 04A6              __size_ofi1_isdigit 000E  
                 ?_read_RTC_I2c 0070                          ??_main 0051           _configUSARTInterrupts 0FAB  
                        _ADRESH 001E                          _ADRESL 009E                          ?_putch 0070  
                        i1l2023 0323                          i1l2041 0357                          i1l2033 033C  
                        i1l2025 0327                          i1l2017 02FB                          i1l2105 0621  
                        i1l2043 0385                          i1l2051 03B1                          i1l2035 0340  
                        i1l2019 0304                          i1l2053 03B7                          i1l2039 0352  
                        i1l2055 0203                          i1l2067 05B9                          i1l2091 0608  
                        i1l1701 07C4                          i1l1703 07D2                          i1l1711 07EB  
                        i1l2087 0600                          i1l2079 05DA                          i1l1707 07E0  
                        i1l1643 04CB                          i1l2099 0614                          i1l1663 0FA9  
                        i1l1941 069B                          i1l1933 0695                          i1l1685 077A  
                        i1l1677 0756                          u202_25 02D0                          i1l1943 06A9  
                        i1l1951 06C2                          i1l1679 0764                          i1l1929 068E  
                        i1l1793 0FCF                          i1l1689 0785                          i1l1955 06CA  
                        i1l1947 06B7                          i1l1971 022B                          i1l1973 0236  
                        i1l1965 0220                          i1l1991 02A6                          i1l1985 0287  
                        i1l1977 0248                          i1l1989 028C                          u205_25 02F4  
                        u223_20 061E                          u151_25 0759                          u207_25 0313  
                        u160_25 07D8                          u153_25 0765                          u161_25 07E1  
                        u145_25 04D4                          u154_25 0771                          u146_25 04DB  
                        u155_25 077B                          u158_25 07C7                          u192_25 069E  
                        u194_25 06AF                          u195_25 06B8                       ??i1_putch 0070  
                        _SSPADD 0093                          _TRISD3 0443                          _TRISD4 0444  
                        _SSPBUF 0013            __size_of_configRS232 0010                  __CFG_PWRTE$OFF 0000  
              __end_of_configAD 0FCA            __size_of_configTimer 000D                   _I2C_Read_Byte 0F72  
                        ___wmul 04A6                       ??___awmod 0074                       ??___lwdiv 0038  
                     ??___lwmod 0040                  ??_read_RTC_I2c 0035                 ___awmod@divisor 0070  
                 _I2C_Send_NACK 0F7B                 ___awmod@counter 0075                          _printf 002B  
                        _strcpy 0FCA                          _string 00A0                       ?_I2C_Idle 0070  
             __end_ofi1___lwdiv 078A               __end_ofi1___lwmod 07F0                       ??_isdigit 0034  
                     ?_I2C_Stop 0070                          saved_w 007E               __end_ofi1_isdigit 0FAB  
               __CFG_FOSC$EXTRC 0000         __end_of__initialization 0027                     i1printf@idx 0023  
                   i1printf@val 0028                  ?_I2C_Read_Byte 0070                  __pcstackCOMMON 0070  
                  __pidataBANK0 04FA                     i1putch@byte 0070                   __end_of_putch 0F40  
                ?_I2C_Send_NACK 0070          ?_configUSARTInterrupts 0070                       ?i1___wmul 0070  
                    ??_I2C_Idle 0034                  _OPTION_REGbits 0081                      ??_I2C_Stop 0034  
                     ?i1_printf 0070                         ??_putch 0034                      __pbssBANK0 0056  
                    __pbssBANK1 00A0                      _hasAnError 02D0                   ?_selectChanel 0070  
                    __pmaintext 03CB                         ?___wmul 0034                      __pintentry 0004  
       __size_of_I2C_Write_Byte 000C                   ??_I2C_ReStart 0034                         ?_printf 0042  
                    ??i1___wmul 0074                         ?_strcpy 0070                   i1_isdigit$805 0070  
                    ??i1_printf 0020                       ?_configAD 0070                         _SSPCON2 0091  
                       _SSPSTAT 0094                      __stringtab 0500            __end_of_read_RTC_I2c 0684  
                       i1_putch 0F30          __size_of_interruptions 007D                       _I2C_Start 0F48  
               ??_I2C_Read_Byte 0034                  ??_selectChanel 0034         read_RTC_I2c@pos_memoria 0036  
               ??_I2C_Send_NACK 0034                         ___awmod 0684                 __size_of___wmul 0023  
                       ___lwdiv 0710                         ___lwmod 078A                         __ptext1 06CF  
                       __ptext2 062D                         __ptext3 0F84                         __ptext4 0F50  
                       __ptext5 0F48                         __ptext6 0F7B                         __ptext7 0F72  
                       __ptext8 0F40                         __ptext9 0F69                 __size_of_printf 01D1  
               __size_of_strcpy 001A               __end_of_hexpowers 0518                         _dpowers 0506  
             i1___lwdiv@divisor 0070                         _leitura 0059                         _isdigit 07F0  
             i1___lwdiv@counter 0077                ___awmod@dividend 0072             __end_of_I2C_ReStart 0F48  
                    ??_configAD 0034                         clrloop0 0F59            end_of_initialization 0027  
                    ?_I2C_Start 0070                         printf@c 0050                         printf@f 004F  
         i1___wmul@multiplicand 0072                   _interruptions 05B0                       _PORTDbits 0008  
             __size_of_I2C_Idle 0009               __size_of_I2C_Stop 0008                       i1___lwdiv 074E  
                     i1___lwmod 07BE                   ??_configRS232 0034                     printf@width 004D  
                     i1_isdigit 0F9D                   ??_configTimer 0034                    i1printf@flag 0027  
                  i1printf@prec 0026                      _string_aux 00BA         ??_configUSARTInterrupts 0034  
                _I2C_Write_Byte 0F84                  ?_interruptions 0070                  __end_of___wmul 04C9  
                   _I2C_ReStart 0F40               i1___lwmod@divisor 0078         __size_of_InitI2C_Master 001C  
                 __pbitbssBANK0 02D0               i1___lwmod@counter 007D                  __end_of_printf 01FC  
                __end_of_strcpy 0FE4             start_initialization 0015               __size_ofi1___wmul 0021  
          __end_of_selectChanel 0710                       i1printf@c 002C                       i1printf@f 0024  
         __size_of_read_RTC_I2c 0057                      ?i1___lwdiv 0070                      ?i1___lwmod 0078  
             __size_ofi1_printf 01CF                      ?i1_isdigit 0070                     ??_I2C_Start 0034  
           __end_of_configRS232 04FA          __end_of_I2C_Write_Byte 0F90                        ??___wmul 0038  
                   __pdataBANK0 005B             __end_of_configTimer 0F9D                    _read_RTC_I2c 062D  
                      ??_printf 0044                        ??_strcpy 0071                       ___latbits 0002  
                 __pcstackBANK0 0020               __size_of_configAD 0010                        ?i1_putch 0070  
              ___lwdiv@dividend 0036                 ?_I2C_Write_Byte 0070                 ??_interruptions 002D  
                      ?___awmod 0070                        ?___lwdiv 0034                        ?___lwmod 003C  
                     __pstrings 0500                        _I2C_Idle 0F69                        ?_isdigit 0070  
                      _I2C_Stop 0F50                       _hexpowers 0510                ___lwdiv@quotient 0039  
                   ??i1___lwdiv 0074                     ??i1___lwmod 007C                  __size_of_putch 0008  
                  _receivedData 005B               interrupt_function 0004                     _configRS232 04EA  
                ___wmul@product 0038                     ??i1_isdigit 0070                       clear_ram0 0F58  
                      _PIE1bits 008C                     _configTimer 0F90                        _PIR1bits 000C  
         __end_of_I2C_Read_Byte 0F7B           __end_of_I2C_Send_NACK 0F84           __size_of_selectChanel 0041  
                _InitI2C_Master 0FE4                      _ADCON0bits 001F                     __stringbase 0505  
                    _ADCON1bits 009F               ___wmul@multiplier 0034                        i1___wmul 04C9  
                    printf@flag 004C                      printf@prec 0049                        i1_printf 01FC  
           selectChanel@channel 0034                __size_ofi1_putch 0008                    _selectChanel 06CF  
        __end_of_InitI2C_Master 1000                __size_of___awmod 004B                __size_of___lwdiv 003E  
__size_of_configUSARTInterrupts 000F                __size_of___lwmod 0034   __end_of_configUSARTInterrupts 0FBA  
                  ?_I2C_ReStart 0070              __end_of__stringtab 0506                     _isdigit$805 0034  
                      _data_ADC 0056                __size_of_isdigit 0010                 ___lwdiv@divisor 0034  
               ___lwdiv@counter 003B                        __ptext10 002B                        __ptext11 0F38  
                      __ptext20 0FBA                        __ptext12 07F0                        __ptext21 0FE4  
                      __ptext13 04A6                        __ptext30 0684                        __ptext22 05B0  
                      __ptext14 078A                        __ptext23 01FC                        __ptext15 0710  
                      __ptext24 0F30                        __ptext16 0FAB                        __ptext25 0F9D  
                      __ptext17 0F90                        __ptext26 04C9                        __ptext18 04EA  
                      __ptext27 07BE                        __ptext19 0F60                        __ptext28 074E  
                      __ptext29 0FCA                        _configAD 0FBA              i1___lwdiv@dividend 0072  
                    strcpy@from 0070                   __size_of_main 00DB               _configADInterrupt 0F60  
               ?_InitI2C_Master 0070                       printf@idx 0047                       printf@val 004A  
            ?_configADInterrupt 0070              i1___lwdiv@quotient 0075                       putch@byte 0034  
                    _INTCONbits 000B             ??_configADInterrupt 0034                        isdigit@c 0035  
                      intlevel1 0000                ___lwmod@dividend 003E                ??_I2C_Write_Byte 0034  
                     stringcode 0500       __end_of_configADInterrupt 0F69                        printf@ap 0048  
               ___lwmod@divisor 003C                        strcpy@cp 0073                        strcpy@to 0072  
               ___lwmod@counter 0041                        stringdir 0500                        stringtab 0500  
                   _SSPCON2bits 0091                    ?_configRS232 0070                    ?_configTimer 0070  
