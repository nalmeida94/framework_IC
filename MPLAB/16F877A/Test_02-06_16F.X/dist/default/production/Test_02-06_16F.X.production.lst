

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jun 15 11:58:32 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  010C                     	;# 
   347  010D                     	;# 
   348  010E                     	;# 
   349  010F                     	;# 
   350  018C                     	;# 
   351  018D                     	;# 
   352                           
   353                           	psect	idataBANK0
   354  0003                     __pidataBANK0:	
   355                           
   356                           ;initializer for _receivedData
   357  0003  3458               	retlw	88
   358                           
   359                           	psect	idataBANK1
   360  0D67                     __pidataBANK1:	
   361                           
   362                           ;initializer for _channel
   363  0D67  3401               	retlw	1
   364                           
   365                           ;initializer for _id
   366  0D68  341C               	retlw	28
   367                           
   368                           	psect	strings
   369  0800                     __pstrings:	
   370  0800                     stringtab:	
   371  0800                     __stringtab:	
   372  0800                     stringcode:	
   373                           ;	String table - string pointers are 1 byte each
   374                           
   375  0800                     stringdir:	
   376  0800  3008               	movlw	high stringdir
   377  0801  008A               	movwf	10
   378  0802  0804               	movf	4,w
   379  0803  0A84               	incf	4,f
   380  0804  0782               	addwf	2,f
   381  0805                     __stringbase:	
   382  0805  3400               	retlw	0
   383  0806                     __end_of__stringtab:	
   384  0806                     _dpowers:	
   385  0806  3401               	retlw	1
   386  0807  3400               	retlw	0
   387  0808  340A               	retlw	10
   388  0809  3400               	retlw	0
   389  080A  3464               	retlw	100
   390  080B  3400               	retlw	0
   391  080C  34E8               	retlw	232
   392  080D  3403               	retlw	3
   393  080E  3410               	retlw	16
   394  080F  3427               	retlw	39
   395  0810                     __end_of_dpowers:	
   396  0810                     _hexpowers:	
   397  0810  3401               	retlw	1
   398  0811  3400               	retlw	0
   399  0812  3410               	retlw	16
   400  0813  3400               	retlw	0
   401  0814  3400               	retlw	0
   402  0815  3401               	retlw	1
   403  0816  3400               	retlw	0
   404  0817  3410               	retlw	16
   405  0818                     __end_of_hexpowers:	
   406  001F                     _ADCON0bits	set	31
   407  001E                     _ADRESH	set	30
   408  000B                     _INTCONbits	set	11
   409  000C                     _PIR1bits	set	12
   410  0006                     _PORTBbits	set	6
   411  0008                     _PORTDbits	set	8
   412  001A                     _RCREG	set	26
   413  0013                     _SSPBUF	set	19
   414  0019                     _TXREG	set	25
   415  00FE                     _ADCS0	set	254
   416  00FF                     _ADCS1	set	255
   417  00A4                     _CKP	set	164
   418  00C4                     _CREN	set	196
   419  00C2                     _FERR	set	194
   420  005F                     _GIE	set	95
   421  00C1                     _OERR	set	193
   422  005E                     _PEIE	set	94
   423  0065                     _RCIF	set	101
   424  00C6                     _RX9	set	198
   425  00C7                     _SPEN	set	199
   426  00A5                     _SSPEN	set	165
   427  0063                     _SSPIF	set	99
   428  00A0                     _SSPM0	set	160
   429  00A1                     _SSPM1	set	161
   430  00A2                     _SSPM2	set	162
   431  00A3                     _SSPM3	set	163
   432  00A6                     _SSPOV	set	166
   433  0064                     _TXIF	set	100
   434  00A7                     _WCOL	set	167
   435  009F                     _ADCON1bits	set	159
   436  009E                     _ADRESL	set	158
   437  0081                     _OPTION_REGbits	set	129
   438  008C                     _PIE1bits	set	140
   439  0099                     _SPBRG	set	153
   440  0093                     _SSPADD	set	147
   441  0091                     _SSPCON2	set	145
   442  0091                     _SSPCON2bits	set	145
   443  0094                     _SSPSTAT	set	148
   444  0094                     _SSPSTATbits	set	148
   445  0088                     _TRISDbits	set	136
   446  04FE                     _ADCS2	set	1278
   447  04FF                     _ADFM	set	1279
   448  04C2                     _BRGH	set	1218
   449  04C7                     _CSRC	set	1223
   450  0465                     _RCIE	set	1125
   451  04C4                     _SYNC	set	1220
   452  043B                     _TRISC3	set	1083
   453  043C                     _TRISC4	set	1084
   454  04C6                     _TX9	set	1222
   455  04C5                     _TXEN	set	1221
   456  0464                     _TXIE	set	1124
   457  0818                     STR_2:	
   458  0818  3425               	retlw	37	;'%'
   459  0819  3475               	retlw	117	;'u'
   460  081A  3426               	retlw	38	;'&'
   461  081B  3425               	retlw	37	;'%'
   462  081C  3475               	retlw	117	;'u'
   463  081D  3426               	retlw	38	;'&'
   464  081E  3432               	retlw	50	;'2'
   465  081F  3430               	retlw	48	;'0'
   466  0820  3425               	retlw	37	;'%'
   467  0821  3430               	retlw	48	;'0'
   468  0822  3432               	retlw	50	;'2'
   469  0823  3458               	retlw	88	;'X'
   470  0824  342D               	retlw	45	;'-'
   471  0825  3425               	retlw	37	;'%'
   472  0826  3430               	retlw	48	;'0'
   473  0827  3432               	retlw	50	;'2'
   474  0828  3458               	retlw	88	;'X'
   475  0829  342D               	retlw	45	;'-'
   476  082A  3425               	retlw	37	;'%'
   477  082B  3430               	retlw	48	;'0'
   478  082C  3432               	retlw	50	;'2'
   479  082D  3458               	retlw	88	;'X'
   480  082E  3420               	retlw	32	;' '
   481  082F  3425               	retlw	37	;'%'
   482  0830  3430               	retlw	48	;'0'
   483  0831  3432               	retlw	50	;'2'
   484  0832  3458               	retlw	88	;'X'
   485  0833  343A               	retlw	58	;':'
   486  0834  3425               	retlw	37	;'%'
   487  0835  3430               	retlw	48	;'0'
   488  0836  3432               	retlw	50	;'2'
   489  0837  3458               	retlw	88	;'X'
   490  0838  343A               	retlw	58	;':'
   491  0839  3425               	retlw	37	;'%'
   492  083A  3430               	retlw	48	;'0'
   493  083B  3432               	retlw	50	;'2'
   494  083C  3458               	retlw	88	;'X'
   495  083D  3400               	retlw	0
   496  083E                     STR_4:	
   497  083E  3430               	retlw	48	;'0'
   498  083F  3431               	retlw	49	;'1'
   499  0840  3432               	retlw	50	;'2'
   500  0841  3433               	retlw	51	;'3'
   501  0842  3434               	retlw	52	;'4'
   502  0843  3435               	retlw	53	;'5'
   503  0844  3436               	retlw	54	;'6'
   504  0845  3437               	retlw	55	;'7'
   505  0846  3438               	retlw	56	;'8'
   506  0847  3439               	retlw	57	;'9'
   507  0848  3441               	retlw	65	;'A'
   508  0849  3442               	retlw	66	;'B'
   509  084A  3443               	retlw	67	;'C'
   510  084B  3444               	retlw	68	;'D'
   511  084C  3445               	retlw	69	;'E'
   512  084D  3446               	retlw	70	;'F'
   513  084E  3400               	retlw	0
   514  084F                     STR_1:	
   515  084F  340A               	retlw	10
   516  0850  340D               	retlw	13
   517  0851  3400               	retlw	0
   518  0852                     STR_3:	
   519  0852  340A               	retlw	10
   520  0853  3400               	retlw	0
   521                           
   522                           ; #config settings
   523  0000                     
   524                           	psect	cinit
   525  0015                     start_initialization:	
   526  0015                     __initialization:	
   527                           
   528                           ; Clear objects allocated to BITBANK0
   529  0015  01D7               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   530                           
   531                           ; Clear objects allocated to BANK0
   532  0016  01D8               	clrf	__pbssBANK0& (0+127)
   533                           
   534                           ; Clear objects allocated to BANK1
   535  0017  1383               	bcf	3,7	;select IRP bank0
   536  0018  30A0               	movlw	low __pbssBANK1
   537  0019  0084               	movwf	4
   538  001A  30C4               	movlw	low (__pbssBANK1+36)
   539  001B  120A  158A  2591  120A  118A  	fcall	clear_ram0
   540                           
   541                           ; Clear objects allocated to BANK3
   542  0020  1783               	bsf	3,7	;select IRP bank2
   543  0021  3090               	movlw	low __pbssBANK3
   544  0022  0084               	movwf	4
   545  0023  30AA               	movlw	low (__pbssBANK3+26)
   546  0024  120A  158A  2591  120A  118A  	fcall	clear_ram0
   547                           
   548                           ; Initialize objects allocated to BANK1
   549  0029  1683               	bsf	3,5	;RP0=1, select bank1
   550  002A  1303               	bcf	3,6	;RP1=0, select bank1
   551  002B  120A  158A  2567  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   552  0030  00E4               	movwf	__pdataBANK1& (0+127)
   553  0031  120A  158A  2568  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   554  0036  00E5               	movwf	(__pdataBANK1+1)& (0+127)
   555                           
   556                           ; Initialize objects allocated to BANK0
   557  0037  1283               	bcf	3,5	;RP0=0, select bank0
   558  0038  1303               	bcf	3,6	;RP1=0, select bank0
   559  0039  120A  118A  2003   	fcall	__pidataBANK0	;fetch initializer
   560  003C  00D9               	movwf	__pdataBANK0& (0+127)
   561  003D                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564  003D                     __end_of__initialization:	
   565  003D  0183               	clrf	3
   566  003E  120A  118A  2A8E   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	bitbssBANK0
   569  02B8                     __pbitbssBANK0:	
   570  02B8                     _bottonToSend:	
   571  02B8                     	ds	1
   572  02B9                     _changing:	
   573  02B9                     	ds	1
   574  02BA                     _hasAnError:	
   575  02BA                     	ds	1
   576  02BB                     _valLedRD4:	
   577  02BB                     	ds	1
   578                           
   579                           	psect	bssBANK0
   580  0058                     __pbssBANK0:	
   581  0058                     _i:	
   582  0058                     	ds	1
   583                           
   584                           	psect	dataBANK0
   585  0059                     __pdataBANK0:	
   586  0059                     _receivedData:	
   587  0059                     	ds	1
   588                           
   589                           	psect	bssBANK1
   590  00A0                     __pbssBANK1:	
   591  00A0                     _data_ADC:	
   592  00A0                     	ds	2
   593  00A2                     _ano:	
   594  00A2                     	ds	1
   595  00A3                     _contLedRD3:	
   596  00A3                     	ds	1
   597  00A4                     _dia:	
   598  00A4                     	ds	1
   599  00A5                     _hora:	
   600  00A5                     	ds	1
   601  00A6                     _leitura:	
   602  00A6                     	ds	1
   603  00A7                     _mes:	
   604  00A7                     	ds	1
   605  00A8                     _minuto:	
   606  00A8                     	ds	1
   607  00A9                     _segundo:	
   608  00A9                     	ds	1
   609  00AA                     _string_aux:	
   610  00AA                     	ds	26
   611                           
   612                           	psect	dataBANK1
   613  00E4                     __pdataBANK1:	
   614  00E4                     _channel:	
   615  00E4                     	ds	1
   616  00E5                     _id:	
   617  00E5                     	ds	1
   618                           
   619                           	psect	bssBANK3
   620  0190                     __pbssBANK3:	
   621  0190                     _string:	
   622  0190                     	ds	26
   623                           
   624                           	psect	clrtext
   625  0D91                     clear_ram0:	
   626                           ;	Called with FSR containing the base address, and
   627                           ;	W with the last address+1
   628                           
   629  0D91  0064               	clrwdt	;clear the watchdog before getting into this loop
   630  0D92                     clrloop0:	
   631  0D92  0180               	clrf	0	;clear RAM location pointed to by FSR
   632  0D93  0A84               	incf	4,f	;increment pointer
   633  0D94  0604               	xorwf	4,w	;XOR with final address
   634  0D95  1903               	btfsc	3,2	;have we reached the end yet?
   635  0D96  3400               	retlw	0	;all done for this memory range, return
   636  0D97  0604               	xorwf	4,w	;XOR again to restore value
   637  0D98  2D92               	goto	clrloop0	;do the next byte
   638                           
   639                           	psect	cstackBANK1
   640  00C4                     __pcstackBANK1:	
   641  00C4                     printf@idx:	
   642                           
   643                           ; 1 bytes @ 0x0
   644  00C4                     	ds	1
   645  00C5                     printf@ap:	
   646                           
   647                           ; 1 bytes @ 0x1
   648  00C5                     	ds	1
   649  00C6                     printf@prec:	
   650                           
   651                           ; 1 bytes @ 0x2
   652  00C6                     	ds	1
   653  00C7                     printf@val:	
   654                           
   655                           ; 2 bytes @ 0x3
   656  00C7                     	ds	2
   657  00C9                     printf@flag:	
   658                           
   659                           ; 1 bytes @ 0x5
   660  00C9                     	ds	1
   661  00CA                     printf@width:	
   662                           
   663                           ; 2 bytes @ 0x6
   664  00CA                     	ds	2
   665  00CC                     printf@f:	
   666                           
   667                           ; 1 bytes @ 0x8
   668  00CC                     	ds	1
   669  00CD                     printf@c:	
   670                           
   671                           ; 1 bytes @ 0x9
   672  00CD                     	ds	1
   673  00CE                     ??_main:	
   674                           
   675                           ; 0 bytes @ 0xA
   676  00CE                     	ds	14
   677  00DC                     main@cont:	
   678                           
   679                           ; 2 bytes @ 0x18
   680  00DC                     	ds	2
   681  00DE                     main@cont_671:	
   682                           
   683                           ; 2 bytes @ 0x1A
   684  00DE                     	ds	2
   685  00E0                     main@cont_672:	
   686                           
   687                           ; 2 bytes @ 0x1C
   688  00E0                     	ds	2
   689  00E2                     main@cont_673:	
   690                           
   691                           ; 2 bytes @ 0x1E
   692  00E2                     	ds	2
   693                           
   694                           	psect	cstackCOMMON
   695  0070                     __pcstackCOMMON:	
   696  0070                     ?_isdigit:	
   697  0070                     ?_configADInterrupt:	
   698                           ; 1 bit 
   699                           
   700  0070                     ?_configAD:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_selectChanel:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_InitI2C_Master:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_I2C_Start:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_I2C_ReStart:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_I2C_Stop:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_I2C_Send_NACK:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_I2C_Write_Byte:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_I2C_Idle:	
   725                           ; 1 bit 
   726                           
   727  0070                     ?_configTimer:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_configRS232:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_configUSARTInterrupts:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_putch:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ?_interruptions:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0070                     ?_write_RTC_I2c:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0070                     ?_read_RTC_I2c:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_main:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0070                     ?i1_putch:	
   752                           ; 0 bytes @ 0x0
   753                           
   754  0070                     ??i1_putch:	
   755                           ; 0 bytes @ 0x0
   756                           
   757  0070                     ?i1_isdigit:	
   758                           ; 0 bytes @ 0x0
   759                           
   760  0070                     ??i1_isdigit:	
   761                           ; 1 bit 
   762                           
   763  0070                     ?_strcpy:	
   764                           ; 0 bytes @ 0x0
   765                           
   766  0070                     ?_I2C_Read_Byte:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?___awmod:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?i1_printf:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0070                     ?i1___wmul:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ?i1___lwdiv:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     strcpy@from:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     i1putch@byte:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     i1_isdigit$900:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ___awmod@divisor:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     i1___wmul@multiplier:	
   794                           ; 2 bytes @ 0x0
   795                           
   796  0070                     i1___lwdiv@divisor:	
   797                           ; 2 bytes @ 0x0
   798                           
   799                           
   800                           ; 2 bytes @ 0x0
   801  0070                     	ds	1
   802  0071                     ??_strcpy:	
   803  0071                     i1isdigit@c:	
   804                           ; 0 bytes @ 0x1
   805                           
   806                           
   807                           ; 1 bytes @ 0x1
   808  0071                     	ds	1
   809  0072                     strcpy@to:	
   810  0072                     ___awmod@dividend:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     i1___wmul@multiplicand:	
   814                           ; 2 bytes @ 0x2
   815                           
   816  0072                     i1___lwdiv@dividend:	
   817                           ; 2 bytes @ 0x2
   818                           
   819                           
   820                           ; 2 bytes @ 0x2
   821  0072                     	ds	1
   822  0073                     strcpy@cp:	
   823                           
   824                           ; 1 bytes @ 0x3
   825  0073                     	ds	1
   826  0074                     ??___awmod:	
   827  0074                     ??i1___wmul:	
   828                           ; 0 bytes @ 0x4
   829                           
   830  0074                     ??i1___lwdiv:	
   831                           ; 0 bytes @ 0x4
   832                           
   833  0074                     i1___wmul@product:	
   834                           ; 0 bytes @ 0x4
   835                           
   836                           
   837                           ; 2 bytes @ 0x4
   838  0074                     	ds	1
   839  0075                     ___awmod@counter:	
   840  0075                     i1___lwdiv@quotient:	
   841                           ; 1 bytes @ 0x5
   842                           
   843                           
   844                           ; 2 bytes @ 0x5
   845  0075                     	ds	1
   846  0076                     ___awmod@sign:	
   847                           
   848                           ; 1 bytes @ 0x6
   849  0076                     	ds	1
   850  0077                     i1___lwdiv@counter:	
   851                           
   852                           ; 1 bytes @ 0x7
   853  0077                     	ds	1
   854  0078                     ?i1___lwmod:	
   855  0078                     i1___lwmod@divisor:	
   856                           ; 2 bytes @ 0x8
   857                           
   858                           
   859                           ; 2 bytes @ 0x8
   860  0078                     	ds	2
   861  007A                     i1___lwmod@dividend:	
   862                           
   863                           ; 2 bytes @ 0xA
   864  007A                     	ds	2
   865  007C                     ??i1___lwmod:	
   866                           
   867                           ; 0 bytes @ 0xC
   868  007C                     	ds	1
   869  007D                     i1___lwmod@counter:	
   870                           
   871                           ; 1 bytes @ 0xD
   872  007D                     	ds	1
   873                           
   874                           	psect	cstackBANK0
   875  0020                     __pcstackBANK0:	
   876  0020                     ??i1_printf:	
   877                           
   878                           ; 0 bytes @ 0x0
   879  0020                     	ds	3
   880  0023                     i1printf@idx:	
   881                           
   882                           ; 1 bytes @ 0x3
   883  0023                     	ds	1
   884  0024                     i1printf@f:	
   885                           
   886                           ; 1 bytes @ 0x4
   887  0024                     	ds	1
   888  0025                     i1printf@ap:	
   889                           
   890                           ; 1 bytes @ 0x5
   891  0025                     	ds	1
   892  0026                     i1printf@prec:	
   893                           
   894                           ; 1 bytes @ 0x6
   895  0026                     	ds	1
   896  0027                     i1printf@flag:	
   897                           
   898                           ; 1 bytes @ 0x7
   899  0027                     	ds	1
   900  0028                     i1printf@val:	
   901                           
   902                           ; 2 bytes @ 0x8
   903  0028                     	ds	2
   904  002A                     i1printf@width:	
   905                           
   906                           ; 2 bytes @ 0xA
   907  002A                     	ds	2
   908  002C                     i1printf@c:	
   909                           
   910                           ; 1 bytes @ 0xC
   911  002C                     	ds	1
   912  002D                     ??_interruptions:	
   913                           
   914                           ; 0 bytes @ 0xD
   915  002D                     	ds	7
   916  0034                     interruptions@cont:	
   917                           
   918                           ; 2 bytes @ 0x14
   919  0034                     	ds	2
   920  0036                     ??_isdigit:	
   921  0036                     ??_configADInterrupt:	
   922                           ; 0 bytes @ 0x16
   923                           
   924  0036                     ??_configAD:	
   925                           ; 0 bytes @ 0x16
   926                           
   927  0036                     ??_selectChanel:	
   928                           ; 0 bytes @ 0x16
   929                           
   930  0036                     ??_InitI2C_Master:	
   931                           ; 0 bytes @ 0x16
   932                           
   933  0036                     ??_I2C_Start:	
   934                           ; 0 bytes @ 0x16
   935                           
   936  0036                     ??_I2C_ReStart:	
   937                           ; 0 bytes @ 0x16
   938                           
   939  0036                     ??_I2C_Stop:	
   940                           ; 0 bytes @ 0x16
   941                           
   942  0036                     ??_I2C_Send_NACK:	
   943                           ; 0 bytes @ 0x16
   944                           
   945  0036                     ??_I2C_Write_Byte:	
   946                           ; 0 bytes @ 0x16
   947                           
   948  0036                     ??_I2C_Read_Byte:	
   949                           ; 0 bytes @ 0x16
   950                           
   951  0036                     ??_I2C_Idle:	
   952                           ; 0 bytes @ 0x16
   953                           
   954  0036                     ??_configTimer:	
   955                           ; 0 bytes @ 0x16
   956                           
   957  0036                     ??_configRS232:	
   958                           ; 0 bytes @ 0x16
   959                           
   960  0036                     ??_configUSARTInterrupts:	
   961                           ; 0 bytes @ 0x16
   962                           
   963  0036                     ??_putch:	
   964                           ; 0 bytes @ 0x16
   965                           
   966  0036                     ?___wmul:	
   967                           ; 0 bytes @ 0x16
   968                           
   969  0036                     ?___lwdiv:	
   970                           ; 2 bytes @ 0x16
   971                           
   972  0036                     selectChanel@channel:	
   973                           ; 2 bytes @ 0x16
   974                           
   975  0036                     I2C_Write_Byte@Byte:	
   976                           ; 1 bytes @ 0x16
   977                           
   978  0036                     putch@byte:	
   979                           ; 1 bytes @ 0x16
   980                           
   981  0036                     _isdigit$900:	
   982                           ; 1 bytes @ 0x16
   983                           
   984  0036                     ___wmul@multiplier:	
   985                           ; 1 bytes @ 0x16
   986                           
   987  0036                     ___lwdiv@divisor:	
   988                           ; 2 bytes @ 0x16
   989                           
   990                           
   991                           ; 2 bytes @ 0x16
   992  0036                     	ds	1
   993  0037                     ??_write_RTC_I2c:	
   994  0037                     ??_read_RTC_I2c:	
   995                           ; 0 bytes @ 0x17
   996                           
   997  0037                     isdigit@c:	
   998                           ; 0 bytes @ 0x17
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x17
  1002  0037                     	ds	1
  1003  0038                     read_RTC_I2c@pos_memoria:	
  1004  0038                     ___wmul@multiplicand:	
  1005                           ; 1 bytes @ 0x18
  1006                           
  1007  0038                     ___lwdiv@dividend:	
  1008                           ; 2 bytes @ 0x18
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x18
  1012  0038                     	ds	2
  1013  003A                     ??___wmul:	
  1014  003A                     ??___lwdiv:	
  1015                           ; 0 bytes @ 0x1A
  1016                           
  1017  003A                     ___wmul@product:	
  1018                           ; 0 bytes @ 0x1A
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x1A
  1022  003A                     	ds	1
  1023  003B                     ___lwdiv@quotient:	
  1024                           
  1025                           ; 2 bytes @ 0x1B
  1026  003B                     	ds	2
  1027  003D                     ___lwdiv@counter:	
  1028                           
  1029                           ; 1 bytes @ 0x1D
  1030  003D                     	ds	1
  1031  003E                     ?___lwmod:	
  1032  003E                     ___lwmod@divisor:	
  1033                           ; 2 bytes @ 0x1E
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x1E
  1037  003E                     	ds	2
  1038  0040                     ___lwmod@dividend:	
  1039                           
  1040                           ; 2 bytes @ 0x20
  1041  0040                     	ds	2
  1042  0042                     ??___lwmod:	
  1043                           
  1044                           ; 0 bytes @ 0x22
  1045  0042                     	ds	1
  1046  0043                     ___lwmod@counter:	
  1047                           
  1048                           ; 1 bytes @ 0x23
  1049  0043                     	ds	1
  1050  0044                     ?_printf:	
  1051                           
  1052                           ; 2 bytes @ 0x24
  1053  0044                     	ds	16
  1054  0054                     ??_printf:	
  1055                           
  1056                           ; 0 bytes @ 0x34
  1057  0054                     	ds	3
  1058                           
  1059                           	psect	maintext
  1060  028E                     __pmaintext:	
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 150 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  cont            2   30[BANK1 ] int 
  1071 ;;  cont            2   28[BANK1 ] int 
  1072 ;;  cont            2   26[BANK1 ] int 
  1073 ;;  cont            2   24[BANK1 ] int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;		None               void
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : B00/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       8       0       0
  1085 ;;      Temps:          0       0      14       0       0
  1086 ;;      Totals:         0       0      22       0       0
  1087 ;;Total ram usage:       22 bytes
  1088 ;; Hardware stack levels required when called:    5
  1089 ;; This function calls:
  1090 ;;		_InitI2C_Master
  1091 ;;		_configAD
  1092 ;;		_configADInterrupt
  1093 ;;		_configRS232
  1094 ;;		_configTimer
  1095 ;;		_configUSARTInterrupts
  1096 ;;		_printf
  1097 ;;		_read_RTC_I2c
  1098 ;;		_selectChanel
  1099 ;;		_write_RTC_I2c
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _main
  1107  028E                     _main:	
  1108                           
  1109                           ;main.c: 151: TRISDbits.TRISD3 = 0;
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1113  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1114  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1115  0290  1188               	bcf	8,3	;volatile
  1116                           
  1117                           ;main.c: 152: TRISDbits.TRISD4 = 0;
  1118  0291  1208               	bcf	8,4	;volatile
  1119                           
  1120                           ;main.c: 155: PORTBbits.RB7 = 1;
  1121  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0294  1786               	bsf	6,7	;volatile
  1124                           
  1125                           ;main.c: 156: PORTBbits.RB6 = 0;
  1126  0295  1306               	bcf	6,6	;volatile
  1127                           
  1128                           ;main.c: 157: PORTBbits.RB5 = 0;
  1129  0296  1286               	bcf	6,5	;volatile
  1130                           
  1131                           ;main.c: 158: PORTBbits.RB4 = 0;
  1132  0297  1206               	bcf	6,4	;volatile
  1133                           
  1134                           ;main.c: 159: INTCONbits.RBIE = 1;
  1135  0298  158B               	bsf	11,3	;volatile
  1136                           
  1137                           ;main.c: 163: configTimer();
  1138  0299  120A  158A  25C0  120A  118A  	fcall	_configTimer
  1139                           
  1140                           ;main.c: 166: configADInterrupt();
  1141  029E  120A  158A  2599  120A  118A  	fcall	_configADInterrupt
  1142                           
  1143                           ;main.c: 167: configAD();
  1144  02A3  120A  158A  25EA  120A  118A  	fcall	_configAD
  1145                           
  1146                           ;main.c: 170: configRS232();
  1147  02A8  120A  158A  260A  120A  118A  	fcall	_configRS232
  1148                           
  1149                           ;main.c: 171: configUSARTInterrupts();
  1150  02AD  120A  158A  25DB  120A  118A  	fcall	_configUSARTInterrupts
  1151                           
  1152                           ;main.c: 174: InitI2C_Master();
  1153  02B2  120A  158A  261B  120A  118A  	fcall	_InitI2C_Master
  1154                           
  1155                           ;main.c: 177: selectChanel(channel);
  1156  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1157  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1158  02B9  0864               	movf	_channel^(0+128),w
  1159  02BA  120A  158A  2774  120A  118A  	fcall	_selectChanel
  1160                           
  1161                           ;main.c: 180: for(int cont = 0; cont < 100; cont++)
  1162  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1163  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1164  02C1  01DC               	clrf	main@cont^(0+128)
  1165  02C2  01DD               	clrf	(main@cont+1)^(0+128)
  1166  02C3  085D               	movf	(main@cont+1)^(0+128),w
  1167  02C4  3A80               	xorlw	128
  1168  02C5  00FF               	movwf	127
  1169  02C6  3080               	movlw	128
  1170  02C7  027F               	subwf	127,w
  1171  02C8  1D03               	skipz
  1172  02C9  2ACC               	goto	u2435
  1173  02CA  3064               	movlw	100
  1174  02CB  025C               	subwf	main@cont^(0+128),w
  1175  02CC                     u2435:	
  1176  02CC  1803               	btfsc	3,0
  1177  02CD  2AEC               	goto	l317
  1178  02CE                     l2279:	
  1179                           
  1180                           ;main.c: 181: _delay((unsigned long)((10)*(20000000/4000.0)));
  1181  02CE  3041               	movlw	65
  1182  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  1183  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  1184  02D1  00CF               	movwf	(??_main^(0+128)+1)
  1185  02D2  30EE               	movlw	238
  1186  02D3  00CE               	movwf	??_main^(0+128)
  1187  02D4                     u2557:	
  1188  02D4  0BCE               	decfsz	??_main^(0+128),f
  1189  02D5  2AD4               	goto	u2557
  1190  02D6  0BCF               	decfsz	(??_main^(0+128)+1),f
  1191  02D7  2AD4               	goto	u2557
  1192  02D8  0000               	nop
  1193  02D9  3001               	movlw	1
  1194  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1195  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1196  02DC  07DC               	addwf	main@cont^(0+128),f
  1197  02DD  1803               	skipnc
  1198  02DE  0ADD               	incf	(main@cont+1)^(0+128),f
  1199  02DF  3000               	movlw	0
  1200  02E0  07DD               	addwf	(main@cont+1)^(0+128),f
  1201  02E1  085D               	movf	(main@cont+1)^(0+128),w
  1202  02E2  3A80               	xorlw	128
  1203  02E3  00FF               	movwf	127
  1204  02E4  3080               	movlw	128
  1205  02E5  027F               	subwf	127,w
  1206  02E6  1D03               	skipz
  1207  02E7  2AEA               	goto	u2445
  1208  02E8  3064               	movlw	100
  1209  02E9  025C               	subwf	main@cont^(0+128),w
  1210  02EA                     u2445:	
  1211  02EA  1C03               	skipc
  1212  02EB  2ACE               	goto	l2279
  1213  02EC                     l317:	
  1214                           
  1215                           ;main.c: 182: PORTDbits.RD4 = 1;
  1216  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1217  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1218  02EE  1608               	bsf	8,4	;volatile
  1219                           
  1220                           ;main.c: 183: for(int cont = 0; cont < 100; cont++)
  1221  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  1222  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  1223  02F1  01DE               	clrf	main@cont_671^(0+128)
  1224  02F2  01DF               	clrf	(main@cont_671+1)^(0+128)
  1225  02F3  085F               	movf	(main@cont_671+1)^(0+128),w
  1226  02F4  3A80               	xorlw	128
  1227  02F5  00FF               	movwf	127
  1228  02F6  3080               	movlw	128
  1229  02F7  027F               	subwf	127,w
  1230  02F8  1D03               	skipz
  1231  02F9  2AFC               	goto	u2455
  1232  02FA  3064               	movlw	100
  1233  02FB  025E               	subwf	main@cont_671^(0+128),w
  1234  02FC                     u2455:	
  1235  02FC  1803               	btfsc	3,0
  1236  02FD  2B1C               	goto	l319
  1237  02FE                     l2289:	
  1238                           
  1239                           ;main.c: 184: _delay((unsigned long)((10)*(20000000/4000.0)));
  1240  02FE  3041               	movlw	65
  1241  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1242  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1243  0301  00CF               	movwf	(??_main^(0+128)+1)
  1244  0302  30EE               	movlw	238
  1245  0303  00CE               	movwf	??_main^(0+128)
  1246  0304                     u2567:	
  1247  0304  0BCE               	decfsz	??_main^(0+128),f
  1248  0305  2B04               	goto	u2567
  1249  0306  0BCF               	decfsz	(??_main^(0+128)+1),f
  1250  0307  2B04               	goto	u2567
  1251  0308  0000               	nop
  1252  0309  3001               	movlw	1
  1253  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1254  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1255  030C  07DE               	addwf	main@cont_671^(0+128),f
  1256  030D  1803               	skipnc
  1257  030E  0ADF               	incf	(main@cont_671+1)^(0+128),f
  1258  030F  3000               	movlw	0
  1259  0310  07DF               	addwf	(main@cont_671+1)^(0+128),f
  1260  0311  085F               	movf	(main@cont_671+1)^(0+128),w
  1261  0312  3A80               	xorlw	128
  1262  0313  00FF               	movwf	127
  1263  0314  3080               	movlw	128
  1264  0315  027F               	subwf	127,w
  1265  0316  1D03               	skipz
  1266  0317  2B1A               	goto	u2465
  1267  0318  3064               	movlw	100
  1268  0319  025E               	subwf	main@cont_671^(0+128),w
  1269  031A                     u2465:	
  1270  031A  1C03               	skipc
  1271  031B  2AFE               	goto	l2289
  1272  031C                     l319:	
  1273                           
  1274                           ;main.c: 185: PORTDbits.RD4 = 0;
  1275  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1276  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1277  031E  1208               	bcf	8,4	;volatile
  1278                           
  1279                           ;main.c: 186: for(int cont = 0; cont < 100; cont++)
  1280  031F  1683               	bsf	3,5	;RP0=1, select bank1
  1281  0320  1303               	bcf	3,6	;RP1=0, select bank1
  1282  0321  01E0               	clrf	main@cont_672^(0+128)
  1283  0322  01E1               	clrf	(main@cont_672+1)^(0+128)
  1284  0323  0861               	movf	(main@cont_672+1)^(0+128),w
  1285  0324  3A80               	xorlw	128
  1286  0325  00FF               	movwf	127
  1287  0326  3080               	movlw	128
  1288  0327  027F               	subwf	127,w
  1289  0328  1D03               	skipz
  1290  0329  2B2C               	goto	u2475
  1291  032A  3064               	movlw	100
  1292  032B  0260               	subwf	main@cont_672^(0+128),w
  1293  032C                     u2475:	
  1294  032C  1803               	btfsc	3,0
  1295  032D  2B4C               	goto	l321
  1296  032E                     l2299:	
  1297                           
  1298                           ;main.c: 187: _delay((unsigned long)((10)*(20000000/4000.0)));
  1299  032E  3041               	movlw	65
  1300  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1301  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1302  0331  00CF               	movwf	(??_main^(0+128)+1)
  1303  0332  30EE               	movlw	238
  1304  0333  00CE               	movwf	??_main^(0+128)
  1305  0334                     u2577:	
  1306  0334  0BCE               	decfsz	??_main^(0+128),f
  1307  0335  2B34               	goto	u2577
  1308  0336  0BCF               	decfsz	(??_main^(0+128)+1),f
  1309  0337  2B34               	goto	u2577
  1310  0338  0000               	nop
  1311  0339  3001               	movlw	1
  1312  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1313  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1314  033C  07E0               	addwf	main@cont_672^(0+128),f
  1315  033D  1803               	skipnc
  1316  033E  0AE1               	incf	(main@cont_672+1)^(0+128),f
  1317  033F  3000               	movlw	0
  1318  0340  07E1               	addwf	(main@cont_672+1)^(0+128),f
  1319  0341  0861               	movf	(main@cont_672+1)^(0+128),w
  1320  0342  3A80               	xorlw	128
  1321  0343  00FF               	movwf	127
  1322  0344  3080               	movlw	128
  1323  0345  027F               	subwf	127,w
  1324  0346  1D03               	skipz
  1325  0347  2B4A               	goto	u2485
  1326  0348  3064               	movlw	100
  1327  0349  0260               	subwf	main@cont_672^(0+128),w
  1328  034A                     u2485:	
  1329  034A  1C03               	skipc
  1330  034B  2B2E               	goto	l2299
  1331  034C                     l321:	
  1332                           
  1333                           ;main.c: 188: PORTDbits.RD4 = 1;
  1334  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1335  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1336  034E  1608               	bsf	8,4	;volatile
  1337                           
  1338                           ;main.c: 189: for(int cont = 0; cont < 100; cont++)
  1339  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1340  0350  1303               	bcf	3,6	;RP1=0, select bank1
  1341  0351  01E2               	clrf	main@cont_673^(0+128)
  1342  0352  01E3               	clrf	(main@cont_673+1)^(0+128)
  1343  0353  0863               	movf	(main@cont_673+1)^(0+128),w
  1344  0354  3A80               	xorlw	128
  1345  0355  00FF               	movwf	127
  1346  0356  3080               	movlw	128
  1347  0357  027F               	subwf	127,w
  1348  0358  1D03               	skipz
  1349  0359  2B5C               	goto	u2495
  1350  035A  3064               	movlw	100
  1351  035B  0262               	subwf	main@cont_673^(0+128),w
  1352  035C                     u2495:	
  1353  035C  1803               	btfsc	3,0
  1354  035D  2B7C               	goto	l323
  1355  035E                     l2309:	
  1356                           
  1357                           ;main.c: 190: _delay((unsigned long)((10)*(20000000/4000.0)));
  1358  035E  3041               	movlw	65
  1359  035F  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0360  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0361  00CF               	movwf	(??_main^(0+128)+1)
  1362  0362  30EE               	movlw	238
  1363  0363  00CE               	movwf	??_main^(0+128)
  1364  0364                     u2587:	
  1365  0364  0BCE               	decfsz	??_main^(0+128),f
  1366  0365  2B64               	goto	u2587
  1367  0366  0BCF               	decfsz	(??_main^(0+128)+1),f
  1368  0367  2B64               	goto	u2587
  1369  0368  0000               	nop
  1370  0369  3001               	movlw	1
  1371  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1372  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1373  036C  07E2               	addwf	main@cont_673^(0+128),f
  1374  036D  1803               	skipnc
  1375  036E  0AE3               	incf	(main@cont_673+1)^(0+128),f
  1376  036F  3000               	movlw	0
  1377  0370  07E3               	addwf	(main@cont_673+1)^(0+128),f
  1378  0371  0863               	movf	(main@cont_673+1)^(0+128),w
  1379  0372  3A80               	xorlw	128
  1380  0373  00FF               	movwf	127
  1381  0374  3080               	movlw	128
  1382  0375  027F               	subwf	127,w
  1383  0376  1D03               	skipz
  1384  0377  2B7A               	goto	u2505
  1385  0378  3064               	movlw	100
  1386  0379  0262               	subwf	main@cont_673^(0+128),w
  1387  037A                     u2505:	
  1388  037A  1C03               	skipc
  1389  037B  2B5E               	goto	l2309
  1390  037C                     l323:	
  1391                           
  1392                           ;main.c: 191: PORTDbits.RD4 = 0;
  1393  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1394  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1395  037E  1208               	bcf	8,4	;volatile
  1396                           
  1397                           ;main.c: 195: write_RTC_I2c();
  1398  037F  120A  118A  2728  120A  118A  	fcall	_write_RTC_I2c
  1399  0384                     l2315:	
  1400                           ;main.c: 196: while (1){
  1401                           
  1402                           
  1403                           ;main.c: 198: if(contLedRD3 == 76*2){
  1404  0384  3098               	movlw	152
  1405  0385  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0386  1303               	bcf	3,6	;RP1=0, select bank1
  1407  0387  0623               	xorwf	_contLedRD3^(0+128),w
  1408  0388  1D03               	btfss	3,2
  1409  0389  2B9A               	goto	l2323
  1410                           
  1411                           ;main.c: 199: changing = ~changing;
  1412  038A  3002               	movlw	(0+1) shl (_changing& (0+7))
  1413  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1414  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1415  038D  06D7               	xorwf	_changing/(0+8),f
  1416                           
  1417                           ;main.c: 200: PORTDbits.RD3 = changing;
  1418  038E  1CD7               	btfss	_changing/(0+8),_changing& (0+7)
  1419  038F  2B94               	goto	u2520
  1420  0390  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0391  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0392  1588               	bsf	8,3	;volatile
  1423  0393  2B97               	goto	l2321
  1424  0394                     u2520:	
  1425  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0396  1188               	bcf	8,3	;volatile
  1428  0397                     l2321:	
  1429                           
  1430                           ;main.c: 201: contLedRD3 = 0;
  1431  0397  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0398  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0399  01A3               	clrf	_contLedRD3^(0+128)
  1434  039A                     l2323:	
  1435                           
  1436                           ;main.c: 202: }
  1437                           ;main.c: 203: if(bottonToSend == 1){
  1438  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1439  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1440  039C  1C57               	btfss	_bottonToSend/(0+8),_bottonToSend& (0+7)
  1441  039D  2B84               	goto	l2315
  1442                           
  1443                           ;main.c: 204: ADCON0bits.GO_DONE = 1;
  1444  039E  151F               	bsf	31,2	;volatile
  1445                           
  1446                           ;main.c: 206: read_RTC_I2c(0x04);
  1447  039F  3004               	movlw	4
  1448  03A0  120A  118A  279E  120A  118A  	fcall	_read_RTC_I2c
  1449                           
  1450                           ;main.c: 207: dia = leitura;
  1451  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  1452  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  1453  03A7  0826               	movf	_leitura^(0+128),w
  1454  03A8  00CE               	movwf	??_main^(0+128)
  1455  03A9  084E               	movf	??_main^(0+128),w
  1456  03AA  00A4               	movwf	_dia^(0+128)
  1457                           
  1458                           ;main.c: 208: _delay((unsigned long)((10)*(20000000/4000.0)));
  1459  03AB  3041               	movlw	65
  1460  03AC  00CF               	movwf	(??_main^(0+128)+1)
  1461  03AD  30EE               	movlw	238
  1462  03AE  00CE               	movwf	??_main^(0+128)
  1463  03AF                     u2597:	
  1464  03AF  0BCE               	decfsz	??_main^(0+128),f
  1465  03B0  2BAF               	goto	u2597
  1466  03B1  0BCF               	decfsz	(??_main^(0+128)+1),f
  1467  03B2  2BAF               	goto	u2597
  1468  03B3  0000               	nop
  1469                           
  1470                           ;main.c: 211: read_RTC_I2c(0x05);
  1471  03B4  3005               	movlw	5
  1472  03B5  120A  118A  279E  120A  118A  	fcall	_read_RTC_I2c
  1473                           
  1474                           ;main.c: 212: mes = leitura;
  1475  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  1476  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  1477  03BC  0826               	movf	_leitura^(0+128),w
  1478  03BD  00CE               	movwf	??_main^(0+128)
  1479  03BE  084E               	movf	??_main^(0+128),w
  1480  03BF  00A7               	movwf	_mes^(0+128)
  1481                           
  1482                           ;main.c: 213: _delay((unsigned long)((10)*(20000000/4000.0)));
  1483  03C0  3041               	movlw	65
  1484  03C1  00CF               	movwf	(??_main^(0+128)+1)
  1485  03C2  30EE               	movlw	238
  1486  03C3  00CE               	movwf	??_main^(0+128)
  1487  03C4                     u2607:	
  1488  03C4  0BCE               	decfsz	??_main^(0+128),f
  1489  03C5  2BC4               	goto	u2607
  1490  03C6  0BCF               	decfsz	(??_main^(0+128)+1),f
  1491  03C7  2BC4               	goto	u2607
  1492  03C8  0000               	nop
  1493                           
  1494                           ;main.c: 216: read_RTC_I2c(0x06);
  1495  03C9  3006               	movlw	6
  1496  03CA  120A  118A  279E  120A  118A  	fcall	_read_RTC_I2c
  1497                           
  1498                           ;main.c: 217: ano = leitura;
  1499  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  1500  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  1501  03D1  0826               	movf	_leitura^(0+128),w
  1502  03D2  00CE               	movwf	??_main^(0+128)
  1503  03D3  084E               	movf	??_main^(0+128),w
  1504  03D4  00A2               	movwf	_ano^(0+128)
  1505                           
  1506                           ;main.c: 218: _delay((unsigned long)((10)*(20000000/4000.0)));
  1507  03D5  3041               	movlw	65
  1508  03D6  00CF               	movwf	(??_main^(0+128)+1)
  1509  03D7  30EE               	movlw	238
  1510  03D8  00CE               	movwf	??_main^(0+128)
  1511  03D9                     u2617:	
  1512  03D9  0BCE               	decfsz	??_main^(0+128),f
  1513  03DA  2BD9               	goto	u2617
  1514  03DB  0BCF               	decfsz	(??_main^(0+128)+1),f
  1515  03DC  2BD9               	goto	u2617
  1516  03DD  0000               	nop
  1517                           
  1518                           ;main.c: 221: read_RTC_I2c(0x02);
  1519  03DE  3002               	movlw	2
  1520  03DF  120A  118A  279E  120A  118A  	fcall	_read_RTC_I2c
  1521                           
  1522                           ;main.c: 222: hora = leitura;
  1523  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1524  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1525  03E6  0826               	movf	_leitura^(0+128),w
  1526  03E7  00CE               	movwf	??_main^(0+128)
  1527  03E8  084E               	movf	??_main^(0+128),w
  1528  03E9  00A5               	movwf	_hora^(0+128)
  1529                           
  1530                           ;main.c: 223: _delay((unsigned long)((10)*(20000000/4000.0)));
  1531  03EA  3041               	movlw	65
  1532  03EB  00CF               	movwf	(??_main^(0+128)+1)
  1533  03EC  30EE               	movlw	238
  1534  03ED  00CE               	movwf	??_main^(0+128)
  1535  03EE                     u2627:	
  1536  03EE  0BCE               	decfsz	??_main^(0+128),f
  1537  03EF  2BEE               	goto	u2627
  1538  03F0  0BCF               	decfsz	(??_main^(0+128)+1),f
  1539  03F1  2BEE               	goto	u2627
  1540  03F2  0000               	nop
  1541                           
  1542                           ;main.c: 226: read_RTC_I2c(0x01);
  1543  03F3  3001               	movlw	1
  1544  03F4  120A  118A  279E  120A  118A  	fcall	_read_RTC_I2c
  1545                           
  1546                           ;main.c: 227: minuto = leitura;
  1547  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  1548  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  1549  03FB  0826               	movf	_leitura^(0+128),w
  1550  03FC  00CE               	movwf	??_main^(0+128)
  1551  03FD  084E               	movf	??_main^(0+128),w
  1552  03FE  00A8               	movwf	_minuto^(0+128)
  1553                           
  1554                           ;main.c: 228: _delay((unsigned long)((10)*(20000000/4000.0)));
  1555  03FF  3041               	movlw	65
  1556  0400  00CF               	movwf	(??_main^(0+128)+1)
  1557  0401  30EE               	movlw	238
  1558  0402  00CE               	movwf	??_main^(0+128)
  1559  0403                     u2637:	
  1560  0403  0BCE               	decfsz	??_main^(0+128),f
  1561  0404  2C03               	goto	u2637
  1562  0405  0BCF               	decfsz	(??_main^(0+128)+1),f
  1563  0406  2C03               	goto	u2637
  1564  0407  0000               	nop
  1565                           
  1566                           ;main.c: 231: read_RTC_I2c(0x00);
  1567  0408  3000               	movlw	0
  1568  0409  120A  118A  279E  120A  118A  	fcall	_read_RTC_I2c
  1569                           
  1570                           ;main.c: 232: segundo = leitura;
  1571  040E  1683               	bsf	3,5	;RP0=1, select bank1
  1572  040F  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0410  0826               	movf	_leitura^(0+128),w
  1574  0411  00CE               	movwf	??_main^(0+128)
  1575  0412  084E               	movf	??_main^(0+128),w
  1576  0413  00A9               	movwf	_segundo^(0+128)
  1577                           
  1578                           ;main.c: 236: printf("%u&%u&20%02X-%02X-%02X %02X:%02X:%02X", id, data_ADC, ano, mes, di
      +                          a, hora, minuto, segundo);
  1579  0414  0865               	movf	_id^(0+128),w
  1580  0415  00CE               	movwf	??_main^(0+128)
  1581  0416  01CF               	clrf	(??_main^(0+128)+1)
  1582  0417  084E               	movf	??_main^(0+128),w
  1583  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1585  041A  00C4               	movwf	?_printf
  1586  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1587  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1588  041D  084F               	movf	(??_main+1)^(0+128),w
  1589  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1590  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0420  00C5               	movwf	?_printf+1
  1592  0421  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0422  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0423  0821               	movf	(_data_ADC+1)^(0+128),w
  1595  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0425  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0426  00C7               	movwf	?_printf+3
  1598  0427  1683               	bsf	3,5	;RP0=1, select bank1
  1599  0428  1303               	bcf	3,6	;RP1=0, select bank1
  1600  0429  0820               	movf	_data_ADC^(0+128),w
  1601  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1602  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1603  042C  00C6               	movwf	?_printf+2
  1604  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1605  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1606  042F  0822               	movf	_ano^(0+128),w
  1607  0430  00D0               	movwf	(??_main+2)^(0+128)
  1608  0431  01D1               	clrf	((??_main+2)^(0+128)+1)
  1609  0432  0850               	movf	(??_main+2)^(0+128),w
  1610  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0435  00C8               	movwf	?_printf+4
  1613  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1614  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1615  0438  0851               	movf	(??_main+3)^(0+128),w
  1616  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1617  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1618  043B  00C9               	movwf	?_printf+5
  1619  043C  1683               	bsf	3,5	;RP0=1, select bank1
  1620  043D  1303               	bcf	3,6	;RP1=0, select bank1
  1621  043E  0827               	movf	_mes^(0+128),w
  1622  043F  00D2               	movwf	(??_main+4)^(0+128)
  1623  0440  01D3               	clrf	((??_main+4)^(0+128)+1)
  1624  0441  0852               	movf	(??_main+4)^(0+128),w
  1625  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0444  00CA               	movwf	?_printf+6
  1628  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1630  0447  0853               	movf	(??_main+5)^(0+128),w
  1631  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1633  044A  00CB               	movwf	?_printf+7
  1634  044B  1683               	bsf	3,5	;RP0=1, select bank1
  1635  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1636  044D  0824               	movf	_dia^(0+128),w
  1637  044E  00D4               	movwf	(??_main+6)^(0+128)
  1638  044F  01D5               	clrf	((??_main+6)^(0+128)+1)
  1639  0450  0854               	movf	(??_main+6)^(0+128),w
  1640  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0453  00CC               	movwf	?_printf+8
  1643  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1645  0456  0855               	movf	(??_main+7)^(0+128),w
  1646  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0459  00CD               	movwf	?_printf+9
  1649  045A  1683               	bsf	3,5	;RP0=1, select bank1
  1650  045B  1303               	bcf	3,6	;RP1=0, select bank1
  1651  045C  0825               	movf	_hora^(0+128),w
  1652  045D  00D6               	movwf	(??_main+8)^(0+128)
  1653  045E  01D7               	clrf	((??_main+8)^(0+128)+1)
  1654  045F  0856               	movf	(??_main+8)^(0+128),w
  1655  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0462  00CE               	movwf	?_printf+10
  1658  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1660  0465  0857               	movf	(??_main+9)^(0+128),w
  1661  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0468  00CF               	movwf	?_printf+11
  1664  0469  1683               	bsf	3,5	;RP0=1, select bank1
  1665  046A  1303               	bcf	3,6	;RP1=0, select bank1
  1666  046B  0828               	movf	_minuto^(0+128),w
  1667  046C  00D8               	movwf	(??_main+10)^(0+128)
  1668  046D  01D9               	clrf	((??_main+10)^(0+128)+1)
  1669  046E  0858               	movf	(??_main+10)^(0+128),w
  1670  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0471  00D0               	movwf	?_printf+12
  1673  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0474  0859               	movf	(??_main+11)^(0+128),w
  1676  0475  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0476  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0477  00D1               	movwf	?_printf+13
  1679  0478  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0479  1303               	bcf	3,6	;RP1=0, select bank1
  1681  047A  0829               	movf	_segundo^(0+128),w
  1682  047B  00DA               	movwf	(??_main+12)^(0+128)
  1683  047C  01DB               	clrf	((??_main+12)^(0+128)+1)
  1684  047D  085A               	movf	(??_main+12)^(0+128),w
  1685  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1686  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0480  00D2               	movwf	?_printf+14
  1688  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0483  085B               	movf	(??_main+13)^(0+128),w
  1691  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0486  00D3               	movwf	?_printf+15
  1694  0487  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1695  0488  120A  118A  2041  120A  118A  	fcall	_printf
  1696                           
  1697                           ;main.c: 238: _delay((unsigned long)((10)*(20000000/4000.0)));
  1698  048D  3041               	movlw	65
  1699  048E  1683               	bsf	3,5	;RP0=1, select bank1
  1700  048F  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0490  00CF               	movwf	(??_main^(0+128)+1)
  1702  0491  30EE               	movlw	238
  1703  0492  00CE               	movwf	??_main^(0+128)
  1704  0493                     u2647:	
  1705  0493  0BCE               	decfsz	??_main^(0+128),f
  1706  0494  2C93               	goto	u2647
  1707  0495  0BCF               	decfsz	(??_main^(0+128)+1),f
  1708  0496  2C93               	goto	u2647
  1709  0497  0000               	nop
  1710                           
  1711                           ;main.c: 240: printf("\n");
  1712  0498  304D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1713  0499  120A  118A  2041  120A  118A  	fcall	_printf
  1714                           
  1715                           ;main.c: 241: bottonToSend = 0;
  1716  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1717  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1718  04A0  1057               	bcf	_bottonToSend/(0+8),_bottonToSend& (0+7)
  1719  04A1  2B84               	goto	l2315
  1720  04A2                     __end_of_main:	
  1721                           
  1722                           	psect	text1
  1723  0728                     __ptext1:	
  1724 ;; *************** function _write_RTC_I2c *****************
  1725 ;; Defined at:
  1726 ;;		line 96 in file "main.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;		None               void
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    4
  1747 ;; This function calls:
  1748 ;;		_I2C_Idle
  1749 ;;		_I2C_Start
  1750 ;;		_I2C_Stop
  1751 ;;		_I2C_Write_Byte
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _write_RTC_I2c
  1759  0728                     _write_RTC_I2c:	
  1760                           
  1761                           ;main.c: 98: I2C_Idle();
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in _write_RTC_I2c: [wreg+status,2+status,0+pclath+cstack]
  1765  0728  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1766                           
  1767                           ;main.c: 99: I2C_Start();
  1768  072D  120A  158A  2581  120A  118A  	fcall	_I2C_Start
  1769                           
  1770                           ;main.c: 100: I2C_Idle();
  1771  0732  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1772                           
  1773                           ;main.c: 101: I2C_Write_Byte(0xD0);
  1774  0737  30D0               	movlw	208
  1775  0738  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1776                           
  1777                           ;main.c: 102: I2C_Idle();
  1778  073D  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1779                           
  1780                           ;main.c: 103: I2C_Write_Byte(0x00);
  1781  0742  3000               	movlw	0
  1782  0743  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1783                           
  1784                           ;main.c: 104: I2C_Idle();
  1785  0748  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1786                           
  1787                           ;main.c: 107: I2C_Write_Byte(0x00);
  1788  074D  3000               	movlw	0
  1789  074E  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1790                           
  1791                           ;main.c: 108: I2C_Idle();
  1792  0753  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1793                           
  1794                           ;main.c: 110: I2C_Write_Byte(0x30);
  1795  0758  3030               	movlw	48
  1796  0759  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1797                           
  1798                           ;main.c: 111: I2C_Idle();
  1799  075E  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1800                           
  1801                           ;main.c: 113: I2C_Write_Byte(0x14);
  1802  0763  3014               	movlw	20
  1803  0764  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1804                           
  1805                           ;main.c: 114: I2C_Idle();
  1806  0769  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1807                           
  1808                           ;main.c: 116: I2C_Write_Byte(0x04);
  1809  076E  3004               	movlw	4
  1810  076F  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1811                           
  1812                           ;main.c: 117: I2C_Idle();
  1813  0774  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1814                           
  1815                           ;main.c: 119: I2C_Write_Byte(0x22);
  1816  0779  3022               	movlw	34
  1817  077A  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1818                           
  1819                           ;main.c: 120: I2C_Idle();
  1820  077F  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1821                           
  1822                           ;main.c: 122: I2C_Write_Byte(0x01);
  1823  0784  3001               	movlw	1
  1824  0785  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1825                           
  1826                           ;main.c: 123: I2C_Idle();
  1827  078A  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1828                           
  1829                           ;main.c: 125: I2C_Write_Byte(0x16);
  1830  078F  3016               	movlw	22
  1831  0790  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  1832                           
  1833                           ;main.c: 126: I2C_Idle();
  1834  0795  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  1835                           
  1836                           ;main.c: 127: I2C_Stop();
  1837  079A  120A  158A  2589   	fcall	_I2C_Stop
  1838  079D  0008               	return
  1839  079E                     __end_of_write_RTC_I2c:	
  1840                           
  1841                           	psect	text2
  1842  0F74                     __ptext2:	
  1843 ;; *************** function _selectChanel *****************
  1844 ;; Defined at:
  1845 ;;		line 53 in file "ad.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  channel         1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  channel         1   22[BANK0 ] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;		None               void
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         0       1       0       0       0
  1861 ;;      Temps:          0       0       0       0       0
  1862 ;;      Totals:         0       1       0       0       0
  1863 ;;Total ram usage:        1 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    3
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _selectChanel
  1875  0F74                     _selectChanel:	
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _selectChanel: [wreg+status,2+status,0]
  1879                           ;selectChanel@channel stored from wreg
  1880  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0F76  00B6               	movwf	selectChanel@channel
  1883                           
  1884                           ;ad.c: 54: if(channel == 0){
  1885  0F77  0836               	movf	selectChanel@channel,w
  1886  0F78  1D03               	btfss	3,2
  1887  0F79  2F7E               	goto	l1823
  1888                           
  1889                           ;ad.c: 55: ADCON0bits.CHS2 = 0;
  1890  0F7A  129F               	bcf	31,5	;volatile
  1891                           
  1892                           ;ad.c: 56: ADCON0bits.CHS1 = 0;
  1893  0F7B  121F               	bcf	31,4	;volatile
  1894                           
  1895                           ;ad.c: 57: ADCON0bits.CHS0 = 0;
  1896  0F7C  119F               	bcf	31,3	;volatile
  1897                           
  1898                           ;ad.c: 58: }
  1899  0F7D  0008               	return
  1900  0F7E                     l1823:	
  1901                           
  1902                           ;ad.c: 59: else if(channel == 1){
  1903  0F7E  0336               	decf	selectChanel@channel,w
  1904  0F7F  1D03               	btfss	3,2
  1905  0F80  2F85               	goto	l1827
  1906                           
  1907                           ;ad.c: 60: ADCON0bits.CHS2 = 0;
  1908  0F81  129F               	bcf	31,5	;volatile
  1909                           
  1910                           ;ad.c: 61: ADCON0bits.CHS1 = 0;
  1911  0F82  121F               	bcf	31,4	;volatile
  1912                           
  1913                           ;ad.c: 62: ADCON0bits.CHS0 = 1;
  1914  0F83  159F               	bsf	31,3	;volatile
  1915                           
  1916                           ;ad.c: 63: }
  1917  0F84  0008               	return
  1918  0F85                     l1827:	
  1919                           
  1920                           ;ad.c: 64: else if(channel == 2){
  1921  0F85  3002               	movlw	2
  1922  0F86  0636               	xorwf	selectChanel@channel,w
  1923  0F87  1D03               	btfss	3,2
  1924  0F88  2F8D               	goto	l1831
  1925                           
  1926                           ;ad.c: 65: ADCON0bits.CHS2 = 0;
  1927  0F89  129F               	bcf	31,5	;volatile
  1928                           
  1929                           ;ad.c: 66: ADCON0bits.CHS1 = 1;
  1930  0F8A  161F               	bsf	31,4	;volatile
  1931                           
  1932                           ;ad.c: 67: ADCON0bits.CHS0 = 0;
  1933  0F8B  119F               	bcf	31,3	;volatile
  1934                           
  1935                           ;ad.c: 68: }
  1936  0F8C  0008               	return
  1937  0F8D                     l1831:	
  1938                           
  1939                           ;ad.c: 69: else if(channel == 3){
  1940  0F8D  3003               	movlw	3
  1941  0F8E  0636               	xorwf	selectChanel@channel,w
  1942  0F8F  1D03               	btfss	3,2
  1943  0F90  2F95               	goto	l1835
  1944                           
  1945                           ;ad.c: 70: ADCON0bits.CHS2 = 0;
  1946  0F91  129F               	bcf	31,5	;volatile
  1947                           
  1948                           ;ad.c: 71: ADCON0bits.CHS1 = 1;
  1949  0F92  161F               	bsf	31,4	;volatile
  1950                           
  1951                           ;ad.c: 72: ADCON0bits.CHS0 = 1;
  1952  0F93  159F               	bsf	31,3	;volatile
  1953                           
  1954                           ;ad.c: 73: }
  1955  0F94  0008               	return
  1956  0F95                     l1835:	
  1957                           
  1958                           ;ad.c: 74: else if(channel == 4){
  1959  0F95  3004               	movlw	4
  1960  0F96  0636               	xorwf	selectChanel@channel,w
  1961  0F97  1D03               	btfss	3,2
  1962  0F98  2F9D               	goto	l1839
  1963                           
  1964                           ;ad.c: 75: ADCON0bits.CHS2 = 1;
  1965  0F99  169F               	bsf	31,5	;volatile
  1966                           
  1967                           ;ad.c: 76: ADCON0bits.CHS1 = 0;
  1968  0F9A  121F               	bcf	31,4	;volatile
  1969                           
  1970                           ;ad.c: 77: ADCON0bits.CHS0 = 0;
  1971  0F9B  119F               	bcf	31,3	;volatile
  1972                           
  1973                           ;ad.c: 78: }
  1974  0F9C  0008               	return
  1975  0F9D                     l1839:	
  1976                           
  1977                           ;ad.c: 79: else if(channel == 5){
  1978  0F9D  3005               	movlw	5
  1979  0F9E  0636               	xorwf	selectChanel@channel,w
  1980  0F9F  1D03               	btfss	3,2
  1981  0FA0  2FA5               	goto	l1843
  1982                           
  1983                           ;ad.c: 80: ADCON0bits.CHS2 = 1;
  1984  0FA1  169F               	bsf	31,5	;volatile
  1985                           
  1986                           ;ad.c: 81: ADCON0bits.CHS1 = 0;
  1987  0FA2  121F               	bcf	31,4	;volatile
  1988                           
  1989                           ;ad.c: 82: ADCON0bits.CHS0 = 1;
  1990  0FA3  159F               	bsf	31,3	;volatile
  1991                           
  1992                           ;ad.c: 83: }
  1993  0FA4  0008               	return
  1994  0FA5                     l1843:	
  1995                           
  1996                           ;ad.c: 84: else if(channel == 6){
  1997  0FA5  3006               	movlw	6
  1998  0FA6  0636               	xorwf	selectChanel@channel,w
  1999  0FA7  1D03               	btfss	3,2
  2000  0FA8  2FAD               	goto	l1847
  2001                           
  2002                           ;ad.c: 85: ADCON0bits.CHS2 = 1;
  2003  0FA9  169F               	bsf	31,5	;volatile
  2004                           
  2005                           ;ad.c: 86: ADCON0bits.CHS1 = 1;
  2006  0FAA  161F               	bsf	31,4	;volatile
  2007                           
  2008                           ;ad.c: 87: ADCON0bits.CHS0 = 0;
  2009  0FAB  119F               	bcf	31,3	;volatile
  2010                           
  2011                           ;ad.c: 88: }
  2012  0FAC  0008               	return
  2013  0FAD                     l1847:	
  2014                           
  2015                           ;ad.c: 89: else if(channel == 7){
  2016  0FAD  3007               	movlw	7
  2017  0FAE  0636               	xorwf	selectChanel@channel,w
  2018  0FAF  1D03               	btfss	3,2
  2019  0FB0  0008               	return
  2020                           
  2021                           ;ad.c: 90: ADCON0bits.CHS2 = 1;
  2022  0FB1  169F               	bsf	31,5	;volatile
  2023                           
  2024                           ;ad.c: 91: ADCON0bits.CHS1 = 1;
  2025  0FB2  161F               	bsf	31,4	;volatile
  2026                           
  2027                           ;ad.c: 92: ADCON0bits.CHS0 = 1;
  2028  0FB3  159F               	bsf	31,3	;volatile
  2029  0FB4  0008               	return
  2030  0FB5                     __end_of_selectChanel:	
  2031                           
  2032                           	psect	text3
  2033  079E                     __ptext3:	
  2034 ;; *************** function _read_RTC_I2c *****************
  2035 ;; Defined at:
  2036 ;;		line 130 in file "main.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  pos_memoria     1    wreg     unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  pos_memoria     1   24[BANK0 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       0       0       0       0
  2051 ;;      Locals:         0       1       0       0       0
  2052 ;;      Temps:          0       1       0       0       0
  2053 ;;      Totals:         0       2       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    4
  2057 ;; This function calls:
  2058 ;;		_I2C_Idle
  2059 ;;		_I2C_ReStart
  2060 ;;		_I2C_Read_Byte
  2061 ;;		_I2C_Send_NACK
  2062 ;;		_I2C_Start
  2063 ;;		_I2C_Stop
  2064 ;;		_I2C_Write_Byte
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _read_RTC_I2c
  2072  079E                     _read_RTC_I2c:	
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _read_RTC_I2c: [wreg+status,2+status,0+pclath+cstack]
  2076                           ;read_RTC_I2c@pos_memoria stored from wreg
  2077  079E  1283               	bcf	3,5	;RP0=0, select bank0
  2078  079F  1303               	bcf	3,6	;RP1=0, select bank0
  2079  07A0  00B8               	movwf	read_RTC_I2c@pos_memoria
  2080                           
  2081                           ;main.c: 132: I2C_Idle();
  2082  07A1  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2083                           
  2084                           ;main.c: 133: I2C_Start();
  2085  07A6  120A  158A  2581  120A  118A  	fcall	_I2C_Start
  2086                           
  2087                           ;main.c: 134: I2C_Idle();
  2088  07AB  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2089                           
  2090                           ;main.c: 135: I2C_Write_Byte(0xD0);
  2091  07B0  30D0               	movlw	208
  2092  07B1  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  2093                           
  2094                           ;main.c: 136: I2C_Idle();
  2095  07B6  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2096                           
  2097                           ;main.c: 137: I2C_Write_Byte(pos_memoria);
  2098  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2099  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2100  07BD  0838               	movf	read_RTC_I2c@pos_memoria,w
  2101  07BE  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  2102                           
  2103                           ;main.c: 138: I2C_Idle();
  2104  07C3  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2105                           
  2106                           ;main.c: 139: I2C_ReStart();
  2107  07C8  120A  158A  2579  120A  118A  	fcall	_I2C_ReStart
  2108                           
  2109                           ;main.c: 140: I2C_Idle();
  2110  07CD  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2111                           
  2112                           ;main.c: 141: I2C_Write_Byte(0xD1);
  2113  07D2  30D1               	movlw	209
  2114  07D3  120A  158A  25B4  120A  118A  	fcall	_I2C_Write_Byte
  2115                           
  2116                           ;main.c: 142: I2C_Idle();
  2117  07D8  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2118                           
  2119                           ;main.c: 143: leitura = I2C_Read_Byte();
  2120  07DD  120A  158A  25AB  120A  118A  	fcall	_I2C_Read_Byte
  2121  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  2122  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  2123  07E4  00B7               	movwf	??_read_RTC_I2c
  2124  07E5  0837               	movf	??_read_RTC_I2c,w
  2125  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  2126  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  2127  07E8  00A6               	movwf	_leitura^(0+128)
  2128                           
  2129                           ;main.c: 144: I2C_Idle();
  2130  07E9  120A  158A  25A2  120A  118A  	fcall	_I2C_Idle
  2131                           
  2132                           ;main.c: 145: I2C_Send_NACK();
  2133  07EE  120A  118A  27F7  120A  118A  	fcall	_I2C_Send_NACK
  2134                           
  2135                           ;main.c: 146: I2C_Stop();
  2136  07F3  120A  158A  2589   	fcall	_I2C_Stop
  2137  07F6  0008               	return
  2138  07F7                     __end_of_read_RTC_I2c:	
  2139                           
  2140                           	psect	text4
  2141  0DB4                     __ptext4:	
  2142 ;; *************** function _I2C_Write_Byte *****************
  2143 ;; Defined at:
  2144 ;;		line 108 in file "i2c.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  Byte            1    wreg     unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  Byte            1   22[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;		None               void
  2151 ;; Registers used:
  2152 ;;		wreg
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       0       0       0       0
  2159 ;;      Locals:         0       1       0       0       0
  2160 ;;      Temps:          0       0       0       0       0
  2161 ;;      Totals:         0       1       0       0       0
  2162 ;;Total ram usage:        1 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    3
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_write_RTC_I2c
  2169 ;;		_read_RTC_I2c
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _I2C_Write_Byte
  2175  0DB4                     _I2C_Write_Byte:	
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in _I2C_Write_Byte: [wreg]
  2179                           ;I2C_Write_Byte@Byte stored from wreg
  2180  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0DB6  00B6               	movwf	I2C_Write_Byte@Byte
  2183                           
  2184                           ;i2c.c: 110: SSPBUF = Byte;
  2185  0DB7  0836               	movf	I2C_Write_Byte@Byte,w
  2186  0DB8  0093               	movwf	19	;volatile
  2187  0DB9                     l115:	
  2188                           ;i2c.c: 111: while (!SSPIF);
  2189                           
  2190  0DB9  1D8C               	btfss	12,3	;volatile
  2191  0DBA  2DB9               	goto	l115
  2192                           
  2193                           ;i2c.c: 112: SSPIF = 0;
  2194  0DBB  118C               	bcf	12,3	;volatile
  2195                           
  2196                           ;i2c.c: 113: return SSPCON2bits.ACKSTAT;
  2197                           ;	Return value of _I2C_Write_Byte is never used
  2198  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0DBE  0811               	movf	17,w	;volatile
  2201  0DBF  0008               	return
  2202  0DC0                     __end_of_I2C_Write_Byte:	
  2203                           
  2204                           	psect	text5
  2205  0D89                     __ptext5:	
  2206 ;; *************** function _I2C_Stop *****************
  2207 ;; Defined at:
  2208 ;;		line 88 in file "i2c.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;		None               void
  2215 ;; Registers used:
  2216 ;;		None
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    3
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_write_RTC_I2c
  2233 ;;		_read_RTC_I2c
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _I2C_Stop
  2239  0D89                     _I2C_Stop:	
  2240                           
  2241                           ;i2c.c: 89: SSPCON2bits.PEN = 1;
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _I2C_Stop: []
  2245  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0D8A  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0D8B  1511               	bsf	17,2	;volatile
  2248  0D8C                     l97:	
  2249                           ;i2c.c: 90: while (!SSPIF);
  2250                           
  2251  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0D8D  1D8C               	btfss	12,3	;volatile
  2253  0D8E  2D8C               	goto	l97
  2254                           
  2255                           ;i2c.c: 91: SSPIF = 0;
  2256  0D8F  118C               	bcf	12,3	;volatile
  2257  0D90  0008               	return
  2258  0D91                     __end_of_I2C_Stop:	
  2259                           
  2260                           	psect	text6
  2261  0D81                     __ptext6:	
  2262 ;; *************** function _I2C_Start *****************
  2263 ;; Defined at:
  2264 ;;		line 74 in file "i2c.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;		None               void
  2271 ;; Registers used:
  2272 ;;		None
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    3
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_write_RTC_I2c
  2289 ;;		_read_RTC_I2c
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _I2C_Start
  2295  0D81                     _I2C_Start:	
  2296                           
  2297                           ;i2c.c: 76: SSPCON2bits.SEN = 1;
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _I2C_Start: []
  2301  0D81  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0D82  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0D83  1411               	bsf	17,0	;volatile
  2304  0D84                     l85:	
  2305                           ;i2c.c: 77: while (!SSPIF);
  2306                           
  2307  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0D85  1D8C               	btfss	12,3	;volatile
  2309  0D86  2D84               	goto	l85
  2310                           
  2311                           ;i2c.c: 78: SSPIF = 0;
  2312  0D87  118C               	bcf	12,3	;volatile
  2313  0D88  0008               	return
  2314  0D89                     __end_of_I2C_Start:	
  2315                           
  2316                           	psect	text7
  2317  07F7                     __ptext7:	
  2318 ;; *************** function _I2C_Send_NACK *****************
  2319 ;; Defined at:
  2320 ;;		line 101 in file "i2c.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		None
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0
  2337 ;;      Totals:         0       0       0       0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    3
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_read_RTC_I2c
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _I2C_Send_NACK
  2350  07F7                     _I2C_Send_NACK:	
  2351                           
  2352                           ;i2c.c: 102: SSPCON2bits.ACKDT = 1;
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _I2C_Send_NACK: []
  2356  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  2357  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  2358  07F9  1691               	bsf	17,5	;volatile
  2359                           
  2360                           ;i2c.c: 103: SSPCON2bits.ACKEN = 1;
  2361  07FA  1611               	bsf	17,4	;volatile
  2362  07FB                     l109:	
  2363                           ;i2c.c: 104: while (!SSPIF);
  2364                           
  2365  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2366  07FC  1D8C               	btfss	12,3	;volatile
  2367  07FD  2FFB               	goto	l109
  2368                           
  2369                           ;i2c.c: 105: SSPIF = 0;
  2370  07FE  118C               	bcf	12,3	;volatile
  2371  07FF  0008               	return
  2372  0800                     __end_of_I2C_Send_NACK:	
  2373                           
  2374                           	psect	text8
  2375  0DAB                     __ptext8:	
  2376 ;; *************** function _I2C_Read_Byte *****************
  2377 ;; Defined at:
  2378 ;;		line 116 in file "i2c.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      unsigned char 
  2385 ;; Registers used:
  2386 ;;		wreg
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    3
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_read_RTC_I2c
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _I2C_Read_Byte
  2408  0DAB                     _I2C_Read_Byte:	
  2409                           
  2410                           ;i2c.c: 118: SSPCON2bits.RCEN = 1;
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _I2C_Read_Byte: [wreg]
  2414  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0DAD  1591               	bsf	17,3	;volatile
  2417  0DAE                     l121:	
  2418                           ;i2c.c: 119: while (!SSPIF);
  2419                           
  2420  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0DAF  1D8C               	btfss	12,3	;volatile
  2422  0DB0  2DAE               	goto	l121
  2423                           
  2424                           ;i2c.c: 120: SSPIF = 0;
  2425  0DB1  118C               	bcf	12,3	;volatile
  2426                           
  2427                           ;i2c.c: 122: return SSPBUF;
  2428  0DB2  0813               	movf	19,w	;volatile
  2429  0DB3  0008               	return
  2430  0DB4                     __end_of_I2C_Read_Byte:	
  2431                           
  2432                           	psect	text9
  2433  0D79                     __ptext9:	
  2434 ;; *************** function _I2C_ReStart *****************
  2435 ;; Defined at:
  2436 ;;		line 81 in file "i2c.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;		None               void
  2443 ;; Registers used:
  2444 ;;		None
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    3
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_read_RTC_I2c
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _I2C_ReStart
  2466  0D79                     _I2C_ReStart:	
  2467                           
  2468                           ;i2c.c: 83: SSPCON2bits.RSEN = 1;
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _I2C_ReStart: []
  2472  0D79  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0D7A  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0D7B  1491               	bsf	17,1	;volatile
  2475  0D7C                     l91:	
  2476                           ;i2c.c: 84: while (!SSPIF);
  2477                           
  2478  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0D7D  1D8C               	btfss	12,3	;volatile
  2480  0D7E  2D7C               	goto	l91
  2481                           
  2482                           ;i2c.c: 85: SSPIF = 0;
  2483  0D7F  118C               	bcf	12,3	;volatile
  2484  0D80  0008               	return
  2485  0D81                     __end_of_I2C_ReStart:	
  2486                           
  2487                           	psect	text10
  2488  0DA2                     __ptext10:	
  2489 ;; *************** function _I2C_Idle *****************
  2490 ;; Defined at:
  2491 ;;		line 125 in file "i2c.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, status,2
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    3
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_write_RTC_I2c
  2516 ;;		_read_RTC_I2c
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _I2C_Idle
  2522  0DA2                     _I2C_Idle:	
  2523  0DA2                     l1655:	
  2524                           ;i2c.c: 128: continue;
  2525                           
  2526                           ;i2c.c: 127: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _I2C_Idle: [wreg+status,2]
  2530                           
  2531  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  2533  0DA4  0811               	movf	17,w	;volatile
  2534  0DA5  391F               	andlw	31
  2535  0DA6  1D03               	btfss	3,2
  2536  0DA7  2DA2               	goto	l1655
  2537  0DA8  1D14               	btfss	20,2	;volatile
  2538  0DA9  0008               	return
  2539  0DAA  2DA2               	goto	l1655
  2540  0DAB                     __end_of_I2C_Idle:	
  2541                           
  2542                           	psect	text11
  2543  0041                     __ptext11:	
  2544 ;; *************** function _printf *****************
  2545 ;; Defined at:
  2546 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  f               1    wreg     PTR const unsigned char 
  2549 ;;		 -> STR_3(2), STR_2(38), STR_1(3), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  2552 ;;		 -> STR_3(2), STR_2(38), STR_1(3), 
  2553 ;;  idx             1    0[BANK1 ] unsigned char 
  2554 ;;  tmpval          4    0        struct .
  2555 ;;  width           2    6[BANK1 ] int 
  2556 ;;  val             2    3[BANK1 ] unsigned int 
  2557 ;;  cp              2    0        PTR const unsigned char 
  2558 ;;  len             2    0        unsigned int 
  2559 ;;  c               1    9[BANK1 ] char 
  2560 ;;  flag            1    5[BANK1 ] unsigned char 
  2561 ;;  prec            1    2[BANK1 ] char 
  2562 ;;  ap              1    1[BANK1 ] PTR void [1]
  2563 ;;		 -> ?i1_printf(2), ?_printf(2), 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2   36[BANK0 ] int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0      16       0       0       0
  2574 ;;      Locals:         0       0      10       0       0
  2575 ;;      Temps:          0       3       0       0       0
  2576 ;;      Totals:         0      19      10       0       0
  2577 ;;Total ram usage:       29 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    4
  2580 ;; This function calls:
  2581 ;;		___lwdiv
  2582 ;;		___lwmod
  2583 ;;		___wmul
  2584 ;;		_isdigit
  2585 ;;		_putch
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _printf
  2593  0041                     _printf:	
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2597                           ;printf@f stored from wreg
  2598  0041  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0042  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0043  00CC               	movwf	printf@f^(0+128)
  2601                           
  2602                           ;doprnt.c: 466: va_list ap;
  2603                           ;doprnt.c: 499: signed char c;
  2604                           ;doprnt.c: 501: int width;
  2605                           ;doprnt.c: 506: signed char prec;
  2606                           ;doprnt.c: 508: unsigned char flag;
  2607                           ;doprnt.c: 523: union {
  2608                           ;doprnt.c: 524: unsigned long vd;
  2609                           ;doprnt.c: 525: double integ;
  2610                           ;doprnt.c: 526: } tmpval;
  2611                           ;doprnt.c: 528: unsigned int val;
  2612                           ;doprnt.c: 529: unsigned len;
  2613                           ;doprnt.c: 530: const char * cp;
  2614                           ;doprnt.c: 533: *ap = __va_start();
  2615  0044  3044               	movlw	(low (?_printf| 0))& (0+255)
  2616  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0047  00D4               	movwf	??_printf
  2619  0048  0854               	movf	??_printf,w
  2620  0049  1683               	bsf	3,5	;RP0=1, select bank1
  2621  004A  1303               	bcf	3,6	;RP1=0, select bank1
  2622  004B  00C5               	movwf	printf@ap^(0+128)
  2623  004C                     l1991:	
  2624                           ;doprnt.c: 536: while(c = *f++) {
  2625                           
  2626  004C  3001               	movlw	1
  2627  004D  1683               	bsf	3,5	;RP0=1, select bank1
  2628  004E  1303               	bcf	3,6	;RP1=0, select bank1
  2629  004F  07CC               	addwf	printf@f^(0+128),f
  2630  0050  30FF               	movlw	-1
  2631  0051  074C               	addwf	printf@f^(0+128),w
  2632  0052  0084               	movwf	4
  2633  0053  120A  158A  2000  120A  118A  	fcall	stringdir
  2634  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2636  005A  00D4               	movwf	??_printf
  2637  005B  0854               	movf	??_printf,w
  2638  005C  1683               	bsf	3,5	;RP0=1, select bank1
  2639  005D  1303               	bcf	3,6	;RP1=0, select bank1
  2640  005E  00CD               	movwf	printf@c^(0+128)
  2641  005F  084D               	movf	printf@c^(0+128),w
  2642  0060  1903               	btfsc	3,2
  2643  0061  0008               	return
  2644                           
  2645                           ;doprnt.c: 538: if(c != '%')
  2646  0062  3025               	movlw	37
  2647  0063  064D               	xorwf	printf@c^(0+128),w
  2648  0064  1903               	btfsc	3,2
  2649  0065  286D               	goto	l1901
  2650                           
  2651                           ;doprnt.c: 540: {
  2652                           ;doprnt.c: 541: (putch(c) );
  2653  0066  084D               	movf	printf@c^(0+128),w
  2654  0067  120A  158A  2571  120A  118A  	fcall	_putch
  2655                           
  2656                           ;doprnt.c: 542: continue;
  2657  006C  284C               	goto	l1991
  2658  006D                     l1901:	
  2659                           
  2660                           ;doprnt.c: 543: }
  2661                           ;doprnt.c: 546: width = 0;
  2662  006D  1683               	bsf	3,5	;RP0=1, select bank1
  2663  006E  1303               	bcf	3,6	;RP1=0, select bank1
  2664  006F  01CA               	clrf	printf@width^(0+128)
  2665  0070  01CB               	clrf	(printf@width+1)^(0+128)
  2666                           
  2667                           ;doprnt.c: 548: flag = 0;
  2668  0071  01C9               	clrf	printf@flag^(0+128)
  2669                           
  2670                           ;doprnt.c: 551: switch(*f) {
  2671                           
  2672                           ;doprnt.c: 550: for(;;) {
  2673  0072  287C               	goto	l1907
  2674  0073                     l349:	
  2675                           ;doprnt.c: 579: case '0':
  2676                           
  2677                           
  2678                           ;doprnt.c: 580: flag |= 0x04;
  2679  0073  1549               	bsf	printf@flag^(0+128),2
  2680                           
  2681                           ;doprnt.c: 581: f++;
  2682  0074  3001               	movlw	1
  2683  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2684  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0077  00D4               	movwf	??_printf
  2686  0078  0854               	movf	??_printf,w
  2687  0079  1683               	bsf	3,5	;RP0=1, select bank1
  2688  007A  1303               	bcf	3,6	;RP1=0, select bank1
  2689  007B  07CC               	addwf	printf@f^(0+128),f
  2690  007C                     l1907:	
  2691                           ;doprnt.c: 584: }
  2692                           
  2693                           ;doprnt.c: 582: continue;
  2694                           
  2695  007C  084C               	movf	printf@f^(0+128),w
  2696  007D  0084               	movwf	4
  2697  007E  120A  158A  2000  120A  118A  	fcall	stringdir
  2698                           
  2699                           ; Switch size 1, requested type "space"
  2700                           ; Number of cases is 1, Range of values is 48 to 48
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte            4     3 (average)
  2704                           ; direct_byte           14    11 (fixed)
  2705                           ; jumptable            263     9 (fixed)
  2706                           ;	Chosen strategy is simple_byte
  2707  0083  3A30               	xorlw	48	; case 48
  2708  0084  1903               	skipnz
  2709  0085  2873               	goto	l349
  2710  0086  2887               	goto	l1909
  2711  0087                     l1909:	
  2712                           ;doprnt.c: 586: }
  2713                           
  2714                           ;doprnt.c: 585: break;
  2715                           
  2716                           
  2717                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2718  0087  084C               	movf	printf@f^(0+128),w
  2719  0088  0084               	movwf	4
  2720  0089  120A  158A  2000  120A  118A  	fcall	stringdir
  2721  008E  120A  158A  25FA  120A  118A  	fcall	_isdigit
  2722  0093  1C03               	btfss	3,0
  2723  0094  28FB               	goto	l1925
  2724                           
  2725                           ;doprnt.c: 598: width = 0;
  2726  0095  1683               	bsf	3,5	;RP0=1, select bank1
  2727  0096  1303               	bcf	3,6	;RP1=0, select bank1
  2728  0097  01CA               	clrf	printf@width^(0+128)
  2729  0098  01CB               	clrf	(printf@width+1)^(0+128)
  2730  0099                     l1913:	
  2731                           ;doprnt.c: 599: do {
  2732                           
  2733                           
  2734                           ;doprnt.c: 600: width *= 10;
  2735  0099  300A               	movlw	10
  2736  009A  1283               	bcf	3,5	;RP0=0, select bank0
  2737  009B  1303               	bcf	3,6	;RP1=0, select bank0
  2738  009C  00B6               	movwf	___wmul@multiplier
  2739  009D  3000               	movlw	0
  2740  009E  00B7               	movwf	___wmul@multiplier+1
  2741  009F  1683               	bsf	3,5	;RP0=1, select bank1
  2742  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  2743  00A1  084B               	movf	(printf@width+1)^(0+128),w
  2744  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2745  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2746  00A4  00B9               	movwf	___wmul@multiplicand+1
  2747  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  2748  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  2749  00A7  084A               	movf	printf@width^(0+128),w
  2750  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  2751  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  2752  00AA  00B8               	movwf	___wmul@multiplicand
  2753  00AB  120A  158A  2671  120A  118A  	fcall	___wmul
  2754  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  2755  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  2756  00B2  0837               	movf	?___wmul+1,w
  2757  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  2758  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  2759  00B5  00CB               	movwf	(printf@width+1)^(0+128)
  2760  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2761  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2762  00B8  0836               	movf	?___wmul,w
  2763  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  2764  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  2765  00BB  00CA               	movwf	printf@width^(0+128)
  2766                           
  2767                           ;doprnt.c: 601: width += *f++ - '0';
  2768  00BC  084C               	movf	printf@f^(0+128),w
  2769  00BD  0084               	movwf	4
  2770  00BE  120A  158A  2000  120A  118A  	fcall	stringdir
  2771  00C3  3ED0               	addlw	208
  2772  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2773  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2774  00C6  00D4               	movwf	??_printf
  2775  00C7  30FF               	movlw	255
  2776  00C8  1803               	skipnc
  2777  00C9  3000               	movlw	0
  2778  00CA  00D5               	movwf	??_printf+1
  2779  00CB  0854               	movf	??_printf,w
  2780  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  2781  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  2782  00CE  07CA               	addwf	printf@width^(0+128),f
  2783  00CF  1803               	skipnc
  2784  00D0  0ACB               	incf	(printf@width+1)^(0+128),f
  2785  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2786  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2787  00D3  0855               	movf	??_printf+1,w
  2788  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  2789  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  2790  00D6  07CB               	addwf	(printf@width+1)^(0+128),f
  2791  00D7  3001               	movlw	1
  2792  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2793  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2794  00DA  00D4               	movwf	??_printf
  2795  00DB  0854               	movf	??_printf,w
  2796  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  2797  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  2798  00DE  07CC               	addwf	printf@f^(0+128),f
  2799                           
  2800                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2801  00DF  084C               	movf	printf@f^(0+128),w
  2802  00E0  0084               	movwf	4
  2803  00E1  120A  158A  2000  120A  118A  	fcall	stringdir
  2804  00E6  120A  158A  25FA  120A  118A  	fcall	_isdigit
  2805  00EB  1C03               	btfss	3,0
  2806  00EC  28FB               	goto	l1925
  2807  00ED  2899               	goto	l1913
  2808  00EE                     l360:	
  2809                           ;doprnt.c: 712: case 'X':
  2810                           
  2811                           ;doprnt.c: 638: goto alldone;
  2812                           
  2813                           ;doprnt.c: 637: case 0:
  2814                           
  2815                           ;doprnt.c: 608: }
  2816                           ;doprnt.c: 635: switch(c = *f++) {
  2817                           
  2818                           
  2819                           ;doprnt.c: 718: case 'x':
  2820                           ;doprnt.c: 721: flag |= 0x80;
  2821  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2822  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  2823  00F0  17C9               	bsf	printf@flag^(0+128),7
  2824                           
  2825                           ;doprnt.c: 723: break;
  2826  00F1  2915               	goto	l1927
  2827  00F2                     l1921:	
  2828                           ;doprnt.c: 817: case 'u':
  2829                           
  2830                           ;doprnt.c: 813: continue;
  2831                           
  2832                           ;doprnt.c: 802: default:
  2833                           
  2834                           
  2835                           ;doprnt.c: 818: flag |= 0xC0;
  2836  00F2  30C0               	movlw	192
  2837  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2838  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2839  00F5  00D4               	movwf	??_printf
  2840  00F6  0854               	movf	??_printf,w
  2841  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  2842  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  2843  00F9  04C9               	iorwf	printf@flag^(0+128),f
  2844                           
  2845                           ;doprnt.c: 822: }
  2846                           
  2847                           ;doprnt.c: 819: break;
  2848  00FA  2915               	goto	l1927
  2849  00FB                     l1925:	
  2850  00FB  3001               	movlw	1
  2851  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  2852  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  2853  00FE  07CC               	addwf	printf@f^(0+128),f
  2854  00FF  30FF               	movlw	-1
  2855  0100  074C               	addwf	printf@f^(0+128),w
  2856  0101  0084               	movwf	4
  2857  0102  120A  158A  2000  120A  118A  	fcall	stringdir
  2858  0107  00CD               	movwf	printf@c^(0+128)
  2859                           
  2860                           ; Switch size 1, requested type "space"
  2861                           ; Number of cases is 4, Range of values is 0 to 120
  2862                           ; switch strategies available:
  2863                           ; Name         Instructions Cycles
  2864                           ; simple_byte           13     7 (average)
  2865                           ; jumptable            260     6 (fixed)
  2866                           ;	Chosen strategy is simple_byte
  2867  0108  3A00               	xorlw	0	; case 0
  2868  0109  1903               	skipnz
  2869  010A  2A8D               	goto	l392
  2870  010B  3A58               	xorlw	88	; case 88
  2871  010C  1903               	skipnz
  2872  010D  28EE               	goto	l360
  2873  010E  3A2D               	xorlw	45	; case 117
  2874  010F  1903               	skipnz
  2875  0110  28F2               	goto	l1921
  2876  0111  3A0D               	xorlw	13	; case 120
  2877  0112  1903               	skipnz
  2878  0113  28EE               	goto	l360
  2879  0114  284C               	goto	l1991
  2880  0115                     l1927:	
  2881                           
  2882                           ;doprnt.c: 1273: {
  2883                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2884  0115  0845               	movf	printf@ap^(0+128),w
  2885  0116  0084               	movwf	4
  2886  0117  1383               	bcf	3,7	;select IRP bank0
  2887  0118  0800               	movf	0,w
  2888  0119  00C7               	movwf	printf@val^(0+128)
  2889  011A  0A84               	incf	4,f
  2890  011B  0800               	movf	0,w
  2891  011C  00C8               	movwf	(printf@val+1)^(0+128)
  2892  011D  3002               	movlw	2
  2893  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2894  011F  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0120  00D4               	movwf	??_printf
  2896  0121  0854               	movf	??_printf,w
  2897  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2898  0123  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0124  07C5               	addwf	printf@ap^(0+128),f
  2900                           
  2901                           ;doprnt.c: 1287: }
  2902                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  2903  0125  2986               	goto	l1953
  2904  0126                     l365:	
  2905                           ;doprnt.c: 1302: case 0xC0:
  2906                           
  2907                           
  2908                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2909  0126  01CD               	clrf	printf@c^(0+128)
  2910  0127  0ACD               	incf	printf@c^(0+128),f
  2911  0128                     L3:	
  2912  0128  3005               	movlw	5
  2913  0129  064D               	xorwf	printf@c^(0+128),w
  2914  012A  1903               	btfsc	3,2
  2915  012B  298F               	goto	l1955
  2916                           
  2917                           ;doprnt.c: 1306: if(val < dpowers[c])
  2918  012C  084D               	movf	printf@c^(0+128),w
  2919  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2920  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2921  012F  00D4               	movwf	??_printf
  2922  0130  0754               	addwf	??_printf,w
  2923  0131  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2924  0132  0084               	movwf	4
  2925  0133  120A  158A  2000  120A  118A  	fcall	stringdir
  2926  0138  00D5               	movwf	??_printf+1
  2927  0139  120A  158A  2000  120A  118A  	fcall	stringdir
  2928  013E  00D6               	movwf	??_printf+2
  2929  013F  0856               	movf	??_printf+2,w
  2930  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0141  1303               	bcf	3,6	;RP1=0, select bank1
  2932  0142  0248               	subwf	(printf@val+1)^(0+128),w
  2933  0143  1D03               	skipz
  2934  0144  294B               	goto	u1905
  2935  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0147  0855               	movf	??_printf+1,w
  2938  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2939  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2940  014A  0247               	subwf	printf@val^(0+128),w
  2941  014B                     u1905:	
  2942  014B  1C03               	btfss	3,0
  2943  014C  298F               	goto	l1955
  2944                           
  2945                           ;doprnt.c: 1307: break;
  2946  014D  3001               	movlw	1
  2947  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2948  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0150  00D4               	movwf	??_printf
  2950  0151  0854               	movf	??_printf,w
  2951  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0153  1303               	bcf	3,6	;RP1=0, select bank1
  2953  0154  07CD               	addwf	printf@c^(0+128),f
  2954  0155  2928               	goto	L3
  2955  0156                     l370:	
  2956                           ;doprnt.c: 1314: case 0x80:
  2957                           
  2958                           ;doprnt.c: 1309: break;
  2959                           
  2960                           
  2961                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2962  0156  01CD               	clrf	printf@c^(0+128)
  2963  0157  0ACD               	incf	printf@c^(0+128),f
  2964  0158                     L4:	
  2965  0158  3004               	movlw	4
  2966  0159  064D               	xorwf	printf@c^(0+128),w
  2967  015A  1903               	btfsc	3,2
  2968  015B  298F               	goto	l1955
  2969                           
  2970                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2971  015C  084D               	movf	printf@c^(0+128),w
  2972  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2973  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2974  015F  00D4               	movwf	??_printf
  2975  0160  0754               	addwf	??_printf,w
  2976  0161  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2977  0162  0084               	movwf	4
  2978  0163  120A  158A  2000  120A  118A  	fcall	stringdir
  2979  0168  00D5               	movwf	??_printf+1
  2980  0169  120A  158A  2000  120A  118A  	fcall	stringdir
  2981  016E  00D6               	movwf	??_printf+2
  2982  016F  0856               	movf	??_printf+2,w
  2983  0170  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0171  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0172  0248               	subwf	(printf@val+1)^(0+128),w
  2986  0173  1D03               	skipz
  2987  0174  297B               	goto	u1935
  2988  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0177  0855               	movf	??_printf+1,w
  2991  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2992  0179  1303               	bcf	3,6	;RP1=0, select bank1
  2993  017A  0247               	subwf	printf@val^(0+128),w
  2994  017B                     u1935:	
  2995  017B  1C03               	btfss	3,0
  2996  017C  298F               	goto	l1955
  2997                           
  2998                           ;doprnt.c: 1318: break;
  2999  017D  3001               	movlw	1
  3000  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3001  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0180  00D4               	movwf	??_printf
  3003  0181  0854               	movf	??_printf,w
  3004  0182  1683               	bsf	3,5	;RP0=1, select bank1
  3005  0183  1303               	bcf	3,6	;RP1=0, select bank1
  3006  0184  07CD               	addwf	printf@c^(0+128),f
  3007  0185  2958               	goto	L4
  3008  0186                     l1953:	
  3009                           ;doprnt.c: 1336: }
  3010                           
  3011                           ;doprnt.c: 1320: break;
  3012                           
  3013  0186  0849               	movf	printf@flag^(0+128),w
  3014  0187  39C0               	andlw	192
  3015                           
  3016                           ; Switch size 1, requested type "space"
  3017                           ; Number of cases is 2, Range of values is 128 to 192
  3018                           ; switch strategies available:
  3019                           ; Name         Instructions Cycles
  3020                           ; simple_byte            7     4 (average)
  3021                           ; direct_byte          206    11 (fixed)
  3022                           ; jumptable            263     9 (fixed)
  3023                           ;	Chosen strategy is simple_byte
  3024  0188  3A80               	xorlw	128	; case 128
  3025  0189  1903               	skipnz
  3026  018A  2956               	goto	l370
  3027  018B  3A40               	xorlw	64	; case 192
  3028  018C  1903               	skipnz
  3029  018D  2926               	goto	l365
  3030  018E  298F               	goto	l1955
  3031  018F                     l1955:	
  3032                           
  3033                           ;doprnt.c: 1381: if(width > c)
  3034  018F  084D               	movf	printf@c^(0+128),w
  3035  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0192  00D4               	movwf	??_printf
  3038  0193  01D5               	clrf	??_printf+1
  3039  0194  1BD4               	btfsc	??_printf,7
  3040  0195  03D5               	decf	??_printf+1,f
  3041  0196  0855               	movf	??_printf+1,w
  3042  0197  3A80               	xorlw	128
  3043  0198  00D6               	movwf	??_printf+2
  3044  0199  1683               	bsf	3,5	;RP0=1, select bank1
  3045  019A  1303               	bcf	3,6	;RP1=0, select bank1
  3046  019B  084B               	movf	(printf@width+1)^(0+128),w
  3047  019C  3A80               	xorlw	128
  3048  019D  1283               	bcf	3,5	;RP0=0, select bank0
  3049  019E  1303               	bcf	3,6	;RP1=0, select bank0
  3050  019F  0256               	subwf	??_printf+2,w
  3051  01A0  1D03               	skipz
  3052  01A1  29A8               	goto	u1955
  3053  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  3054  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  3055  01A4  084A               	movf	printf@width^(0+128),w
  3056  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  3057  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  3058  01A7  0254               	subwf	??_printf,w
  3059  01A8                     u1955:	
  3060  01A8  1803               	skipnc
  3061  01A9  29C0               	goto	l1959
  3062                           
  3063                           ;doprnt.c: 1382: width -= c;
  3064  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  3065  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  3066  01AC  084D               	movf	printf@c^(0+128),w
  3067  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  3068  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  3069  01AF  00D4               	movwf	??_printf
  3070  01B0  01D5               	clrf	??_printf+1
  3071  01B1  1BD4               	btfsc	??_printf,7
  3072  01B2  03D5               	decf	??_printf+1,f
  3073  01B3  0854               	movf	??_printf,w
  3074  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  3075  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  3076  01B6  02CA               	subwf	printf@width^(0+128),f
  3077  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3078  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3079  01B9  0855               	movf	??_printf+1,w
  3080  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  3081  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  3082  01BC  1C03               	skipc
  3083  01BD  03CB               	decf	(printf@width+1)^(0+128),f
  3084  01BE  02CB               	subwf	(printf@width+1)^(0+128),f
  3085  01BF  29C4               	goto	l1961
  3086  01C0                     l1959:	
  3087                           
  3088                           ;doprnt.c: 1383: else
  3089                           ;doprnt.c: 1384: width = 0;
  3090  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  3091  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  3092  01C2  01CA               	clrf	printf@width^(0+128)
  3093  01C3  01CB               	clrf	(printf@width+1)^(0+128)
  3094  01C4                     l1961:	
  3095                           
  3096                           ;doprnt.c: 1387: if(flag & 0x04) {
  3097  01C4  1D49               	btfss	printf@flag^(0+128),2
  3098  01C5  29D9               	goto	l1969
  3099  01C6                     L5:	
  3100                           
  3101                           ;doprnt.c: 1415: if(width)
  3102  01C6  084A               	movf	printf@width^(0+128),w
  3103  01C7  044B               	iorwf	(printf@width+1)^(0+128),w
  3104  01C8  1903               	btfsc	3,2
  3105  01C9  29EF               	goto	l1975
  3106                           
  3107                           ;doprnt.c: 1417: (putch('0') );
  3108                           
  3109                           ;doprnt.c: 1416: do
  3110  01CA  3030               	movlw	48
  3111  01CB  120A  158A  2571  120A  118A  	fcall	_putch
  3112                           
  3113                           ;doprnt.c: 1418: while(--width);
  3114  01D0  30FF               	movlw	255
  3115  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  3116  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  3117  01D3  07CA               	addwf	printf@width^(0+128),f
  3118  01D4  1803               	skipnc
  3119  01D5  0ACB               	incf	(printf@width+1)^(0+128),f
  3120  01D6  30FF               	movlw	255
  3121  01D7  07CB               	addwf	(printf@width+1)^(0+128),f
  3122  01D8  29C6               	goto	L5
  3123  01D9                     l1969:	
  3124                           ;doprnt.c: 1420: } else
  3125                           
  3126                           
  3127                           ;doprnt.c: 1422: {
  3128                           ;doprnt.c: 1424: if(width
  3129                           ;doprnt.c: 1428: )
  3130  01D9  084A               	movf	printf@width^(0+128),w
  3131  01DA  044B               	iorwf	(printf@width+1)^(0+128),w
  3132  01DB  1903               	btfsc	3,2
  3133  01DC  29EF               	goto	l1975
  3134  01DD                     l1971:	
  3135                           ;doprnt.c: 1429: do
  3136                           
  3137                           
  3138                           ;doprnt.c: 1430: (putch(' ') );
  3139  01DD  3020               	movlw	32
  3140  01DE  120A  158A  2571  120A  118A  	fcall	_putch
  3141                           
  3142                           ;doprnt.c: 1431: while(--width);
  3143  01E3  30FF               	movlw	255
  3144  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  3145  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  3146  01E6  07CA               	addwf	printf@width^(0+128),f
  3147  01E7  1803               	skipnc
  3148  01E8  0ACB               	incf	(printf@width+1)^(0+128),f
  3149  01E9  30FF               	movlw	255
  3150  01EA  07CB               	addwf	(printf@width+1)^(0+128),f
  3151  01EB  084A               	movf	printf@width^(0+128),w
  3152  01EC  044B               	iorwf	(printf@width+1)^(0+128),w
  3153  01ED  1D03               	btfss	3,2
  3154  01EE  29DD               	goto	l1971
  3155  01EF                     l1975:	
  3156                           
  3157                           ;doprnt.c: 1469: }
  3158                           ;doprnt.c: 1472: prec = c;
  3159  01EF  084D               	movf	printf@c^(0+128),w
  3160  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3161  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  3162  01F2  00D4               	movwf	??_printf
  3163  01F3  0854               	movf	??_printf,w
  3164  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  3165  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  3166  01F6  00C6               	movwf	printf@prec^(0+128)
  3167                           
  3168                           ;doprnt.c: 1474: while(prec--) {
  3169  01F7  2A78               	goto	l1989
  3170  01F8                     l1977:	
  3171                           ;doprnt.c: 1478: {
  3172                           ;doprnt.c: 1486: case 0xC0:
  3173                           
  3174                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
  3175                           
  3176                           
  3177                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3178  01F8  300A               	movlw	10
  3179  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3180  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3181  01FB  00BE               	movwf	___lwmod@divisor
  3182  01FC  3000               	movlw	0
  3183  01FD  00BF               	movwf	___lwmod@divisor+1
  3184  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  3185  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  3186  0200  0846               	movf	printf@prec^(0+128),w
  3187  0201  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0202  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0203  00D4               	movwf	??_printf
  3190  0204  0754               	addwf	??_printf,w
  3191  0205  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3192  0206  0084               	movwf	4
  3193  0207  120A  158A  2000  120A  118A  	fcall	stringdir
  3194  020C  00B6               	movwf	___lwdiv@divisor
  3195  020D  120A  158A  2000  120A  118A  	fcall	stringdir
  3196  0212  00B7               	movwf	___lwdiv@divisor+1
  3197  0213  1683               	bsf	3,5	;RP0=1, select bank1
  3198  0214  1303               	bcf	3,6	;RP1=0, select bank1
  3199  0215  0848               	movf	(printf@val+1)^(0+128),w
  3200  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0218  00B9               	movwf	___lwdiv@dividend+1
  3203  0219  1683               	bsf	3,5	;RP0=1, select bank1
  3204  021A  1303               	bcf	3,6	;RP1=0, select bank1
  3205  021B  0847               	movf	printf@val^(0+128),w
  3206  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3207  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3208  021E  00B8               	movwf	___lwdiv@dividend
  3209  021F  120A  158A  2736  120A  118A  	fcall	___lwdiv
  3210  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0226  0837               	movf	?___lwdiv+1,w
  3213  0227  00C1               	movwf	___lwmod@dividend+1
  3214  0228  0836               	movf	?___lwdiv,w
  3215  0229  00C0               	movwf	___lwmod@dividend
  3216  022A  120A  158A  26C6  120A  118A  	fcall	___lwmod
  3217  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0231  083E               	movf	?___lwmod,w
  3220  0232  3E30               	addlw	48
  3221  0233  00D5               	movwf	??_printf+1
  3222  0234  0855               	movf	??_printf+1,w
  3223  0235  2A6F               	goto	L2
  3224  0236                     l1979:	
  3225                           ;doprnt.c: 1497: case 0x80:
  3226                           
  3227                           ;doprnt.c: 1491: break;
  3228                           
  3229                           
  3230                           ;doprnt.c: 1499: {
  3231                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3232  0236  0846               	movf	printf@prec^(0+128),w
  3233  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0238  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0239  00D4               	movwf	??_printf
  3236  023A  0754               	addwf	??_printf,w
  3237  023B  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  3238  023C  0084               	movwf	4
  3239  023D  120A  158A  2000  120A  118A  	fcall	stringdir
  3240  0242  00B6               	movwf	___lwdiv@divisor
  3241  0243  120A  158A  2000  120A  118A  	fcall	stringdir
  3242  0248  00B7               	movwf	___lwdiv@divisor+1
  3243  0249  1683               	bsf	3,5	;RP0=1, select bank1
  3244  024A  1303               	bcf	3,6	;RP1=0, select bank1
  3245  024B  0848               	movf	(printf@val+1)^(0+128),w
  3246  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3247  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3248  024E  00B9               	movwf	___lwdiv@dividend+1
  3249  024F  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0250  1303               	bcf	3,6	;RP1=0, select bank1
  3251  0251  0847               	movf	printf@val^(0+128),w
  3252  0252  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0253  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0254  00B8               	movwf	___lwdiv@dividend
  3255  0255  120A  158A  2736  120A  118A  	fcall	___lwdiv
  3256  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3257  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3258  025C  0836               	movf	?___lwdiv,w
  3259  025D  390F               	andlw	15
  3260  025E  00D5               	movwf	??_printf+1
  3261  025F  0855               	movf	??_printf+1,w
  3262  0260  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0261  1303               	bcf	3,6	;RP1=0, select bank1
  3264  0262  00C4               	movwf	printf@idx^(0+128)
  3265                           
  3266                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  3267  0263  0844               	movf	printf@idx^(0+128),w
  3268  0264  3E39               	addlw	low ((STR_4-__stringbase)| (0+32768))
  3269  0265  0084               	movwf	4
  3270  0266  120A  158A  2000  120A  118A  	fcall	stringdir
  3271  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3272  026C  1303               	bcf	3,6	;RP1=0, select bank0
  3273  026D  00D4               	movwf	??_printf
  3274  026E  0854               	movf	??_printf,w
  3275  026F                     L2:	
  3276  026F  1683               	bsf	3,5	;RP0=1, select bank1
  3277  0270  1303               	bcf	3,6	;RP1=0, select bank1
  3278  0271  00CD               	movwf	printf@c^(0+128)
  3279  0272                     l1987:	
  3280                           ;doprnt.c: 1523: }
  3281                           
  3282                           ;doprnt.c: 1508: }
  3283                           ;doprnt.c: 1510: break;
  3284                           
  3285                           
  3286                           ;doprnt.c: 1524: (putch(c) );
  3287  0272  084D               	movf	printf@c^(0+128),w
  3288  0273  120A  158A  2571  120A  118A  	fcall	_putch
  3289  0278                     l1989:	
  3290  0278  30FF               	movlw	255
  3291  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3292  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3293  027B  00D4               	movwf	??_printf
  3294  027C  0854               	movf	??_printf,w
  3295  027D  1683               	bsf	3,5	;RP0=1, select bank1
  3296  027E  1303               	bcf	3,6	;RP1=0, select bank1
  3297  027F  07C6               	addwf	printf@prec^(0+128),f
  3298  0280  0A46               	incf	printf@prec^(0+128),w
  3299  0281  1903               	btfsc	3,2
  3300  0282  284C               	goto	l1991
  3301  0283  0849               	movf	printf@flag^(0+128),w
  3302  0284  39C0               	andlw	192
  3303                           
  3304                           ; Switch size 1, requested type "space"
  3305                           ; Number of cases is 2, Range of values is 128 to 192
  3306                           ; switch strategies available:
  3307                           ; Name         Instructions Cycles
  3308                           ; simple_byte            7     4 (average)
  3309                           ; direct_byte          206    11 (fixed)
  3310                           ; jumptable            263     9 (fixed)
  3311                           ;	Chosen strategy is simple_byte
  3312  0285  3A80               	xorlw	128	; case 128
  3313  0286  1903               	skipnz
  3314  0287  2A36               	goto	l1979
  3315  0288  3A40               	xorlw	64	; case 192
  3316  0289  1903               	skipnz
  3317  028A  29F8               	goto	l1977
  3318  028B  2A72               	goto	l1987
  3319  028C  2A72               	goto	l1987
  3320  028D                     l392:	
  3321                           ;doprnt.c: 1540: return 0;
  3322                           ;	Return value of _printf is never used
  3323                           
  3324                           ;doprnt.c: 1525: }
  3325                           ;doprnt.c: 1533: }
  3326                           ;doprnt.c: 1535: alldone:
  3327                           
  3328  028D  0008               	return
  3329  028E                     __end_of_printf:	
  3330                           
  3331                           	psect	text12
  3332  0D71                     __ptext12:	
  3333 ;; *************** function _putch *****************
  3334 ;; Defined at:
  3335 ;;		line 46 in file "usart.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  byte            1    wreg     unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  byte            1   22[BANK0 ] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		wreg
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         0       1       0       0       0
  3351 ;;      Temps:          0       0       0       0       0
  3352 ;;      Totals:         0       1       0       0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    3
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_printf
  3360 ;;		_getche
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _putch
  3366  0D71                     _putch:	
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _putch: [wreg]
  3370                           ;putch@byte stored from wreg
  3371  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  3373  0D73  00B6               	movwf	putch@byte
  3374  0D74                     l180:	
  3375                           ;usart.c: 49: continue;
  3376                           
  3377                           ;usart.c: 48: while (!TXIF)
  3378                           
  3379  0D74  1E0C               	btfss	12,4	;volatile
  3380  0D75  2D74               	goto	l180
  3381                           
  3382                           ;usart.c: 50: TXREG = byte;
  3383  0D76  0836               	movf	putch@byte,w
  3384  0D77  0099               	movwf	25	;volatile
  3385  0D78  0008               	return
  3386  0D79                     __end_of_putch:	
  3387                           
  3388                           	psect	text13
  3389  0DFA                     __ptext13:	
  3390 ;; *************** function _isdigit *****************
  3391 ;; Defined at:
  3392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  c               1    wreg     unsigned char 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  c               1   23[BANK0 ] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;		None               void
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       0       0       0       0
  3407 ;;      Locals:         0       2       0       0       0
  3408 ;;      Temps:          0       0       0       0       0
  3409 ;;      Totals:         0       2       0       0       0
  3410 ;;Total ram usage:        2 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    3
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_printf
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _isdigit
  3422  0DFA                     _isdigit:	
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3426                           ;isdigit@c stored from wreg
  3427  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0DFC  00B7               	movwf	isdigit@c
  3430  0DFD  01B6               	clrf	_isdigit$900
  3431  0DFE  303A               	movlw	58
  3432  0DFF  0237               	subwf	isdigit@c,w
  3433  0E00  1803               	skipnc
  3434  0E01  2E08               	goto	l1671
  3435  0E02  3030               	movlw	48
  3436  0E03  0237               	subwf	isdigit@c,w
  3437  0E04  1C03               	skipc
  3438  0E05  2E08               	goto	l1671
  3439  0E06  01B6               	clrf	_isdigit$900
  3440  0E07  0AB6               	incf	_isdigit$900,f
  3441  0E08                     l1671:	
  3442  0E08  0C36               	rrf	_isdigit$900,w
  3443  0E09  0008               	return
  3444  0E0A                     __end_of_isdigit:	
  3445                           
  3446                           	psect	text14
  3447  0E71                     __ptext14:	
  3448 ;; *************** function ___wmul *****************
  3449 ;; Defined at:
  3450 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  multiplier      2   22[BANK0 ] unsigned int 
  3453 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  product         2   26[BANK0 ] unsigned int 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2   22[BANK0 ] unsigned int 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         0       4       0       0       0
  3466 ;;      Locals:         0       2       0       0       0
  3467 ;;      Temps:          0       0       0       0       0
  3468 ;;      Totals:         0       6       0       0       0
  3469 ;;Total ram usage:        6 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    3
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_printf
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function ___wmul
  3481  0E71                     ___wmul:	
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3485  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  3486  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0E73  01BA               	clrf	___wmul@product
  3488  0E74  01BB               	clrf	___wmul@product+1
  3489  0E75                     l1677:	
  3490  0E75  1C36               	btfss	___wmul@multiplier,0
  3491  0E76  2E7D               	goto	l476
  3492  0E77  0838               	movf	___wmul@multiplicand,w
  3493  0E78  07BA               	addwf	___wmul@product,f
  3494  0E79  1803               	skipnc
  3495  0E7A  0ABB               	incf	___wmul@product+1,f
  3496  0E7B  0839               	movf	___wmul@multiplicand+1,w
  3497  0E7C  07BB               	addwf	___wmul@product+1,f
  3498  0E7D                     l476:	
  3499  0E7D  3001               	movlw	1
  3500  0E7E                     u1415:	
  3501  0E7E  1003               	clrc
  3502  0E7F  0DB8               	rlf	___wmul@multiplicand,f
  3503  0E80  0DB9               	rlf	___wmul@multiplicand+1,f
  3504  0E81  3EFF               	addlw	-1
  3505  0E82  1D03               	skipz
  3506  0E83  2E7E               	goto	u1415
  3507  0E84  3001               	movlw	1
  3508  0E85                     u1425:	
  3509  0E85  1003               	clrc
  3510  0E86  0CB7               	rrf	___wmul@multiplier+1,f
  3511  0E87  0CB6               	rrf	___wmul@multiplier,f
  3512  0E88  3EFF               	addlw	-1
  3513  0E89  1D03               	skipz
  3514  0E8A  2E85               	goto	u1425
  3515  0E8B  0836               	movf	___wmul@multiplier,w
  3516  0E8C  0437               	iorwf	___wmul@multiplier+1,w
  3517  0E8D  1D03               	btfss	3,2
  3518  0E8E  2E75               	goto	l1677
  3519  0E8F  083B               	movf	___wmul@product+1,w
  3520  0E90  00B7               	movwf	?___wmul+1
  3521  0E91  083A               	movf	___wmul@product,w
  3522  0E92  00B6               	movwf	?___wmul
  3523  0E93  0008               	return
  3524  0E94                     __end_of___wmul:	
  3525                           
  3526                           	psect	text15
  3527  0EC6                     __ptext15:	
  3528 ;; *************** function ___lwmod *****************
  3529 ;; Defined at:
  3530 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  divisor         2   30[BANK0 ] unsigned int 
  3533 ;;  dividend        2   32[BANK0 ] unsigned int 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  counter         1   35[BANK0 ] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2   30[BANK0 ] unsigned int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         0       4       0       0       0
  3546 ;;      Locals:         0       1       0       0       0
  3547 ;;      Temps:          0       1       0       0       0
  3548 ;;      Totals:         0       6       0       0       0
  3549 ;;Total ram usage:        6 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    3
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_printf
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function ___lwmod
  3561  0EC6                     ___lwmod:	
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3565  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0EC8  083E               	movf	___lwmod@divisor,w
  3568  0EC9  043F               	iorwf	___lwmod@divisor+1,w
  3569  0ECA  1903               	btfsc	3,2
  3570  0ECB  2EF5               	goto	l1733
  3571  0ECC  01C3               	clrf	___lwmod@counter
  3572  0ECD  0AC3               	incf	___lwmod@counter,f
  3573  0ECE                     l1723:	
  3574  0ECE  1BBF               	btfsc	___lwmod@divisor+1,7
  3575  0ECF  2EDC               	goto	l1725
  3576  0ED0  3001               	movlw	1
  3577  0ED1                     u1525:	
  3578  0ED1  1003               	clrc
  3579  0ED2  0DBE               	rlf	___lwmod@divisor,f
  3580  0ED3  0DBF               	rlf	___lwmod@divisor+1,f
  3581  0ED4  3EFF               	addlw	-1
  3582  0ED5  1D03               	skipz
  3583  0ED6  2ED1               	goto	u1525
  3584  0ED7  3001               	movlw	1
  3585  0ED8  00C2               	movwf	??___lwmod
  3586  0ED9  0842               	movf	??___lwmod,w
  3587  0EDA  07C3               	addwf	___lwmod@counter,f
  3588  0EDB  2ECE               	goto	l1723
  3589  0EDC                     l1725:	
  3590  0EDC  083F               	movf	___lwmod@divisor+1,w
  3591  0EDD  0241               	subwf	___lwmod@dividend+1,w
  3592  0EDE  1D03               	skipz
  3593  0EDF  2EE2               	goto	u1545
  3594  0EE0  083E               	movf	___lwmod@divisor,w
  3595  0EE1  0240               	subwf	___lwmod@dividend,w
  3596  0EE2                     u1545:	
  3597  0EE2  1C03               	skipc
  3598  0EE3  2EEA               	goto	l1729
  3599  0EE4  083E               	movf	___lwmod@divisor,w
  3600  0EE5  02C0               	subwf	___lwmod@dividend,f
  3601  0EE6  083F               	movf	___lwmod@divisor+1,w
  3602  0EE7  1C03               	skipc
  3603  0EE8  03C1               	decf	___lwmod@dividend+1,f
  3604  0EE9  02C1               	subwf	___lwmod@dividend+1,f
  3605  0EEA                     l1729:	
  3606  0EEA  3001               	movlw	1
  3607  0EEB                     u1555:	
  3608  0EEB  1003               	clrc
  3609  0EEC  0CBF               	rrf	___lwmod@divisor+1,f
  3610  0EED  0CBE               	rrf	___lwmod@divisor,f
  3611  0EEE  3EFF               	addlw	-1
  3612  0EEF  1D03               	skipz
  3613  0EF0  2EEB               	goto	u1555
  3614  0EF1  3001               	movlw	1
  3615  0EF2  02C3               	subwf	___lwmod@counter,f
  3616  0EF3  1D03               	btfss	3,2
  3617  0EF4  2EDC               	goto	l1725
  3618  0EF5                     l1733:	
  3619  0EF5  0841               	movf	___lwmod@dividend+1,w
  3620  0EF6  00BF               	movwf	?___lwmod+1
  3621  0EF7  0840               	movf	___lwmod@dividend,w
  3622  0EF8  00BE               	movwf	?___lwmod
  3623  0EF9  0008               	return
  3624  0EFA                     __end_of___lwmod:	
  3625                           
  3626                           	psect	text16
  3627  0F36                     __ptext16:	
  3628 ;; *************** function ___lwdiv *****************
  3629 ;; Defined at:
  3630 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  divisor         2   22[BANK0 ] unsigned int 
  3633 ;;  dividend        2   24[BANK0 ] unsigned int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  quotient        2   27[BANK0 ] unsigned int 
  3636 ;;  counter         1   29[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2   22[BANK0 ] unsigned int 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       4       0       0       0
  3647 ;;      Locals:         0       3       0       0       0
  3648 ;;      Temps:          0       1       0       0       0
  3649 ;;      Totals:         0       8       0       0       0
  3650 ;;Total ram usage:        8 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    3
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_printf
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function ___lwdiv
  3662  0F36                     ___lwdiv:	
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3666  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0F38  01BB               	clrf	___lwdiv@quotient
  3669  0F39  01BC               	clrf	___lwdiv@quotient+1
  3670  0F3A  0836               	movf	___lwdiv@divisor,w
  3671  0F3B  0437               	iorwf	___lwdiv@divisor+1,w
  3672  0F3C  1903               	btfsc	3,2
  3673  0F3D  2F6F               	goto	l1711
  3674  0F3E  01BD               	clrf	___lwdiv@counter
  3675  0F3F  0ABD               	incf	___lwdiv@counter,f
  3676  0F40                     l1699:	
  3677  0F40  1BB7               	btfsc	___lwdiv@divisor+1,7
  3678  0F41  2F4E               	goto	l1701
  3679  0F42  3001               	movlw	1
  3680  0F43                     u1455:	
  3681  0F43  1003               	clrc
  3682  0F44  0DB6               	rlf	___lwdiv@divisor,f
  3683  0F45  0DB7               	rlf	___lwdiv@divisor+1,f
  3684  0F46  3EFF               	addlw	-1
  3685  0F47  1D03               	skipz
  3686  0F48  2F43               	goto	u1455
  3687  0F49  3001               	movlw	1
  3688  0F4A  00BA               	movwf	??___lwdiv
  3689  0F4B  083A               	movf	??___lwdiv,w
  3690  0F4C  07BD               	addwf	___lwdiv@counter,f
  3691  0F4D  2F40               	goto	l1699
  3692  0F4E                     l1701:	
  3693  0F4E  3001               	movlw	1
  3694  0F4F                     u1475:	
  3695  0F4F  1003               	clrc
  3696  0F50  0DBB               	rlf	___lwdiv@quotient,f
  3697  0F51  0DBC               	rlf	___lwdiv@quotient+1,f
  3698  0F52  3EFF               	addlw	-1
  3699  0F53  1D03               	skipz
  3700  0F54  2F4F               	goto	u1475
  3701  0F55  0837               	movf	___lwdiv@divisor+1,w
  3702  0F56  0239               	subwf	___lwdiv@dividend+1,w
  3703  0F57  1D03               	skipz
  3704  0F58  2F5B               	goto	u1485
  3705  0F59  0836               	movf	___lwdiv@divisor,w
  3706  0F5A  0238               	subwf	___lwdiv@dividend,w
  3707  0F5B                     u1485:	
  3708  0F5B  1C03               	skipc
  3709  0F5C  2F64               	goto	l1707
  3710  0F5D  0836               	movf	___lwdiv@divisor,w
  3711  0F5E  02B8               	subwf	___lwdiv@dividend,f
  3712  0F5F  0837               	movf	___lwdiv@divisor+1,w
  3713  0F60  1C03               	skipc
  3714  0F61  03B9               	decf	___lwdiv@dividend+1,f
  3715  0F62  02B9               	subwf	___lwdiv@dividend+1,f
  3716  0F63  143B               	bsf	___lwdiv@quotient,0
  3717  0F64                     l1707:	
  3718  0F64  3001               	movlw	1
  3719  0F65                     u1495:	
  3720  0F65  1003               	clrc
  3721  0F66  0CB7               	rrf	___lwdiv@divisor+1,f
  3722  0F67  0CB6               	rrf	___lwdiv@divisor,f
  3723  0F68  3EFF               	addlw	-1
  3724  0F69  1D03               	skipz
  3725  0F6A  2F65               	goto	u1495
  3726  0F6B  3001               	movlw	1
  3727  0F6C  02BD               	subwf	___lwdiv@counter,f
  3728  0F6D  1D03               	btfss	3,2
  3729  0F6E  2F4E               	goto	l1701
  3730  0F6F                     l1711:	
  3731  0F6F  083C               	movf	___lwdiv@quotient+1,w
  3732  0F70  00B7               	movwf	?___lwdiv+1
  3733  0F71  083B               	movf	___lwdiv@quotient,w
  3734  0F72  00B6               	movwf	?___lwdiv
  3735  0F73  0008               	return
  3736  0F74                     __end_of___lwdiv:	
  3737                           
  3738                           	psect	text17
  3739  0DDB                     __ptext17:	
  3740 ;; *************** function _configUSARTInterrupts *****************
  3741 ;; Defined at:
  3742 ;;		line 32 in file "usart.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;		None               void
  3749 ;; Registers used:
  3750 ;;		None
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0
  3759 ;;      Totals:         0       0       0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    3
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function _configUSARTInterrupts
  3772  0DDB                     _configUSARTInterrupts:	
  3773                           
  3774                           ;usart.c: 35: TXIE = 0;
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _configUSARTInterrupts: []
  3778  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  3779  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  3780  0DDD  120C               	bcf	12,4	;volatile
  3781                           
  3782                           ;usart.c: 36: TXIF = 0;
  3783  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3785  0DE0  120C               	bcf	12,4	;volatile
  3786                           
  3787                           ;usart.c: 39: RCIE = 1;
  3788  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  3790  0DE3  168C               	bsf	12,5	;volatile
  3791                           
  3792                           ;usart.c: 40: RCIF = 0;
  3793  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0DE6  128C               	bcf	12,5	;volatile
  3796                           
  3797                           ;usart.c: 42: PEIE = 1;
  3798  0DE7  170B               	bsf	11,6	;volatile
  3799                           
  3800                           ;usart.c: 43: GIE = 1;
  3801  0DE8  178B               	bsf	11,7	;volatile
  3802  0DE9  0008               	return
  3803  0DEA                     __end_of_configUSARTInterrupts:	
  3804                           
  3805                           	psect	text18
  3806  0DC0                     __ptext18:	
  3807 ;; *************** function _configTimer *****************
  3808 ;; Defined at:
  3809 ;;		line 19 in file "timer0.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;		None               void
  3816 ;; Registers used:
  3817 ;;		None
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    3
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _configTimer
  3839  0DC0                     _configTimer:	
  3840                           
  3841                           ;timer0.c: 20: OPTION_REGbits.T0CS = 0;
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in _configTimer: []
  3845  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  3846  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  3847  0DC2  1281               	bcf	1,5	;volatile
  3848                           
  3849                           ;timer0.c: 21: OPTION_REGbits.T0SE = 0;
  3850  0DC3  1201               	bcf	1,4	;volatile
  3851                           
  3852                           ;timer0.c: 22: OPTION_REGbits.PSA = 0;
  3853  0DC4  1181               	bcf	1,3	;volatile
  3854                           
  3855                           ;timer0.c: 26: OPTION_REGbits.PS2 = 1;
  3856  0DC5  1501               	bsf	1,2	;volatile
  3857                           
  3858                           ;timer0.c: 27: OPTION_REGbits.PS1 = 1;
  3859  0DC6  1481               	bsf	1,1	;volatile
  3860                           
  3861                           ;timer0.c: 28: OPTION_REGbits.PS0 = 1;
  3862  0DC7  1401               	bsf	1,0	;volatile
  3863                           
  3864                           ;timer0.c: 30: INTCONbits.TMR0IF = 0;
  3865  0DC8  110B               	bcf	11,2	;volatile
  3866                           
  3867                           ;timer0.c: 31: INTCONbits.TMR0IE = 1;
  3868  0DC9  168B               	bsf	11,5	;volatile
  3869                           
  3870                           ;timer0.c: 32: INTCONbits.GIE = 1;
  3871  0DCA  178B               	bsf	11,7	;volatile
  3872                           
  3873                           ;timer0.c: 33: INTCONbits.PEIE = 1;
  3874  0DCB  170B               	bsf	11,6	;volatile
  3875  0DCC  0008               	return
  3876  0DCD                     __end_of_configTimer:	
  3877                           
  3878                           	psect	text19
  3879  0E0A                     __ptext19:	
  3880 ;; *************** function _configRS232 *****************
  3881 ;; Defined at:
  3882 ;;		line 9 in file "usart.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;		None               void
  3889 ;; Registers used:
  3890 ;;		wreg
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3896 ;;      Params:         0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0
  3899 ;;      Totals:         0       0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           
  3911                           ;psect for function _configRS232
  3912  0E0A                     _configRS232:	
  3913                           
  3914                           ;usart.c: 12: CSRC = 0;
  3915                           
  3916                           ;incstack = 0
  3917                           ; Regs used in _configRS232: [wreg]
  3918  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  3919  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  3920  0E0C  1398               	bcf	24,7	;volatile
  3921                           
  3922                           ;usart.c: 13: TX9 = 0;
  3923  0E0D  1318               	bcf	24,6	;volatile
  3924                           
  3925                           ;usart.c: 14: TXEN = 1;
  3926  0E0E  1698               	bsf	24,5	;volatile
  3927                           
  3928                           ;usart.c: 15: SYNC = 0;
  3929  0E0F  1218               	bcf	24,4	;volatile
  3930                           
  3931                           ;usart.c: 16: BRGH = 1;
  3932  0E10  1518               	bsf	24,2	;volatile
  3933                           
  3934                           ;usart.c: 19: SPEN = 1;
  3935  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  3937  0E13  1798               	bsf	24,7	;volatile
  3938                           
  3939                           ;usart.c: 20: RX9 = 0;
  3940  0E14  1318               	bcf	24,6	;volatile
  3941                           
  3942                           ;usart.c: 21: CREN = 1;
  3943  0E15  1618               	bsf	24,4	;volatile
  3944                           
  3945                           ;usart.c: 27: SPBRG = 129;
  3946  0E16  3081               	movlw	129
  3947  0E17  1683               	bsf	3,5	;RP0=1, select bank1
  3948  0E18  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0E19  0099               	movwf	25	;volatile
  3950  0E1A  0008               	return
  3951  0E1B                     __end_of_configRS232:	
  3952                           
  3953                           	psect	text20
  3954  0D99                     __ptext20:	
  3955 ;; *************** function _configADInterrupt *****************
  3956 ;; Defined at:
  3957 ;;		line 11 in file "ad.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		None
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    3
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function _configADInterrupt
  3987  0D99                     _configADInterrupt:	
  3988                           
  3989                           ;ad.c: 12: PIR1bits.ADIF = 0;
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _configADInterrupt: []
  3993  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0D9B  130C               	bcf	12,6	;volatile
  3996                           
  3997                           ;ad.c: 13: PIE1bits.ADIE = 1;
  3998  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  4000  0D9E  170C               	bsf	12,6	;volatile
  4001                           
  4002                           ;ad.c: 15: INTCONbits.GIE = 1;
  4003  0D9F  178B               	bsf	11,7	;volatile
  4004                           
  4005                           ;ad.c: 16: INTCONbits.PEIE = 1;
  4006  0DA0  170B               	bsf	11,6	;volatile
  4007  0DA1  0008               	return
  4008  0DA2                     __end_of_configADInterrupt:	
  4009                           
  4010                           	psect	text21
  4011  0DEA                     __ptext21:	
  4012 ;; *************** function _configAD *****************
  4013 ;; Defined at:
  4014 ;;		line 19 in file "ad.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;		None               void
  4021 ;; Registers used:
  4022 ;;		None
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    3
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _configAD
  4044  0DEA                     _configAD:	
  4045                           
  4046                           ;ad.c: 20: ADCON0bits.ADON = 1;
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in _configAD: []
  4050  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0DEC  141F               	bsf	31,0	;volatile
  4053                           
  4054                           ;ad.c: 24: ADFM = 1;
  4055  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  4057  0DEF  179F               	bsf	31,7	;volatile
  4058                           
  4059                           ;ad.c: 27: ADCON1bits.PCFG3 = 0;
  4060  0DF0  119F               	bcf	31,3	;volatile
  4061                           
  4062                           ;ad.c: 28: ADCON1bits.PCFG2 = 1;
  4063  0DF1  151F               	bsf	31,2	;volatile
  4064                           
  4065                           ;ad.c: 29: ADCON1bits.PCFG1 = 0;
  4066  0DF2  109F               	bcf	31,1	;volatile
  4067                           
  4068                           ;ad.c: 30: ADCON1bits.PCFG0 = 1;
  4069  0DF3  141F               	bsf	31,0	;volatile
  4070                           
  4071                           ;ad.c: 41: ADCS2 = 0;
  4072  0DF4  131F               	bcf	31,6	;volatile
  4073                           
  4074                           ;ad.c: 42: ADCS1 = 1;
  4075  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4076  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4077  0DF7  179F               	bsf	31,7	;volatile
  4078                           
  4079                           ;ad.c: 43: ADCS0 = 0;
  4080  0DF8  131F               	bcf	31,6	;volatile
  4081  0DF9  0008               	return
  4082  0DFA                     __end_of_configAD:	
  4083                           
  4084                           	psect	text22
  4085  0E1B                     __ptext22:	
  4086 ;; *************** function _InitI2C_Master *****************
  4087 ;; Defined at:
  4088 ;;		line 12 in file "i2c.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, status,2
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0
  4105 ;;      Totals:         0       0       0       0       0
  4106 ;;Total ram usage:        0 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    3
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _InitI2C_Master
  4118  0E1B                     _InitI2C_Master:	
  4119                           
  4120                           ;i2c.c: 14: TRISC4 = 1;
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _InitI2C_Master: [wreg+status,2]
  4124  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  4126  0E1D  1607               	bsf	7,4	;volatile
  4127                           
  4128                           ;i2c.c: 15: TRISC3 = 1;
  4129  0E1E  1587               	bsf	7,3	;volatile
  4130                           
  4131                           ;i2c.c: 17: SSPADD = ( 20000000 / (4*100000) ) - 1;
  4132  0E1F  3031               	movlw	49
  4133  0E20  0093               	movwf	19	;volatile
  4134                           
  4135                           ;i2c.c: 20: SSPIF = 0;
  4136  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0E23  118C               	bcf	12,3	;volatile
  4139                           
  4140                           ;i2c.c: 23: SSPSTAT = 0;
  4141  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  4142  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  4143  0E26  0194               	clrf	20	;volatile
  4144                           
  4145                           ;i2c.c: 24: SSPSTATbits.SMP = 1;
  4146  0E27  1794               	bsf	20,7	;volatile
  4147                           
  4148                           ;i2c.c: 25: SSPSTATbits.CKE = 0;
  4149  0E28  1314               	bcf	20,6	;volatile
  4150                           
  4151                           ;i2c.c: 29: WCOL = 0;
  4152  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0E2B  1394               	bcf	20,7	;volatile
  4155                           
  4156                           ;i2c.c: 30: SSPOV = 0;
  4157  0E2C  1314               	bcf	20,6	;volatile
  4158                           
  4159                           ;i2c.c: 31: SSPEN = 0;
  4160  0E2D  1294               	bcf	20,5	;volatile
  4161                           
  4162                           ;i2c.c: 32: CKP = 0;
  4163  0E2E  1214               	bcf	20,4	;volatile
  4164                           
  4165                           ;i2c.c: 34: SSPM3 = 1;
  4166  0E2F  1594               	bsf	20,3	;volatile
  4167                           
  4168                           ;i2c.c: 35: SSPM2 = 0;
  4169  0E30  1114               	bcf	20,2	;volatile
  4170                           
  4171                           ;i2c.c: 36: SSPM1 = 0;
  4172  0E31  1094               	bcf	20,1	;volatile
  4173                           
  4174                           ;i2c.c: 37: SSPM0 = 0;
  4175  0E32  1014               	bcf	20,0	;volatile
  4176                           
  4177                           ;i2c.c: 39: SSPEN = 1;
  4178  0E33  1694               	bsf	20,5	;volatile
  4179  0E34  0008               	return
  4180  0E35                     __end_of_InitI2C_Master:	
  4181                           
  4182                           	psect	text23
  4183  0671                     __ptext23:	
  4184 ;; *************** function _interruptions *****************
  4185 ;; Defined at:
  4186 ;;		line 41 in file "main.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  cont            2   20[BANK0 ] int 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;		None               void
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       2       0       0       0
  4202 ;;      Temps:          0       7       0       0       0
  4203 ;;      Totals:         0       9       0       0       0
  4204 ;;Total ram usage:        9 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    2
  4207 ;; This function calls:
  4208 ;;		___awmod
  4209 ;;		_strcpy
  4210 ;;		i1_printf
  4211 ;; This function is called by:
  4212 ;;		Interrupt level 1
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function _interruptions
  4218  0671                     _interruptions:	
  4219                           
  4220                           ;main.c: 43: if (RCIF){
  4221  0671  1E8C               	btfss	12,5	;volatile
  4222  0672  2EC9               	goto	i1l2233
  4223                           
  4224                           ;main.c: 44: if (FERR || OERR)
  4225  0673  1918               	btfsc	24,2	;volatile
  4226  0674  2E77               	goto	i1l296
  4227  0675  1C98               	btfss	24,1	;volatile
  4228  0676  2E7A               	goto	i1l2209
  4229  0677                     i1l296:	
  4230                           
  4231                           ;main.c: 45: {
  4232                           ;main.c: 46: CREN = 0;
  4233  0677  1218               	bcf	24,4	;volatile
  4234                           
  4235                           ;main.c: 47: hasAnError = 1;
  4236  0678  1557               	bsf	_hasAnError/(0+8),_hasAnError& (0+7)
  4237                           
  4238                           ;main.c: 48: CREN = 1;
  4239  0679  1618               	bsf	24,4	;volatile
  4240  067A                     i1l2209:	
  4241                           
  4242                           ;main.c: 49: }
  4243                           ;main.c: 51: receivedData = RCREG;
  4244  067A  081A               	movf	26,w	;volatile
  4245  067B  00AD               	movwf	??_interruptions
  4246  067C  082D               	movf	??_interruptions,w
  4247  067D  00D9               	movwf	_receivedData
  4248                           
  4249                           ;main.c: 53: if(receivedData == '\r')
  4250  067E  300D               	movlw	13
  4251  067F  0659               	xorwf	_receivedData,w
  4252  0680  1D03               	btfss	3,2
  4253  0681  2E9B               	goto	i1l2221
  4254                           
  4255                           ;main.c: 54: {
  4256                           ;main.c: 55: string_aux[i] = '\0';
  4257  0682  0858               	movf	_i,w
  4258  0683  3EAA               	addlw	(low (_string_aux| 0))& (0+255)
  4259  0684  0084               	movwf	4
  4260  0685  1383               	bcf	3,7	;select IRP bank1
  4261  0686  0180               	clrf	0
  4262                           
  4263                           ;main.c: 56: strcpy(string,string_aux);
  4264  0687  30AA               	movlw	(low (_string_aux| 0))& (0+255)
  4265  0688  00AD               	movwf	??_interruptions
  4266  0689  082D               	movf	??_interruptions,w
  4267  068A  00F0               	movwf	strcpy@from
  4268  068B  3090               	movlw	(low (_string| (0+256)))& (0+255)
  4269  068C  120A  158A  2635  120A  118A  	fcall	_strcpy
  4270                           
  4271                           ;main.c: 57: printf("\n\r");
  4272  0691  304A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4273  0692  120A  118A  24A2  120A  118A  	fcall	i1_printf
  4274                           
  4275                           ;main.c: 58: i = 0;
  4276  0697  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0698  1303               	bcf	3,6	;RP1=0, select bank0
  4278  0699  01D8               	clrf	_i
  4279                           
  4280                           ;main.c: 59: }else
  4281  069A  2EC9               	goto	i1l2233
  4282  069B                     i1l2221:	
  4283                           
  4284                           ;main.c: 60: {
  4285                           ;main.c: 61: if(i < 25)
  4286  069B  3019               	movlw	25
  4287  069C  0258               	subwf	_i,w
  4288  069D  1803               	skipnc
  4289  069E  2EC1               	goto	i1l2229
  4290                           
  4291                           ;main.c: 62: {
  4292                           ;main.c: 63: i = i%25;
  4293  069F  3019               	movlw	25
  4294  06A0  00F0               	movwf	___awmod@divisor
  4295  06A1  3000               	movlw	0
  4296  06A2  00F1               	movwf	___awmod@divisor+1
  4297  06A3  0858               	movf	_i,w
  4298  06A4  00AD               	movwf	??_interruptions
  4299  06A5  01AE               	clrf	??_interruptions+1
  4300  06A6  082D               	movf	??_interruptions,w
  4301  06A7  00F2               	movwf	___awmod@dividend
  4302  06A8  082E               	movf	??_interruptions+1,w
  4303  06A9  00F3               	movwf	___awmod@dividend+1
  4304  06AA  120A  158A  27B5  120A  118A  	fcall	___awmod
  4305  06AF  0870               	movf	?___awmod,w
  4306  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4307  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  4308  06B2  00AF               	movwf	??_interruptions+2
  4309  06B3  082F               	movf	??_interruptions+2,w
  4310  06B4  00D8               	movwf	_i
  4311                           
  4312                           ;main.c: 64: string_aux[i] = receivedData;
  4313  06B5  0859               	movf	_receivedData,w
  4314  06B6  00AD               	movwf	??_interruptions
  4315  06B7  0858               	movf	_i,w
  4316  06B8  3EAA               	addlw	(low (_string_aux| 0))& (0+255)
  4317  06B9  0084               	movwf	4
  4318  06BA  082D               	movf	??_interruptions,w
  4319  06BB  1383               	bcf	3,7	;select IRP bank1
  4320  06BC  0080               	movwf	0
  4321                           
  4322                           ;main.c: 65: i++;
  4323  06BD  3001               	movlw	1
  4324  06BE  00AD               	movwf	??_interruptions
  4325  06BF  082D               	movf	??_interruptions,w
  4326  06C0  07D8               	addwf	_i,f
  4327  06C1                     i1l2229:	
  4328                           
  4329                           ;main.c: 66: }
  4330                           ;main.c: 67: if(i == 25)
  4331  06C1  3019               	movlw	25
  4332  06C2  0658               	xorwf	_i,w
  4333  06C3  1D03               	btfss	3,2
  4334  06C4  2EC9               	goto	i1l2233
  4335                           
  4336                           ;main.c: 68: i++;
  4337  06C5  3001               	movlw	1
  4338  06C6  00AD               	movwf	??_interruptions
  4339  06C7  082D               	movf	??_interruptions,w
  4340  06C8  07D8               	addwf	_i,f
  4341  06C9                     i1l2233:	
  4342                           
  4343                           ;main.c: 69: }
  4344                           ;main.c: 70: }
  4345                           ;main.c: 72: if(PIR1bits.ADIF){
  4346  06C9  1F0C               	btfss	12,6	;volatile
  4347  06CA  2ED4               	goto	i1l2239
  4348                           
  4349                           ;main.c: 73: data_ADC = ((ADRESH<<8) + ADRESL);
  4350  06CB  081E               	movf	30,w	;volatile
  4351  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  4352  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  4353  06CE  00A1               	movwf	(_data_ADC+1)^(0+128)
  4354  06CF  081E               	movf	30,w	;volatile
  4355  06D0  00A0               	movwf	_data_ADC^(0+128)
  4356                           
  4357                           ;main.c: 75: PIR1bits.ADIF = 0;
  4358  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  4359  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  4360  06D3  130C               	bcf	12,6	;volatile
  4361  06D4                     i1l2239:	
  4362                           
  4363                           ;main.c: 76: }
  4364                           ;main.c: 78: if(INTCONbits.TMR0IF){
  4365  06D4  1D0B               	btfss	11,2	;volatile
  4366  06D5  2EDD               	goto	i1l2245
  4367                           
  4368                           ;main.c: 79: contLedRD3++;
  4369  06D6  3001               	movlw	1
  4370  06D7  00AD               	movwf	??_interruptions
  4371  06D8  082D               	movf	??_interruptions,w
  4372  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  4373  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  4374  06DB  07A3               	addwf	_contLedRD3^(0+128),f
  4375                           
  4376                           ;main.c: 80: INTCONbits.TMR0IF = 0;
  4377  06DC  110B               	bcf	11,2	;volatile
  4378  06DD                     i1l2245:	
  4379                           
  4380                           ;main.c: 81: }
  4381                           ;main.c: 83: if(INTCONbits.RBIF){
  4382  06DD  1C0B               	btfss	11,0	;volatile
  4383  06DE  2F1C               	goto	i1l307
  4384                           
  4385                           ;main.c: 84: for(int cont = 0; cont < 10; cont++)
  4386  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  4387  06E0  01B4               	clrf	interruptions@cont
  4388  06E1  01B5               	clrf	interruptions@cont+1
  4389  06E2  0835               	movf	interruptions@cont+1,w
  4390  06E3  3A80               	xorlw	128
  4391  06E4  00FF               	movwf	127
  4392  06E5  3080               	movlw	128
  4393  06E6  027F               	subwf	127,w
  4394  06E7  1D03               	skipz
  4395  06E8  2EEB               	goto	u238_25
  4396  06E9  300A               	movlw	10
  4397  06EA  0234               	subwf	interruptions@cont,w
  4398  06EB                     u238_25:	
  4399  06EB  1803               	btfsc	3,0
  4400  06EC  2F0B               	goto	i1l305
  4401  06ED                     i1l2253:	
  4402                           
  4403                           ;main.c: 85: _delay((unsigned long)((10)*(20000000/4000.0)));
  4404  06ED  3041               	movlw	65
  4405  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  4406  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  4407  06F0  00AE               	movwf	??_interruptions+1
  4408  06F1  30EE               	movlw	238
  4409  06F2  00AD               	movwf	??_interruptions
  4410  06F3                     u265_27:	
  4411  06F3  0BAD               	decfsz	??_interruptions,f
  4412  06F4  2EF3               	goto	u265_27
  4413  06F5  0BAE               	decfsz	??_interruptions+1,f
  4414  06F6  2EF3               	goto	u265_27
  4415  06F7  0000               	nop
  4416  06F8  3001               	movlw	1
  4417  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  4418  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  4419  06FB  07B4               	addwf	interruptions@cont,f
  4420  06FC  1803               	skipnc
  4421  06FD  0AB5               	incf	interruptions@cont+1,f
  4422  06FE  3000               	movlw	0
  4423  06FF  07B5               	addwf	interruptions@cont+1,f
  4424  0700  0835               	movf	interruptions@cont+1,w
  4425  0701  3A80               	xorlw	128
  4426  0702  00FF               	movwf	127
  4427  0703  3080               	movlw	128
  4428  0704  027F               	subwf	127,w
  4429  0705  1D03               	skipz
  4430  0706  2F09               	goto	u239_25
  4431  0707  300A               	movlw	10
  4432  0708  0234               	subwf	interruptions@cont,w
  4433  0709                     u239_25:	
  4434  0709  1C03               	skipc
  4435  070A  2EED               	goto	i1l2253
  4436  070B                     i1l305:	
  4437                           
  4438                           ;main.c: 86: if(PORTBbits.RB7){
  4439  070B  1283               	bcf	3,5	;RP0=0, select bank0
  4440  070C  1303               	bcf	3,6	;RP1=0, select bank0
  4441  070D  1F86               	btfss	6,7	;volatile
  4442  070E  2F1B               	goto	i1l2263
  4443                           
  4444                           ;main.c: 87: bottonToSend = 1;
  4445  070F  1457               	bsf	_bottonToSend/(0+8),_bottonToSend& (0+7)
  4446                           
  4447                           ;main.c: 88: valLedRD4 = ~valLedRD4;
  4448  0710  3008               	movlw	(0+1) shl (_valLedRD4& (0+7))
  4449  0711  06D7               	xorwf	_valLedRD4/(0+8),f
  4450                           
  4451                           ;main.c: 89: PORTDbits.RD4 = valLedRD4;
  4452  0712  1DD7               	btfss	_valLedRD4/(0+8),_valLedRD4& (0+7)
  4453  0713  2F18               	goto	u241_20
  4454  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4455  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0716  1608               	bsf	8,4	;volatile
  4457  0717  2F1B               	goto	i1l2263
  4458  0718                     u241_20:	
  4459  0718  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0719  1303               	bcf	3,6	;RP1=0, select bank0
  4461  071A  1208               	bcf	8,4	;volatile
  4462  071B                     i1l2263:	
  4463                           
  4464                           ;main.c: 90: }
  4465                           ;main.c: 91: INTCONbits.RBIF = 0;
  4466  071B  100B               	bcf	11,0	;volatile
  4467  071C                     i1l307:	
  4468  071C  1283               	bcf	3,5	;RP0=0, select bank0
  4469  071D  0833               	movf	??_interruptions+6,w
  4470  071E  00FF               	movwf	127
  4471  071F  0832               	movf	??_interruptions+5,w
  4472  0720  008A               	movwf	10
  4473  0721  0831               	movf	??_interruptions+4,w
  4474  0722  0084               	movwf	4
  4475  0723  0E30               	swapf	(??_interruptions+3)^0,w
  4476  0724  0083               	movwf	3
  4477  0725  0EFE               	swapf	126,f
  4478  0726  0E7E               	swapf	126,w
  4479  0727  0009               	retfie
  4480  0728                     __end_of_interruptions:	
  4481                           
  4482                           	psect	intentry
  4483  0004                     __pintentry:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _interruptions: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4486                           
  4487  0004                     interrupt_function:	
  4488  007E                     saved_w	set	btemp
  4489  0004  00FE               	movwf	btemp
  4490  0005  0E03               	swapf	3,w
  4491  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0008  00B0               	movwf	??_interruptions+3
  4494  0009  0804               	movf	4,w
  4495  000A  00B1               	movwf	??_interruptions+4
  4496  000B  080A               	movf	10,w
  4497  000C  00B2               	movwf	??_interruptions+5
  4498  000D  087F               	movf	btemp+1,w
  4499  000E  00B3               	movwf	??_interruptions+6
  4500  000F  120A  118A  2E71   	ljmp	_interruptions
  4501                           
  4502                           	psect	text24
  4503  04A2                     __ptext24:	
  4504 ;; *************** function i1_printf *****************
  4505 ;; Defined at:
  4506 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  f               1    wreg     PTR const unsigned char 
  4509 ;;		 -> STR_3(2), STR_2(38), STR_1(3), 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  4512 ;;		 -> STR_3(2), STR_2(38), STR_1(3), 
  4513 ;;  printf          4    0        struct .
  4514 ;;  printf          2   10[BANK0 ] int 
  4515 ;;  printf          2    8[BANK0 ] unsigned int 
  4516 ;;  printf          2    0        PTR const unsigned char 
  4517 ;;  printf          2    0        unsigned int 
  4518 ;;  printf          1   12[BANK0 ] char 
  4519 ;;  printf          1    7[BANK0 ] unsigned char 
  4520 ;;  printf          1    6[BANK0 ] char 
  4521 ;;  printf          1    5[BANK0 ] PTR void [1]
  4522 ;;		 -> ?i1_printf(2), ?_printf(2), 
  4523 ;;  printf          1    3[BANK0 ] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  2    0[None  ] int 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4533 ;;      Params:         0       0       0       0       0
  4534 ;;      Locals:         0      10       0       0       0
  4535 ;;      Temps:          0       3       0       0       0
  4536 ;;      Totals:         0      13       0       0       0
  4537 ;;Total ram usage:       13 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    1
  4540 ;; This function calls:
  4541 ;;		i1___lwdiv
  4542 ;;		i1___lwmod
  4543 ;;		i1___wmul
  4544 ;;		i1_isdigit
  4545 ;;		i1_putch
  4546 ;; This function is called by:
  4547 ;;		_interruptions
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function i1_printf
  4553  04A2                     i1_printf:	
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in i1_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4557                           ;i1printf@f stored from wreg
  4558  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  4559  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  4560  04A4  00A4               	movwf	i1printf@f
  4561                           
  4562                           ;doprnt.c: 466: va_list ap;
  4563                           ;doprnt.c: 499: signed char c;
  4564                           ;doprnt.c: 501: int width;
  4565                           ;doprnt.c: 506: signed char prec;
  4566                           ;doprnt.c: 508: unsigned char flag;
  4567                           ;doprnt.c: 523: union {
  4568                           ;doprnt.c: 524: unsigned long vd;
  4569                           ;doprnt.c: 525: double integ;
  4570                           ;doprnt.c: 526: } tmpval;
  4571                           ;doprnt.c: 528: unsigned int val;
  4572                           ;doprnt.c: 529: unsigned len;
  4573                           ;doprnt.c: 530: const char * cp;
  4574                           ;doprnt.c: 533: *ap = __va_start();
  4575  04A5  3070               	movlw	(low (?i1_printf| 0))& (0+255)
  4576  04A6  00A0               	movwf	??i1_printf
  4577  04A7  0820               	movf	??i1_printf,w
  4578  04A8  00A5               	movwf	i1printf@ap
  4579  04A9                     i1l2197:	
  4580                           ;doprnt.c: 536: while(c = *f++) {
  4581                           
  4582  04A9  3001               	movlw	1
  4583  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  4584  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  4585  04AC  07A4               	addwf	i1printf@f,f
  4586  04AD  30FF               	movlw	-1
  4587  04AE  0724               	addwf	i1printf@f,w
  4588  04AF  0084               	movwf	4
  4589  04B0  120A  158A  2000  120A  118A  	fcall	stringdir
  4590  04B5  00A0               	movwf	??i1_printf
  4591  04B6  0820               	movf	??i1_printf,w
  4592  04B7  00AC               	movwf	i1printf@c
  4593  04B8  082C               	movf	i1printf@c,w
  4594  04B9  1903               	btfsc	3,2
  4595  04BA  0008               	return
  4596                           
  4597                           ;doprnt.c: 538: if(c != '%')
  4598  04BB  3025               	movlw	37
  4599  04BC  062C               	xorwf	i1printf@c,w
  4600  04BD  1903               	btfsc	3,2
  4601  04BE  2CC6               	goto	i1l2107
  4602                           
  4603                           ;doprnt.c: 540: {
  4604                           ;doprnt.c: 541: (putch(c) );
  4605  04BF  082C               	movf	i1printf@c,w
  4606  04C0  120A  158A  2569  120A  118A  	fcall	i1_putch
  4607                           
  4608                           ;doprnt.c: 542: continue;
  4609  04C5  2CA9               	goto	i1l2197
  4610  04C6                     i1l2107:	
  4611                           
  4612                           ;doprnt.c: 543: }
  4613                           ;doprnt.c: 546: width = 0;
  4614  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  4615  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  4616  04C8  01AA               	clrf	i1printf@width
  4617  04C9  01AB               	clrf	i1printf@width+1
  4618                           
  4619                           ;doprnt.c: 548: flag = 0;
  4620  04CA  01A7               	clrf	i1printf@flag
  4621                           
  4622                           ;doprnt.c: 551: switch(*f) {
  4623                           
  4624                           ;doprnt.c: 550: for(;;) {
  4625  04CB  2CD1               	goto	i1l2113
  4626  04CC                     i1l349:	
  4627                           ;doprnt.c: 579: case '0':
  4628                           
  4629                           
  4630                           ;doprnt.c: 580: flag |= 0x04;
  4631  04CC  1527               	bsf	i1printf@flag,2
  4632                           
  4633                           ;doprnt.c: 581: f++;
  4634  04CD  3001               	movlw	1
  4635  04CE  00A0               	movwf	??i1_printf
  4636  04CF  0820               	movf	??i1_printf,w
  4637  04D0  07A4               	addwf	i1printf@f,f
  4638  04D1                     i1l2113:	
  4639                           ;doprnt.c: 584: }
  4640                           
  4641                           ;doprnt.c: 582: continue;
  4642                           
  4643  04D1  0824               	movf	i1printf@f,w
  4644  04D2  0084               	movwf	4
  4645  04D3  120A  158A  2000  120A  118A  	fcall	stringdir
  4646                           
  4647                           ; Switch size 1, requested type "space"
  4648                           ; Number of cases is 1, Range of values is 48 to 48
  4649                           ; switch strategies available:
  4650                           ; Name         Instructions Cycles
  4651                           ; simple_byte            4     3 (average)
  4652                           ; direct_byte           14    11 (fixed)
  4653                           ; jumptable            263     9 (fixed)
  4654                           ;	Chosen strategy is simple_byte
  4655  04D8  3A30               	xorlw	48	; case 48
  4656  04D9  1903               	skipnz
  4657  04DA  2CCC               	goto	i1l349
  4658  04DB  2CDC               	goto	i1l2115
  4659  04DC                     i1l2115:	
  4660                           ;doprnt.c: 586: }
  4661                           
  4662                           ;doprnt.c: 585: break;
  4663                           
  4664                           
  4665                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4666  04DC  0824               	movf	i1printf@f,w
  4667  04DD  0084               	movwf	4
  4668  04DE  120A  158A  2000  120A  118A  	fcall	stringdir
  4669  04E3  120A  158A  25CD  120A  118A  	fcall	i1_isdigit
  4670  04E8  1C03               	btfss	3,0
  4671  04E9  2D32               	goto	i1l2131
  4672                           
  4673                           ;doprnt.c: 598: width = 0;
  4674  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  4675  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  4676  04EC  01AA               	clrf	i1printf@width
  4677  04ED  01AB               	clrf	i1printf@width+1
  4678  04EE                     i1l2119:	
  4679                           ;doprnt.c: 599: do {
  4680                           
  4681                           
  4682                           ;doprnt.c: 600: width *= 10;
  4683  04EE  300A               	movlw	10
  4684  04EF  00F0               	movwf	i1___wmul@multiplier
  4685  04F0  3000               	movlw	0
  4686  04F1  00F1               	movwf	i1___wmul@multiplier+1
  4687  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  4688  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  4689  04F4  082B               	movf	i1printf@width+1,w
  4690  04F5  00F3               	movwf	i1___wmul@multiplicand+1
  4691  04F6  082A               	movf	i1printf@width,w
  4692  04F7  00F2               	movwf	i1___wmul@multiplicand
  4693  04F8  120A  158A  2650  120A  118A  	fcall	i1___wmul
  4694  04FD  0871               	movf	?i1___wmul+1,w
  4695  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  4696  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  4697  0500  00AB               	movwf	i1printf@width+1
  4698  0501  0870               	movf	?i1___wmul,w
  4699  0502  00AA               	movwf	i1printf@width
  4700                           
  4701                           ;doprnt.c: 601: width += *f++ - '0';
  4702  0503  0824               	movf	i1printf@f,w
  4703  0504  0084               	movwf	4
  4704  0505  120A  158A  2000  120A  118A  	fcall	stringdir
  4705  050A  3ED0               	addlw	208
  4706  050B  00A0               	movwf	??i1_printf
  4707  050C  30FF               	movlw	255
  4708  050D  1803               	skipnc
  4709  050E  3000               	movlw	0
  4710  050F  00A1               	movwf	??i1_printf+1
  4711  0510  0820               	movf	??i1_printf,w
  4712  0511  07AA               	addwf	i1printf@width,f
  4713  0512  1803               	skipnc
  4714  0513  0AAB               	incf	i1printf@width+1,f
  4715  0514  0821               	movf	??i1_printf+1,w
  4716  0515  07AB               	addwf	i1printf@width+1,f
  4717  0516  3001               	movlw	1
  4718  0517  00A0               	movwf	??i1_printf
  4719  0518  0820               	movf	??i1_printf,w
  4720  0519  07A4               	addwf	i1printf@f,f
  4721                           
  4722                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4723  051A  0824               	movf	i1printf@f,w
  4724  051B  0084               	movwf	4
  4725  051C  120A  158A  2000  120A  118A  	fcall	stringdir
  4726  0521  120A  158A  25CD  120A  118A  	fcall	i1_isdigit
  4727  0526  1C03               	btfss	3,0
  4728  0527  2D32               	goto	i1l2131
  4729  0528  2CEE               	goto	i1l2119
  4730  0529                     i1l360:	
  4731                           ;doprnt.c: 712: case 'X':
  4732                           
  4733                           ;doprnt.c: 638: goto alldone;
  4734                           
  4735                           ;doprnt.c: 637: case 0:
  4736                           
  4737                           ;doprnt.c: 608: }
  4738                           ;doprnt.c: 635: switch(c = *f++) {
  4739                           
  4740                           
  4741                           ;doprnt.c: 718: case 'x':
  4742                           ;doprnt.c: 721: flag |= 0x80;
  4743  0529  1283               	bcf	3,5	;RP0=0, select bank0
  4744  052A  1303               	bcf	3,6	;RP1=0, select bank0
  4745  052B  17A7               	bsf	i1printf@flag,7
  4746                           
  4747                           ;doprnt.c: 723: break;
  4748  052C  2D4C               	goto	i1l2133
  4749  052D                     i1l2127:	
  4750                           ;doprnt.c: 817: case 'u':
  4751                           
  4752                           ;doprnt.c: 813: continue;
  4753                           
  4754                           ;doprnt.c: 802: default:
  4755                           
  4756                           
  4757                           ;doprnt.c: 818: flag |= 0xC0;
  4758  052D  30C0               	movlw	192
  4759  052E  00A0               	movwf	??i1_printf
  4760  052F  0820               	movf	??i1_printf,w
  4761  0530  04A7               	iorwf	i1printf@flag,f
  4762                           
  4763                           ;doprnt.c: 822: }
  4764                           
  4765                           ;doprnt.c: 819: break;
  4766  0531  2D4C               	goto	i1l2133
  4767  0532                     i1l2131:	
  4768  0532  3001               	movlw	1
  4769  0533  1283               	bcf	3,5	;RP0=0, select bank0
  4770  0534  1303               	bcf	3,6	;RP1=0, select bank0
  4771  0535  07A4               	addwf	i1printf@f,f
  4772  0536  30FF               	movlw	-1
  4773  0537  0724               	addwf	i1printf@f,w
  4774  0538  0084               	movwf	4
  4775  0539  120A  158A  2000  120A  118A  	fcall	stringdir
  4776  053E  00AC               	movwf	i1printf@c
  4777                           
  4778                           ; Switch size 1, requested type "space"
  4779                           ; Number of cases is 4, Range of values is 0 to 120
  4780                           ; switch strategies available:
  4781                           ; Name         Instructions Cycles
  4782                           ; simple_byte           13     7 (average)
  4783                           ; jumptable            260     6 (fixed)
  4784                           ;	Chosen strategy is simple_byte
  4785  053F  3A00               	xorlw	0	; case 0
  4786  0540  1903               	skipnz
  4787  0541  2E70               	goto	i1l392
  4788  0542  3A58               	xorlw	88	; case 88
  4789  0543  1903               	skipnz
  4790  0544  2D29               	goto	i1l360
  4791  0545  3A2D               	xorlw	45	; case 117
  4792  0546  1903               	skipnz
  4793  0547  2D2D               	goto	i1l2127
  4794  0548  3A0D               	xorlw	13	; case 120
  4795  0549  1903               	skipnz
  4796  054A  2D29               	goto	i1l360
  4797  054B  2CA9               	goto	i1l2197
  4798  054C                     i1l2133:	
  4799                           
  4800                           ;doprnt.c: 1273: {
  4801                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4802  054C  0825               	movf	i1printf@ap,w
  4803  054D  0084               	movwf	4
  4804  054E  1383               	bcf	3,7	;select IRP bank0
  4805  054F  0800               	movf	0,w
  4806  0550  00A8               	movwf	i1printf@val
  4807  0551  0A84               	incf	4,f
  4808  0552  0800               	movf	0,w
  4809  0553  00A9               	movwf	i1printf@val+1
  4810  0554  3002               	movlw	2
  4811  0555  00A0               	movwf	??i1_printf
  4812  0556  0820               	movf	??i1_printf,w
  4813  0557  07A5               	addwf	i1printf@ap,f
  4814                           
  4815                           ;doprnt.c: 1287: }
  4816                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  4817  0558  2DA1               	goto	i1l2159
  4818  0559                     i1l365:	
  4819                           ;doprnt.c: 1302: case 0xC0:
  4820                           
  4821                           
  4822                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4823  0559  01AC               	clrf	i1printf@c
  4824  055A  0AAC               	incf	i1printf@c,f
  4825  055B                     L8:	
  4826  055B  3005               	movlw	5
  4827  055C  062C               	xorwf	i1printf@c,w
  4828  055D  1903               	btfsc	3,2
  4829  055E  2DAA               	goto	i1l2161
  4830                           
  4831                           ;doprnt.c: 1306: if(val < dpowers[c])
  4832  055F  082C               	movf	i1printf@c,w
  4833  0560  00A0               	movwf	??i1_printf
  4834  0561  0720               	addwf	??i1_printf,w
  4835  0562  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4836  0563  0084               	movwf	4
  4837  0564  120A  158A  2000  120A  118A  	fcall	stringdir
  4838  0569  00A1               	movwf	??i1_printf+1
  4839  056A  120A  158A  2000  120A  118A  	fcall	stringdir
  4840  056F  00A2               	movwf	??i1_printf+2
  4841  0570  0822               	movf	??i1_printf+2,w
  4842  0571  0229               	subwf	i1printf@val+1,w
  4843  0572  1D03               	skipz
  4844  0573  2D76               	goto	u216_25
  4845  0574  0821               	movf	??i1_printf+1,w
  4846  0575  0228               	subwf	i1printf@val,w
  4847  0576                     u216_25:	
  4848  0576  1C03               	btfss	3,0
  4849  0577  2DAA               	goto	i1l2161
  4850                           
  4851                           ;doprnt.c: 1307: break;
  4852  0578  3001               	movlw	1
  4853  0579  00A0               	movwf	??i1_printf
  4854  057A  0820               	movf	??i1_printf,w
  4855  057B  07AC               	addwf	i1printf@c,f
  4856  057C  2D5B               	goto	L8
  4857  057D                     i1l370:	
  4858                           ;doprnt.c: 1314: case 0x80:
  4859                           
  4860                           ;doprnt.c: 1309: break;
  4861                           
  4862                           
  4863                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4864  057D  01AC               	clrf	i1printf@c
  4865  057E  0AAC               	incf	i1printf@c,f
  4866  057F                     L9:	
  4867  057F  3004               	movlw	4
  4868  0580  062C               	xorwf	i1printf@c,w
  4869  0581  1903               	btfsc	3,2
  4870  0582  2DAA               	goto	i1l2161
  4871                           
  4872                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4873  0583  082C               	movf	i1printf@c,w
  4874  0584  00A0               	movwf	??i1_printf
  4875  0585  0720               	addwf	??i1_printf,w
  4876  0586  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4877  0587  0084               	movwf	4
  4878  0588  120A  158A  2000  120A  118A  	fcall	stringdir
  4879  058D  00A1               	movwf	??i1_printf+1
  4880  058E  120A  158A  2000  120A  118A  	fcall	stringdir
  4881  0593  00A2               	movwf	??i1_printf+2
  4882  0594  0822               	movf	??i1_printf+2,w
  4883  0595  0229               	subwf	i1printf@val+1,w
  4884  0596  1D03               	skipz
  4885  0597  2D9A               	goto	u219_25
  4886  0598  0821               	movf	??i1_printf+1,w
  4887  0599  0228               	subwf	i1printf@val,w
  4888  059A                     u219_25:	
  4889  059A  1C03               	btfss	3,0
  4890  059B  2DAA               	goto	i1l2161
  4891                           
  4892                           ;doprnt.c: 1318: break;
  4893  059C  3001               	movlw	1
  4894  059D  00A0               	movwf	??i1_printf
  4895  059E  0820               	movf	??i1_printf,w
  4896  059F  07AC               	addwf	i1printf@c,f
  4897  05A0  2D7F               	goto	L9
  4898  05A1                     i1l2159:	
  4899                           ;doprnt.c: 1336: }
  4900                           
  4901                           ;doprnt.c: 1320: break;
  4902                           
  4903  05A1  0827               	movf	i1printf@flag,w
  4904  05A2  39C0               	andlw	192
  4905                           
  4906                           ; Switch size 1, requested type "space"
  4907                           ; Number of cases is 2, Range of values is 128 to 192
  4908                           ; switch strategies available:
  4909                           ; Name         Instructions Cycles
  4910                           ; simple_byte            7     4 (average)
  4911                           ; direct_byte          206    11 (fixed)
  4912                           ; jumptable            263     9 (fixed)
  4913                           ;	Chosen strategy is simple_byte
  4914  05A3  3A80               	xorlw	128	; case 128
  4915  05A4  1903               	skipnz
  4916  05A5  2D7D               	goto	i1l370
  4917  05A6  3A40               	xorlw	64	; case 192
  4918  05A7  1903               	skipnz
  4919  05A8  2D59               	goto	i1l365
  4920  05A9  2DAA               	goto	i1l2161
  4921  05AA                     i1l2161:	
  4922                           
  4923                           ;doprnt.c: 1381: if(width > c)
  4924  05AA  082C               	movf	i1printf@c,w
  4925  05AB  00A0               	movwf	??i1_printf
  4926  05AC  01A1               	clrf	??i1_printf+1
  4927  05AD  1BA0               	btfsc	??i1_printf,7
  4928  05AE  03A1               	decf	??i1_printf+1,f
  4929  05AF  0821               	movf	??i1_printf+1,w
  4930  05B0  3A80               	xorlw	128
  4931  05B1  00A2               	movwf	??i1_printf+2
  4932  05B2  082B               	movf	i1printf@width+1,w
  4933  05B3  3A80               	xorlw	128
  4934  05B4  0222               	subwf	??i1_printf+2,w
  4935  05B5  1D03               	skipz
  4936  05B6  2DB9               	goto	u221_25
  4937  05B7  082A               	movf	i1printf@width,w
  4938  05B8  0220               	subwf	??i1_printf,w
  4939  05B9                     u221_25:	
  4940  05B9  1803               	skipnc
  4941  05BA  2DC9               	goto	i1l2165
  4942                           
  4943                           ;doprnt.c: 1382: width -= c;
  4944  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  4945  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  4946  05BD  082C               	movf	i1printf@c,w
  4947  05BE  00A0               	movwf	??i1_printf
  4948  05BF  01A1               	clrf	??i1_printf+1
  4949  05C0  1BA0               	btfsc	??i1_printf,7
  4950  05C1  03A1               	decf	??i1_printf+1,f
  4951  05C2  0820               	movf	??i1_printf,w
  4952  05C3  02AA               	subwf	i1printf@width,f
  4953  05C4  0821               	movf	??i1_printf+1,w
  4954  05C5  1C03               	skipc
  4955  05C6  03AB               	decf	i1printf@width+1,f
  4956  05C7  02AB               	subwf	i1printf@width+1,f
  4957  05C8  2DCD               	goto	i1l2167
  4958  05C9                     i1l2165:	
  4959                           
  4960                           ;doprnt.c: 1383: else
  4961                           ;doprnt.c: 1384: width = 0;
  4962  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  4963  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  4964  05CB  01AA               	clrf	i1printf@width
  4965  05CC  01AB               	clrf	i1printf@width+1
  4966  05CD                     i1l2167:	
  4967                           
  4968                           ;doprnt.c: 1387: if(flag & 0x04) {
  4969  05CD  1D27               	btfss	i1printf@flag,2
  4970  05CE  2DE2               	goto	i1l2175
  4971  05CF                     L10:	
  4972                           
  4973                           ;doprnt.c: 1415: if(width)
  4974  05CF  082A               	movf	i1printf@width,w
  4975  05D0  042B               	iorwf	i1printf@width+1,w
  4976  05D1  1903               	btfsc	3,2
  4977  05D2  2DF8               	goto	i1l2181
  4978                           
  4979                           ;doprnt.c: 1417: (putch('0') );
  4980                           
  4981                           ;doprnt.c: 1416: do
  4982  05D3  3030               	movlw	48
  4983  05D4  120A  158A  2569  120A  118A  	fcall	i1_putch
  4984                           
  4985                           ;doprnt.c: 1418: while(--width);
  4986  05D9  30FF               	movlw	255
  4987  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  4988  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  4989  05DC  07AA               	addwf	i1printf@width,f
  4990  05DD  1803               	skipnc
  4991  05DE  0AAB               	incf	i1printf@width+1,f
  4992  05DF  30FF               	movlw	255
  4993  05E0  07AB               	addwf	i1printf@width+1,f
  4994  05E1  2DCF               	goto	L10
  4995  05E2                     i1l2175:	
  4996                           ;doprnt.c: 1420: } else
  4997                           
  4998                           
  4999                           ;doprnt.c: 1422: {
  5000                           ;doprnt.c: 1424: if(width
  5001                           ;doprnt.c: 1428: )
  5002  05E2  082A               	movf	i1printf@width,w
  5003  05E3  042B               	iorwf	i1printf@width+1,w
  5004  05E4  1903               	btfsc	3,2
  5005  05E5  2DF8               	goto	i1l2181
  5006  05E6                     i1l2177:	
  5007                           ;doprnt.c: 1429: do
  5008                           
  5009                           
  5010                           ;doprnt.c: 1430: (putch(' ') );
  5011  05E6  3020               	movlw	32
  5012  05E7  120A  158A  2569  120A  118A  	fcall	i1_putch
  5013                           
  5014                           ;doprnt.c: 1431: while(--width);
  5015  05EC  30FF               	movlw	255
  5016  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  5017  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  5018  05EF  07AA               	addwf	i1printf@width,f
  5019  05F0  1803               	skipnc
  5020  05F1  0AAB               	incf	i1printf@width+1,f
  5021  05F2  30FF               	movlw	255
  5022  05F3  07AB               	addwf	i1printf@width+1,f
  5023  05F4  082A               	movf	i1printf@width,w
  5024  05F5  042B               	iorwf	i1printf@width+1,w
  5025  05F6  1D03               	btfss	3,2
  5026  05F7  2DE6               	goto	i1l2177
  5027  05F8                     i1l2181:	
  5028                           
  5029                           ;doprnt.c: 1469: }
  5030                           ;doprnt.c: 1472: prec = c;
  5031  05F8  082C               	movf	i1printf@c,w
  5032  05F9  00A0               	movwf	??i1_printf
  5033  05FA  0820               	movf	??i1_printf,w
  5034  05FB  00A6               	movwf	i1printf@prec
  5035                           
  5036                           ;doprnt.c: 1474: while(prec--) {
  5037  05FC  2E5D               	goto	i1l2195
  5038  05FD                     i1l2183:	
  5039                           ;doprnt.c: 1478: {
  5040                           ;doprnt.c: 1486: case 0xC0:
  5041                           
  5042                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
  5043                           
  5044                           
  5045                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5046  05FD  300A               	movlw	10
  5047  05FE  00F8               	movwf	i1___lwmod@divisor
  5048  05FF  3000               	movlw	0
  5049  0600  00F9               	movwf	i1___lwmod@divisor+1
  5050  0601  0826               	movf	i1printf@prec,w
  5051  0602  00A0               	movwf	??i1_printf
  5052  0603  0720               	addwf	??i1_printf,w
  5053  0604  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5054  0605  0084               	movwf	4
  5055  0606  120A  158A  2000  120A  118A  	fcall	stringdir
  5056  060B  00F0               	movwf	i1___lwdiv@divisor
  5057  060C  120A  158A  2000  120A  118A  	fcall	stringdir
  5058  0611  00F1               	movwf	i1___lwdiv@divisor+1
  5059  0612  0829               	movf	i1printf@val+1,w
  5060  0613  00F3               	movwf	i1___lwdiv@dividend+1
  5061  0614  0828               	movf	i1printf@val,w
  5062  0615  00F2               	movwf	i1___lwdiv@dividend
  5063  0616  120A  158A  26FA  120A  118A  	fcall	i1___lwdiv
  5064  061B  0871               	movf	?i1___lwdiv+1,w
  5065  061C  00FB               	movwf	i1___lwmod@dividend+1
  5066  061D  0870               	movf	?i1___lwdiv,w
  5067  061E  00FA               	movwf	i1___lwmod@dividend
  5068  061F  120A  158A  2694  120A  118A  	fcall	i1___lwmod
  5069  0624  0878               	movf	?i1___lwmod,w
  5070  0625  3E30               	addlw	48
  5071  0626  1283               	bcf	3,5	;RP0=0, select bank0
  5072  0627  1303               	bcf	3,6	;RP1=0, select bank0
  5073  0628  00A1               	movwf	??i1_printf+1
  5074  0629  0821               	movf	??i1_printf+1,w
  5075  062A  2E56               	goto	L7
  5076  062B                     i1l2185:	
  5077                           ;doprnt.c: 1497: case 0x80:
  5078                           
  5079                           ;doprnt.c: 1491: break;
  5080                           
  5081                           
  5082                           ;doprnt.c: 1499: {
  5083                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5084  062B  0826               	movf	i1printf@prec,w
  5085  062C  00A0               	movwf	??i1_printf
  5086  062D  0720               	addwf	??i1_printf,w
  5087  062E  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5088  062F  0084               	movwf	4
  5089  0630  120A  158A  2000  120A  118A  	fcall	stringdir
  5090  0635  00F0               	movwf	i1___lwdiv@divisor
  5091  0636  120A  158A  2000  120A  118A  	fcall	stringdir
  5092  063B  00F1               	movwf	i1___lwdiv@divisor+1
  5093  063C  0829               	movf	i1printf@val+1,w
  5094  063D  00F3               	movwf	i1___lwdiv@dividend+1
  5095  063E  0828               	movf	i1printf@val,w
  5096  063F  00F2               	movwf	i1___lwdiv@dividend
  5097  0640  120A  158A  26FA  120A  118A  	fcall	i1___lwdiv
  5098  0645  0870               	movf	?i1___lwdiv,w
  5099  0646  390F               	andlw	15
  5100  0647  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0648  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0649  00A1               	movwf	??i1_printf+1
  5103  064A  0821               	movf	??i1_printf+1,w
  5104  064B  00A3               	movwf	i1printf@idx
  5105                           
  5106                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5107  064C  0823               	movf	i1printf@idx,w
  5108  064D  3E39               	addlw	low ((STR_4-__stringbase)| (0+32768))
  5109  064E  0084               	movwf	4
  5110  064F  120A  158A  2000  120A  118A  	fcall	stringdir
  5111  0654  00A0               	movwf	??i1_printf
  5112  0655  0820               	movf	??i1_printf,w
  5113  0656                     L7:	
  5114  0656  00AC               	movwf	i1printf@c
  5115  0657                     i1l2193:	
  5116                           ;doprnt.c: 1523: }
  5117                           
  5118                           ;doprnt.c: 1508: }
  5119                           ;doprnt.c: 1510: break;
  5120                           
  5121                           
  5122                           ;doprnt.c: 1524: (putch(c) );
  5123  0657  082C               	movf	i1printf@c,w
  5124  0658  120A  158A  2569  120A  118A  	fcall	i1_putch
  5125  065D                     i1l2195:	
  5126  065D  30FF               	movlw	255
  5127  065E  1283               	bcf	3,5	;RP0=0, select bank0
  5128  065F  1303               	bcf	3,6	;RP1=0, select bank0
  5129  0660  00A0               	movwf	??i1_printf
  5130  0661  0820               	movf	??i1_printf,w
  5131  0662  07A6               	addwf	i1printf@prec,f
  5132  0663  0A26               	incf	i1printf@prec,w
  5133  0664  1903               	btfsc	3,2
  5134  0665  2CA9               	goto	i1l2197
  5135  0666  0827               	movf	i1printf@flag,w
  5136  0667  39C0               	andlw	192
  5137                           
  5138                           ; Switch size 1, requested type "space"
  5139                           ; Number of cases is 2, Range of values is 128 to 192
  5140                           ; switch strategies available:
  5141                           ; Name         Instructions Cycles
  5142                           ; simple_byte            7     4 (average)
  5143                           ; direct_byte          206    11 (fixed)
  5144                           ; jumptable            263     9 (fixed)
  5145                           ;	Chosen strategy is simple_byte
  5146  0668  3A80               	xorlw	128	; case 128
  5147  0669  1903               	skipnz
  5148  066A  2E2B               	goto	i1l2185
  5149  066B  3A40               	xorlw	64	; case 192
  5150  066C  1903               	skipnz
  5151  066D  2DFD               	goto	i1l2183
  5152  066E  2E57               	goto	i1l2193
  5153  066F  2E57               	goto	i1l2193
  5154  0670                     i1l392:	
  5155                           ;doprnt.c: 1540: return 0;
  5156                           ;	Return value of i1_printf is never used
  5157                           
  5158                           ;doprnt.c: 1525: }
  5159                           ;doprnt.c: 1533: }
  5160                           ;doprnt.c: 1535: alldone:
  5161                           
  5162  0670  0008               	return
  5163  0671                     __end_ofi1_printf:	
  5164                           
  5165                           	psect	text25
  5166  0D69                     __ptext25:	
  5167 ;; *************** function i1_putch *****************
  5168 ;; Defined at:
  5169 ;;		line 46 in file "usart.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  byte            1    wreg     unsigned char 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  byte            1    0[COMMON] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;		None               void
  5176 ;; Registers used:
  5177 ;;		wreg
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       0       0       0       0
  5184 ;;      Locals:         1       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0
  5186 ;;      Totals:         1       0       0       0       0
  5187 ;;Total ram usage:        1 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		i1_printf
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function i1_putch
  5198  0D69                     i1_putch:	
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in i1_putch: [wreg]
  5202                           ;i1putch@byte stored from wreg
  5203  0D69  00F0               	movwf	i1putch@byte
  5204  0D6A                     i1l180:	
  5205                           ;usart.c: 49: continue;
  5206                           
  5207                           ;usart.c: 48: while (!TXIF)
  5208                           
  5209  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5210  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5211  0D6C  1E0C               	btfss	12,4	;volatile
  5212  0D6D  2D6A               	goto	i1l180
  5213                           
  5214                           ;usart.c: 50: TXREG = byte;
  5215  0D6E  0870               	movf	i1putch@byte,w
  5216  0D6F  0099               	movwf	25	;volatile
  5217  0D70  0008               	return
  5218  0D71                     __end_ofi1_putch:	
  5219                           
  5220                           	psect	text26
  5221  0DCD                     __ptext26:	
  5222 ;; *************** function i1_isdigit *****************
  5223 ;; Defined at:
  5224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  c               1    wreg     unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  c               1    1[COMMON] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;		None               void
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5238 ;;      Params:         0       0       0       0       0
  5239 ;;      Locals:         2       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0
  5241 ;;      Totals:         2       0       0       0       0
  5242 ;;Total ram usage:        2 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		i1_printf
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function i1_isdigit
  5253  0DCD                     i1_isdigit:	
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in i1_isdigit: [wreg+status,2+status,0]
  5257                           ;i1isdigit@c stored from wreg
  5258  0DCD  00F1               	movwf	i1isdigit@c
  5259  0DCE  01F0               	clrf	i1_isdigit$900
  5260  0DCF  303A               	movlw	58
  5261  0DD0  0271               	subwf	i1isdigit@c,w
  5262  0DD1  1803               	skipnc
  5263  0DD2  2DD9               	goto	i1l1763
  5264  0DD3  3030               	movlw	48
  5265  0DD4  0271               	subwf	i1isdigit@c,w
  5266  0DD5  1C03               	skipc
  5267  0DD6  2DD9               	goto	i1l1763
  5268  0DD7  01F0               	clrf	i1_isdigit$900
  5269  0DD8  0AF0               	incf	i1_isdigit$900,f
  5270  0DD9                     i1l1763:	
  5271  0DD9  0C70               	rrf	i1_isdigit$900,w
  5272  0DDA  0008               	return
  5273  0DDB                     __end_ofi1_isdigit:	
  5274                           
  5275                           	psect	text27
  5276  0E50                     __ptext27:	
  5277 ;; *************** function i1___wmul *****************
  5278 ;; Defined at:
  5279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  multiplier      2    0[COMMON] unsigned int 
  5282 ;;  multiplicand    2    2[COMMON] unsigned int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  __wmul          2    4[COMMON] unsigned int 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  2    0[COMMON] unsigned int 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5294 ;;      Params:         4       0       0       0       0
  5295 ;;      Locals:         2       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0
  5297 ;;      Totals:         6       0       0       0       0
  5298 ;;Total ram usage:        6 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		i1_printf
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           
  5308                           ;psect for function i1___wmul
  5309  0E50                     i1___wmul:	
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5313  0E50  01F4               	clrf	i1___wmul@product
  5314  0E51  01F5               	clrf	i1___wmul@product+1
  5315  0E52                     i1l1743:	
  5316  0E52  1C70               	btfss	i1___wmul@multiplier,0
  5317  0E53  2E5A               	goto	i1l476
  5318  0E54  0872               	movf	i1___wmul@multiplicand,w
  5319  0E55  07F4               	addwf	i1___wmul@product,f
  5320  0E56  1803               	skipnc
  5321  0E57  0AF5               	incf	i1___wmul@product+1,f
  5322  0E58  0873               	movf	i1___wmul@multiplicand+1,w
  5323  0E59  07F5               	addwf	i1___wmul@product+1,f
  5324  0E5A                     i1l476:	
  5325  0E5A  3001               	movlw	1
  5326  0E5B                     u159_25:	
  5327  0E5B  1003               	clrc
  5328  0E5C  0DF2               	rlf	i1___wmul@multiplicand,f
  5329  0E5D  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5330  0E5E  3EFF               	addlw	-1
  5331  0E5F  1D03               	skipz
  5332  0E60  2E5B               	goto	u159_25
  5333  0E61  3001               	movlw	1
  5334  0E62                     u160_25:	
  5335  0E62  1003               	clrc
  5336  0E63  0CF1               	rrf	i1___wmul@multiplier+1,f
  5337  0E64  0CF0               	rrf	i1___wmul@multiplier,f
  5338  0E65  3EFF               	addlw	-1
  5339  0E66  1D03               	skipz
  5340  0E67  2E62               	goto	u160_25
  5341  0E68  0870               	movf	i1___wmul@multiplier,w
  5342  0E69  0471               	iorwf	i1___wmul@multiplier+1,w
  5343  0E6A  1D03               	btfss	3,2
  5344  0E6B  2E52               	goto	i1l1743
  5345  0E6C  0875               	movf	i1___wmul@product+1,w
  5346  0E6D  00F1               	movwf	?i1___wmul+1
  5347  0E6E  0874               	movf	i1___wmul@product,w
  5348  0E6F  00F0               	movwf	?i1___wmul
  5349  0E70  0008               	return
  5350  0E71                     __end_ofi1___wmul:	
  5351                           
  5352                           	psect	text28
  5353  0E94                     __ptext28:	
  5354 ;; *************** function i1___lwmod *****************
  5355 ;; Defined at:
  5356 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  divisor         2    8[COMMON] unsigned int 
  5359 ;;  dividend        2   10[COMMON] unsigned int 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  __lwmod         1   13[COMMON] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  2    8[COMMON] unsigned int 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5371 ;;      Params:         4       0       0       0       0
  5372 ;;      Locals:         1       0       0       0       0
  5373 ;;      Temps:          1       0       0       0       0
  5374 ;;      Totals:         6       0       0       0       0
  5375 ;;Total ram usage:        6 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		i1_printf
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function i1___lwmod
  5386  0E94                     i1___lwmod:	
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  5390  0E94  0878               	movf	i1___lwmod@divisor,w
  5391  0E95  0479               	iorwf	i1___lwmod@divisor+1,w
  5392  0E96  1903               	btfsc	3,2
  5393  0E97  2EC1               	goto	i1l1811
  5394  0E98  01FD               	clrf	i1___lwmod@counter
  5395  0E99  0AFD               	incf	i1___lwmod@counter,f
  5396  0E9A                     i1l1801:	
  5397  0E9A  1BF9               	btfsc	i1___lwmod@divisor+1,7
  5398  0E9B  2EA8               	goto	i1l1803
  5399  0E9C  3001               	movlw	1
  5400  0E9D                     u172_25:	
  5401  0E9D  1003               	clrc
  5402  0E9E  0DF8               	rlf	i1___lwmod@divisor,f
  5403  0E9F  0DF9               	rlf	i1___lwmod@divisor+1,f
  5404  0EA0  3EFF               	addlw	-1
  5405  0EA1  1D03               	skipz
  5406  0EA2  2E9D               	goto	u172_25
  5407  0EA3  3001               	movlw	1
  5408  0EA4  00FC               	movwf	??i1___lwmod
  5409  0EA5  087C               	movf	??i1___lwmod,w
  5410  0EA6  07FD               	addwf	i1___lwmod@counter,f
  5411  0EA7  2E9A               	goto	i1l1801
  5412  0EA8                     i1l1803:	
  5413  0EA8  0879               	movf	i1___lwmod@divisor+1,w
  5414  0EA9  027B               	subwf	i1___lwmod@dividend+1,w
  5415  0EAA  1D03               	skipz
  5416  0EAB  2EAE               	goto	u174_25
  5417  0EAC  0878               	movf	i1___lwmod@divisor,w
  5418  0EAD  027A               	subwf	i1___lwmod@dividend,w
  5419  0EAE                     u174_25:	
  5420  0EAE  1C03               	skipc
  5421  0EAF  2EB6               	goto	i1l1807
  5422  0EB0  0878               	movf	i1___lwmod@divisor,w
  5423  0EB1  02FA               	subwf	i1___lwmod@dividend,f
  5424  0EB2  0879               	movf	i1___lwmod@divisor+1,w
  5425  0EB3  1C03               	skipc
  5426  0EB4  03FB               	decf	i1___lwmod@dividend+1,f
  5427  0EB5  02FB               	subwf	i1___lwmod@dividend+1,f
  5428  0EB6                     i1l1807:	
  5429  0EB6  3001               	movlw	1
  5430  0EB7                     u175_25:	
  5431  0EB7  1003               	clrc
  5432  0EB8  0CF9               	rrf	i1___lwmod@divisor+1,f
  5433  0EB9  0CF8               	rrf	i1___lwmod@divisor,f
  5434  0EBA  3EFF               	addlw	-1
  5435  0EBB  1D03               	skipz
  5436  0EBC  2EB7               	goto	u175_25
  5437  0EBD  3001               	movlw	1
  5438  0EBE  02FD               	subwf	i1___lwmod@counter,f
  5439  0EBF  1D03               	btfss	3,2
  5440  0EC0  2EA8               	goto	i1l1803
  5441  0EC1                     i1l1811:	
  5442  0EC1  087B               	movf	i1___lwmod@dividend+1,w
  5443  0EC2  00F9               	movwf	?i1___lwmod+1
  5444  0EC3  087A               	movf	i1___lwmod@dividend,w
  5445  0EC4  00F8               	movwf	?i1___lwmod
  5446  0EC5  0008               	return
  5447  0EC6                     __end_ofi1___lwmod:	
  5448                           
  5449                           	psect	text29
  5450  0EFA                     __ptext29:	
  5451 ;; *************** function i1___lwdiv *****************
  5452 ;; Defined at:
  5453 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  divisor         2    0[COMMON] unsigned int 
  5456 ;;  dividend        2    2[COMMON] unsigned int 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5459 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  2    0[COMMON] unsigned int 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5469 ;;      Params:         4       0       0       0       0
  5470 ;;      Locals:         3       0       0       0       0
  5471 ;;      Temps:          1       0       0       0       0
  5472 ;;      Totals:         8       0       0       0       0
  5473 ;;Total ram usage:        8 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		i1_printf
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function i1___lwdiv
  5484  0EFA                     i1___lwdiv:	
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5488  0EFA  01F5               	clrf	i1___lwdiv@quotient
  5489  0EFB  01F6               	clrf	i1___lwdiv@quotient+1
  5490  0EFC  0870               	movf	i1___lwdiv@divisor,w
  5491  0EFD  0471               	iorwf	i1___lwdiv@divisor+1,w
  5492  0EFE  1903               	btfsc	3,2
  5493  0EFF  2F31               	goto	i1l1789
  5494  0F00  01F7               	clrf	i1___lwdiv@counter
  5495  0F01  0AF7               	incf	i1___lwdiv@counter,f
  5496  0F02                     i1l1777:	
  5497  0F02  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5498  0F03  2F10               	goto	i1l1779
  5499  0F04  3001               	movlw	1
  5500  0F05                     u165_25:	
  5501  0F05  1003               	clrc
  5502  0F06  0DF0               	rlf	i1___lwdiv@divisor,f
  5503  0F07  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5504  0F08  3EFF               	addlw	-1
  5505  0F09  1D03               	skipz
  5506  0F0A  2F05               	goto	u165_25
  5507  0F0B  3001               	movlw	1
  5508  0F0C  00F4               	movwf	??i1___lwdiv
  5509  0F0D  0874               	movf	??i1___lwdiv,w
  5510  0F0E  07F7               	addwf	i1___lwdiv@counter,f
  5511  0F0F  2F02               	goto	i1l1777
  5512  0F10                     i1l1779:	
  5513  0F10  3001               	movlw	1
  5514  0F11                     u167_25:	
  5515  0F11  1003               	clrc
  5516  0F12  0DF5               	rlf	i1___lwdiv@quotient,f
  5517  0F13  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5518  0F14  3EFF               	addlw	-1
  5519  0F15  1D03               	skipz
  5520  0F16  2F11               	goto	u167_25
  5521  0F17  0871               	movf	i1___lwdiv@divisor+1,w
  5522  0F18  0273               	subwf	i1___lwdiv@dividend+1,w
  5523  0F19  1D03               	skipz
  5524  0F1A  2F1D               	goto	u168_25
  5525  0F1B  0870               	movf	i1___lwdiv@divisor,w
  5526  0F1C  0272               	subwf	i1___lwdiv@dividend,w
  5527  0F1D                     u168_25:	
  5528  0F1D  1C03               	skipc
  5529  0F1E  2F26               	goto	i1l1785
  5530  0F1F  0870               	movf	i1___lwdiv@divisor,w
  5531  0F20  02F2               	subwf	i1___lwdiv@dividend,f
  5532  0F21  0871               	movf	i1___lwdiv@divisor+1,w
  5533  0F22  1C03               	skipc
  5534  0F23  03F3               	decf	i1___lwdiv@dividend+1,f
  5535  0F24  02F3               	subwf	i1___lwdiv@dividend+1,f
  5536  0F25  1475               	bsf	i1___lwdiv@quotient,0
  5537  0F26                     i1l1785:	
  5538  0F26  3001               	movlw	1
  5539  0F27                     u169_25:	
  5540  0F27  1003               	clrc
  5541  0F28  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5542  0F29  0CF0               	rrf	i1___lwdiv@divisor,f
  5543  0F2A  3EFF               	addlw	-1
  5544  0F2B  1D03               	skipz
  5545  0F2C  2F27               	goto	u169_25
  5546  0F2D  3001               	movlw	1
  5547  0F2E  02F7               	subwf	i1___lwdiv@counter,f
  5548  0F2F  1D03               	btfss	3,2
  5549  0F30  2F10               	goto	i1l1779
  5550  0F31                     i1l1789:	
  5551  0F31  0876               	movf	i1___lwdiv@quotient+1,w
  5552  0F32  00F1               	movwf	?i1___lwdiv+1
  5553  0F33  0875               	movf	i1___lwdiv@quotient,w
  5554  0F34  00F0               	movwf	?i1___lwdiv
  5555  0F35  0008               	return
  5556  0F36                     __end_ofi1___lwdiv:	
  5557                           
  5558                           	psect	text30
  5559  0E35                     __ptext30:	
  5560 ;; *************** function _strcpy *****************
  5561 ;; Defined at:
  5562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  to              1    wreg     PTR unsigned char 
  5565 ;;		 -> string(26), 
  5566 ;;  from            1    0[COMMON] PTR const unsigned char 
  5567 ;;		 -> string_aux(26), 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  to              1    2[COMMON] PTR unsigned char 
  5570 ;;		 -> string(26), 
  5571 ;;  cp              1    3[COMMON] PTR unsigned char 
  5572 ;;		 -> string(26), 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      PTR unsigned char 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         1       0       0       0       0
  5583 ;;      Locals:         2       0       0       0       0
  5584 ;;      Temps:          1       0       0       0       0
  5585 ;;      Totals:         4       0       0       0       0
  5586 ;;Total ram usage:        4 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_interruptions
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _strcpy
  5597  0E35                     _strcpy:	
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0]
  5601                           ;strcpy@to stored from wreg
  5602  0E35  00F2               	movwf	strcpy@to
  5603  0E36  0872               	movf	strcpy@to,w
  5604  0E37  00F1               	movwf	??_strcpy
  5605  0E38  0871               	movf	??_strcpy,w
  5606  0E39  00F3               	movwf	strcpy@cp
  5607  0E3A                     i1l1893:	
  5608  0E3A  0870               	movf	strcpy@from,w
  5609  0E3B  0084               	movwf	4
  5610  0E3C  1383               	bcf	3,7	;select IRP bank0
  5611  0E3D  0800               	movf	0,w
  5612  0E3E  00F1               	movwf	??_strcpy
  5613  0E3F  0873               	movf	strcpy@cp,w
  5614  0E40  0084               	movwf	4
  5615  0E41  0871               	movf	??_strcpy,w
  5616  0E42  1783               	bsf	3,7	;select IRP bank2
  5617  0E43  0080               	movwf	0
  5618  0E44  0800               	movf	0,w
  5619  0E45  1903               	btfsc	3,2
  5620  0E46  0008               	return
  5621  0E47  3001               	movlw	1
  5622  0E48  00F1               	movwf	??_strcpy
  5623  0E49  0871               	movf	??_strcpy,w
  5624  0E4A  07F3               	addwf	strcpy@cp,f
  5625  0E4B  3001               	movlw	1
  5626  0E4C  00F1               	movwf	??_strcpy
  5627  0E4D  0871               	movf	??_strcpy,w
  5628  0E4E  07F0               	addwf	strcpy@from,f
  5629  0E4F  2E3A               	goto	i1l1893
  5630  0E50                     __end_of_strcpy:	
  5631                           ;	Return value of _strcpy is never used
  5632                           
  5633                           
  5634                           	psect	text31
  5635  0FB5                     __ptext31:	
  5636 ;; *************** function ___awmod *****************
  5637 ;; Defined at:
  5638 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  divisor         2    0[COMMON] int 
  5641 ;;  dividend        2    2[COMMON] int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  sign            1    6[COMMON] unsigned char 
  5644 ;;  counter         1    5[COMMON] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2    0[COMMON] int 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5654 ;;      Params:         4       0       0       0       0
  5655 ;;      Locals:         2       0       0       0       0
  5656 ;;      Temps:          1       0       0       0       0
  5657 ;;      Totals:         7       0       0       0       0
  5658 ;;Total ram usage:        7 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_interruptions
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function ___awmod
  5669  0FB5                     ___awmod:	
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5673  0FB5  01F6               	clrf	___awmod@sign
  5674  0FB6  1FF3               	btfss	___awmod@dividend+1,7
  5675  0FB7  2FBF               	goto	i1l2071
  5676  0FB8  09F2               	comf	___awmod@dividend,f
  5677  0FB9  09F3               	comf	___awmod@dividend+1,f
  5678  0FBA  0AF2               	incf	___awmod@dividend,f
  5679  0FBB  1903               	skipnz
  5680  0FBC  0AF3               	incf	___awmod@dividend+1,f
  5681  0FBD  01F6               	clrf	___awmod@sign
  5682  0FBE  0AF6               	incf	___awmod@sign,f
  5683  0FBF                     i1l2071:	
  5684  0FBF  1FF1               	btfss	___awmod@divisor+1,7
  5685  0FC0  2FC6               	goto	i1l2075
  5686  0FC1  09F0               	comf	___awmod@divisor,f
  5687  0FC2  09F1               	comf	___awmod@divisor+1,f
  5688  0FC3  0AF0               	incf	___awmod@divisor,f
  5689  0FC4  1903               	skipnz
  5690  0FC5  0AF1               	incf	___awmod@divisor+1,f
  5691  0FC6                     i1l2075:	
  5692  0FC6  0870               	movf	___awmod@divisor,w
  5693  0FC7  0471               	iorwf	___awmod@divisor+1,w
  5694  0FC8  1903               	btfsc	3,2
  5695  0FC9  2FF3               	goto	i1l2093
  5696  0FCA  01F5               	clrf	___awmod@counter
  5697  0FCB  0AF5               	incf	___awmod@counter,f
  5698  0FCC                     i1l2083:	
  5699  0FCC  1BF1               	btfsc	___awmod@divisor+1,7
  5700  0FCD  2FDA               	goto	i1l2085
  5701  0FCE  3001               	movlw	1
  5702  0FCF                     u206_25:	
  5703  0FCF  1003               	clrc
  5704  0FD0  0DF0               	rlf	___awmod@divisor,f
  5705  0FD1  0DF1               	rlf	___awmod@divisor+1,f
  5706  0FD2  3EFF               	addlw	-1
  5707  0FD3  1D03               	skipz
  5708  0FD4  2FCF               	goto	u206_25
  5709  0FD5  3001               	movlw	1
  5710  0FD6  00F4               	movwf	??___awmod
  5711  0FD7  0874               	movf	??___awmod,w
  5712  0FD8  07F5               	addwf	___awmod@counter,f
  5713  0FD9  2FCC               	goto	i1l2083
  5714  0FDA                     i1l2085:	
  5715  0FDA  0871               	movf	___awmod@divisor+1,w
  5716  0FDB  0273               	subwf	___awmod@dividend+1,w
  5717  0FDC  1D03               	skipz
  5718  0FDD  2FE0               	goto	u208_25
  5719  0FDE  0870               	movf	___awmod@divisor,w
  5720  0FDF  0272               	subwf	___awmod@dividend,w
  5721  0FE0                     u208_25:	
  5722  0FE0  1C03               	skipc
  5723  0FE1  2FE8               	goto	i1l2089
  5724  0FE2  0870               	movf	___awmod@divisor,w
  5725  0FE3  02F2               	subwf	___awmod@dividend,f
  5726  0FE4  0871               	movf	___awmod@divisor+1,w
  5727  0FE5  1C03               	skipc
  5728  0FE6  03F3               	decf	___awmod@dividend+1,f
  5729  0FE7  02F3               	subwf	___awmod@dividend+1,f
  5730  0FE8                     i1l2089:	
  5731  0FE8  3001               	movlw	1
  5732  0FE9                     u209_25:	
  5733  0FE9  1003               	clrc
  5734  0FEA  0CF1               	rrf	___awmod@divisor+1,f
  5735  0FEB  0CF0               	rrf	___awmod@divisor,f
  5736  0FEC  3EFF               	addlw	-1
  5737  0FED  1D03               	skipz
  5738  0FEE  2FE9               	goto	u209_25
  5739  0FEF  3001               	movlw	1
  5740  0FF0  02F5               	subwf	___awmod@counter,f
  5741  0FF1  1D03               	btfss	3,2
  5742  0FF2  2FDA               	goto	i1l2085
  5743  0FF3                     i1l2093:	
  5744  0FF3  0876               	movf	___awmod@sign,w
  5745  0FF4  1903               	btfsc	3,2
  5746  0FF5  2FFB               	goto	i1l2097
  5747  0FF6  09F2               	comf	___awmod@dividend,f
  5748  0FF7  09F3               	comf	___awmod@dividend+1,f
  5749  0FF8  0AF2               	incf	___awmod@dividend,f
  5750  0FF9  1903               	skipnz
  5751  0FFA  0AF3               	incf	___awmod@dividend+1,f
  5752  0FFB                     i1l2097:	
  5753  0FFB  0873               	movf	___awmod@dividend+1,w
  5754  0FFC  00F1               	movwf	?___awmod+1
  5755  0FFD  0872               	movf	___awmod@dividend,w
  5756  0FFE  00F0               	movwf	?___awmod
  5757  0FFF  0008               	return
  5758  1000                     __end_of___awmod:	
  5759  007E                     btemp	set	126	;btemp
  5760  007E                     wtemp	set	126
  5761  007E                     wtemp0	set	126
  5762  0080                     wtemp1	set	128
  5763  0082                     wtemp2	set	130
  5764  0084                     wtemp3	set	132
  5765  0086                     wtemp4	set	134
  5766  0088                     wtemp5	set	136
  5767  007F                     wtemp6	set	127
  5768  007E                     ttemp	set	126
  5769  007E                     ttemp0	set	126
  5770  0081                     ttemp1	set	129
  5771  0084                     ttemp2	set	132
  5772  0087                     ttemp3	set	135
  5773  007F                     ttemp4	set	127
  5774  007E                     ltemp	set	126
  5775  007E                     ltemp0	set	126
  5776  0082                     ltemp1	set	130
  5777  0086                     ltemp2	set	134
  5778  0080                     ltemp3	set	128


Data Sizes:
    Strings     60
    Constant    18
    Data        3
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      58
    BANK1            80     32      70
    BANK3            96      0      26
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 26
		 -> string_aux(BANK1[26]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 26
		 -> string(BANK3[26]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 26
		 -> string(BANK3[26]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 38
		 -> STR_3(CODE[2]), STR_2(CODE[38]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?i1_printf(COMMON[2]), ?_printf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 26
		 -> string(BANK3[26]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptions in COMMON

    i1_printf->i1___lwmod
    i1___lwmod->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _write_RTC_I2c->_I2C_Write_Byte
    _read_RTC_I2c->_I2C_Write_Byte
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _interruptions in BANK0

    _interruptions->i1_printf

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _interruptions in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptions in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptions in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    2348
                                             10 BANK1     22    22      0
                     _InitI2C_Master
                           _configAD
                  _configADInterrupt
                        _configRS232
                        _configTimer
              _configUSARTInterrupts
                             _printf
                       _read_RTC_I2c
                       _selectChanel
                      _write_RTC_I2c
 ---------------------------------------------------------------------------------
 (1) _write_RTC_I2c                                        0     0      0      22
                           _I2C_Idle
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _selectChanel                                         1     1      0     176
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_RTC_I2c                                         2     2      0      44
                                             23 BANK0      2     2      0
                           _I2C_Idle
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Byte                                       1     1      0      22
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    21     16    1922
                                             36 BANK0     19     3     16
                                              0 BANK1     10    10      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             30 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _configUSARTInterrupts                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configRS232                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADInterrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configAD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C_Master                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interruptions                                        9     9      0    2167
                                             13 BANK0      9     9      0
                            ___awmod
                             _strcpy
                           i1_printf
 ---------------------------------------------------------------------------------
 (4) i1_printf                                            21    21      0    1528
                                              0 BANK0     13    13      0
                          i1___lwdiv
                          i1___lwmod
                           i1___wmul
                          i1_isdigit
                            i1_putch
 ---------------------------------------------------------------------------------
 (5) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1_isdigit                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               4     3      1     169
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitI2C_Master
   _configAD
   _configADInterrupt
   _configRS232
   _configTimer
   _configUSARTInterrupts
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _read_RTC_I2c
     _I2C_Idle
     _I2C_ReStart
     _I2C_Read_Byte
     _I2C_Send_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _selectChanel
   _write_RTC_I2c
     _I2C_Idle
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte

 _interruptions (ROOT)
   ___awmod
   _strcpy
   i1_printf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1___wmul
     i1_isdigit
     i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      1A       9       27.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     20      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     37      3A       5       72.5%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A8      12        0.0%
ABS                  0      0      A8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jun 15 11:58:32 2016

                             _i 0058                               pc 0002              __size_of_I2C_Start 0008  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l91 0D7C  
                            l85 0D84                              l97 0D8C           __end_of_interruptions 0728  
                            _id 00E5                              fsr 0004             ___wmul@multiplicand 0038  
              i1___wmul@product 0074                             l121 0DAE                             l115 0DB9  
                           l109 07FB                             l321 034C                             l323 037C  
                           l180 0D74                             l317 02EC                             l319 031C  
                           l360 00EE                             l370 0156                             l365 0126  
                           l349 0073                             l392 028D                             l476 0E7D  
                           _CKP 00A4                             _GIE 005F                    __CFG_CPD$OFF 0000  
                           _RX9 00C6                             _TX9 04C6                             _dia 00A4  
                           _ano 00A2            __size_of_I2C_ReStart 0008                             _mes 00A7  
                           fsr0 0004                             indf 0000              I2C_Write_Byte@Byte 0036  
                  ___awmod@sign 0076                    __CFG_FOSC$HS 0000                    __CFG_LVP$OFF 0000  
                          l2321 0397                            l2323 039A                            l2315 0384  
                          l1701 0F4E                            l2309 035E                            l1711 0F6F  
                          l1707 0F64                            l1723 0ECE                            l1725 0EDC  
                          l1733 0EF5                            l1901 006D                            l1671 0E08  
                          l1655 0DA2                            l1831 0F8D                            l1823 0F7E  
                          l2279 02CE                            l1729 0EEA                            l1921 00F2  
                          l1913 0099                            l2289 02FE                            l1907 007C  
                          l1843 0FA5                            l1835 0F95                            l1827 0F85  
                          l2299 032E                            l1677 0E75                            l1925 00FB  
                          l1909 0087                            l1927 0115                            l1847 0FAD  
                          l1839 0F9D                            l1961 01C4                            l1953 0186  
                          l1699 0F40                            l1971 01DD                            l1955 018F  
                          l1975 01EF                            l1959 01C0                            l1991 004C  
                          l1977 01F8                            l1969 01D9                            l1979 0236  
                          l1987 0272                            l1989 0278                            _ADFM 04FF  
                          STR_1 084F                            STR_2 0818                            STR_3 0852  
                          STR_4 083E                            _BRGH 04C2                            _CREN 00C4  
                          _FERR 00C2                            _CSRC 04C7                            u1415 0E7E  
                          u1425 0E85                            u1525 0ED1                            u1455 0F43  
                          u2520 0394                            u1545 0EE2                            u2505 037A  
                          u1475 0F4F                            u1555 0EEB                            u2435 02CC  
                          u1485 0F5B                            u2445 02EA                            u1495 0F65  
                          u2607 03C4                            u2455 02FC                            u1905 014B  
                          u2617 03D9                            u2465 031A                            u2627 03EE  
                          u2475 032C                            u2637 0403                            u2485 034A  
                          u2557 02D4                            u1935 017B                            u2647 0493  
                          u2495 035C                            u2567 0304                            u2577 0334  
                          u1955 01A8                            u2587 0364                            _PEIE 005E  
                          u2597 03AF                            _RCIE 0465                            _RCIF 0065  
                          _OERR 00C1                            _WCOL 00A7                            _SPEN 00C7  
                          _TXIE 0464                            _TXEN 04C5                            _TXIF 0064  
                          _SYNC 04C4                    __CFG_WRT$OFF 0000                            _main 028E  
                          _hora 00A5                __end_of_I2C_Idle 0DAB                            btemp 007E  
              __end_of_I2C_Stop 0D91                            ltemp 007E                   i1printf@width 002A  
                          start 0012                            ttemp 007E                            wtemp 007E  
               __end_ofi1_putch 0D71      __size_of_configADInterrupt 0009                    main@cont_671 00DE  
                  main@cont_672 00E0                    main@cont_673 00E2                           _ADCS0 00FE  
                         _ADCS1 00FF                           _ADCS2 04FE                           ?_main 0070  
                 __CFG_WDTE$OFF 0000                 __end_of___awmod 1000                 __end_of___lwdiv 0F74  
                         i1l305 070B                           i1l307 071C                           i1l180 0D6A  
                         i1l360 0529                 __end_of___lwmod 0EFA                           i1l370 057D  
                         i1l365 0559                           i1l349 04CC                           i1l392 0670  
                         i1l296 0677                           i1l476 0E5A                           _RCREG 001A  
                         _SPBRG 0099                           _SSPM0 00A0                           _SSPM1 00A1  
                         _SSPM2 00A2                           _SSPM3 00A3                           _SSPIF 0063  
                         _SSPEN 00A5                           _SSPOV 00A6                           _TXREG 0019  
                    i1isdigit@c 0071              i1___lwmod@dividend 007A                 __end_of_dpowers 0810  
        __size_of_I2C_Read_Byte 0009                 __end_of_isdigit 0E0A                           _putch 0D71  
             __end_of_I2C_Start 0D89                  __CFG_BOREN$OFF 0000                           pclath 000A  
              __end_ofi1___wmul 0E71                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F          __size_of_I2C_Send_NACK 0009                           status 0003  
           i1___wmul@multiplier 0070                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F              __size_ofi1___lwdiv 003C  
            __size_ofi1___lwmod 0032                __end_ofi1_printf 0671                ??_InitI2C_Master 0036  
                    i1printf@ap 0025                 __initialization 0015                    __end_of_main 04A2  
            __size_ofi1_isdigit 000E                   ?_read_RTC_I2c 0070                          ??_main 00CE  
         _configUSARTInterrupts 0DDB                          _ADRESH 001E                          _ADRESL 009E  
                        ?_putch 0070                          i1l2113 04D1                          i1l2131 0532  
                        i1l2115 04DC                          i1l2107 04C6                          i1l2133 054C  
                        i1l2221 069B                          i1l2071 0FBF                          i1l2127 052D  
                        i1l2119 04EE                          i1l2161 05AA                          i1l2209 067A  
                        i1l2233 06C9                          i1l2083 0FCC                          i1l2075 0FC6  
                        i1l2085 0FDA                          i1l2093 0FF3                          i1l2181 05F8  
                        i1l2165 05C9                          i1l2253 06ED                          i1l2245 06DD  
                        i1l2229 06C1                          i1l2183 05FD                          i1l2175 05E2  
                        i1l2167 05CD                          i1l2159 05A1                          i1l2263 071B  
                        i1l2239 06D4                          i1l2097 0FFB                          i1l2089 0FE8  
                        i1l1801 0E9A                          i1l2185 062B                          i1l2193 0657  
                        i1l2177 05E6                          i1l1803 0EA8                          i1l1811 0EC1  
                        i1l2195 065D                          i1l2197 04A9                          i1l1807 0EB6  
                        i1l1743 0E52                          i1l1763 0DD9                          i1l1785 0F26  
                        i1l1777 0F02                          i1l1779 0F10                          i1l1893 0E3A  
                        i1l1789 0F31                          u221_25 05B9                          u206_25 0FCF  
                        u208_25 0FE0                          u160_25 0E62                          u216_25 0576  
                        u241_20 0718                          u209_25 0FE9                          u219_25 059A  
                        u172_25 0E9D                          u165_25 0F05                          u174_25 0EAE  
                        u238_25 06EB                          u167_25 0F11                          u175_25 0EB7  
                        u159_25 0E5B                          u239_25 0709                          u168_25 0F1D  
                        u169_25 0F27                          u265_27 06F3                       ??i1_putch 0070  
                        _SSPADD 0093                          _TRISC3 043B                          _TRISC4 043C  
                        _SSPBUF 0013            __size_of_configRS232 0011                  __CFG_PWRTE$OFF 0000  
              __end_of_configAD 0DFA            __size_of_configTimer 000D                   _I2C_Read_Byte 0DAB  
                        ___wmul 0E71                       ??___awmod 0074                       ??___lwdiv 003A  
                     ??___lwmod 0042                  ??_read_RTC_I2c 0037                          _minuto 00A8  
               ___awmod@divisor 0070                   _I2C_Send_NACK 07F7                 ___awmod@counter 0075  
                        _printf 0041                          _strcpy 0E35                          _string 0190  
                     ?_I2C_Idle 0070               __end_ofi1___lwdiv 0F36               __end_ofi1___lwmod 0EC6  
                     ??_isdigit 0036                       ?_I2C_Stop 0070                          saved_w 007E  
        __size_of_write_RTC_I2c 0076               __end_ofi1_isdigit 0DDB         __end_of__initialization 003D  
                   i1printf@idx 0023                     i1printf@val 0028                  ?_I2C_Read_Byte 0070  
                __pcstackCOMMON 0070                    __pidataBANK0 0003                    __pidataBANK1 0D67  
                   i1putch@byte 0070                   __end_of_putch 0D79                  ?_I2C_Send_NACK 0070  
        ?_configUSARTInterrupts 0070                       ?i1___wmul 0070                      ??_I2C_Idle 0036  
                _OPTION_REGbits 0081                      ??_I2C_Stop 0036                       ?i1_printf 0070  
                       ??_putch 0036                      __pbssBANK0 0058                      __pbssBANK1 00A0  
                    __pbssBANK3 0190                      _hasAnError 02BA                   ?_selectChanel 0070  
                    __pmaintext 028E                         ?___wmul 0036                   _write_RTC_I2c 0728  
                    __pintentry 0004         __size_of_I2C_Write_Byte 000C                   ??_I2C_ReStart 0036  
                       ?_printf 0044                      ??i1___wmul 0074                         ?_strcpy 0070  
                 i1_isdigit$900 0070                      _contLedRD3 00A3                      ??i1_printf 0020  
                     ?_configAD 0070                         _SSPCON2 0091                         _SSPSTAT 0094  
                    __stringtab 0800            __end_of_read_RTC_I2c 07F7                         i1_putch 0D69  
        __size_of_interruptions 00B7                       _I2C_Start 0D81                 ??_I2C_Read_Byte 0036  
                ??_selectChanel 0036         read_RTC_I2c@pos_memoria 0038                  ?_write_RTC_I2c 0070  
               ??_I2C_Send_NACK 0036                         ___awmod 0FB5                 __size_of___wmul 0023  
                       ___lwdiv 0F36                         ___lwmod 0EC6                         _channel 00E4  
                       __ptext1 0728                         __ptext2 0F74                         __ptext3 079E  
                       __ptext4 0DB4                         __ptext5 0D89                         __ptext6 0D81  
                       __ptext7 07F7                         __ptext8 0DAB                         __ptext9 0D79  
               __size_of_printf 024D                 __size_of_strcpy 001B               __end_of_hexpowers 0818  
                       _dpowers 0806               i1___lwdiv@divisor 0070                         _leitura 00A6  
                       _isdigit 0DFA               i1___lwdiv@counter 0077                ___awmod@dividend 0072  
                       _segundo 00A9             __end_of_I2C_ReStart 0D81                      ??_configAD 0036  
                       clrloop0 0D92            end_of_initialization 003D                      ?_I2C_Start 0070  
                       printf@c 00CD                         printf@f 00CC           i1___wmul@multiplicand 0072  
                 _interruptions 0671                       _PORTBbits 0006                       _PORTDbits 0008  
                     _TRISDbits 0088               __size_of_I2C_Idle 0009               __size_of_I2C_Stop 0008  
                     i1___lwdiv 0EFA                       i1___lwmod 0E94                   ??_configRS232 0036  
                   printf@width 00CA                       i1_isdigit 0DCD                   ??_configTimer 0036  
                  i1printf@flag 0027                    i1printf@prec 0026                 ??_write_RTC_I2c 0037  
                    _string_aux 00AA         ??_configUSARTInterrupts 0036                  _I2C_Write_Byte 0DB4  
                ?_interruptions 0070                  __end_of___wmul 0E94                     _I2C_ReStart 0D79  
                  _bottonToSend 02B8               i1___lwmod@divisor 0078         __size_of_InitI2C_Master 001A  
                 __pbitbssBANK0 02B8               i1___lwmod@counter 007D                  __end_of_printf 028E  
                __end_of_strcpy 0E50             start_initialization 0015               __size_ofi1___wmul 0021  
          __end_of_selectChanel 0FB5                       i1printf@c 002C                       i1printf@f 0024  
         __size_of_read_RTC_I2c 0059                      ?i1___lwdiv 0070                      ?i1___lwmod 0078  
             __size_ofi1_printf 01CF                      ?i1_isdigit 0070                     ??_I2C_Start 0036  
           __end_of_configRS232 0E1B          __end_of_I2C_Write_Byte 0DC0                        ??___wmul 003A  
                   __pdataBANK0 0059                     __pdataBANK1 00E4             __end_of_configTimer 0DCD  
                  _read_RTC_I2c 079E                        ??_printf 0054                        ??_strcpy 0071  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00C4  
             __size_of_configAD 0010                        ?i1_putch 0070                ___lwdiv@dividend 0038  
               ?_I2C_Write_Byte 0070                 ??_interruptions 002D                        ?___awmod 0070  
                      ?___lwdiv 0036                        ?___lwmod 003E                       __pstrings 0800  
                      _I2C_Idle 0DA2                        ?_isdigit 0070                        _I2C_Stop 0D89  
                     _hexpowers 0810                ___lwdiv@quotient 003B                     ??i1___lwdiv 0074  
                   ??i1___lwmod 007C                  __size_of_putch 0008                       _valLedRD4 02BB  
                  _receivedData 0059               interrupt_function 0004                     _configRS232 0E0A  
                ___wmul@product 003A                     ??i1_isdigit 0070                       clear_ram0 0D91  
                      _PIE1bits 008C                     _configTimer 0DC0                        _PIR1bits 000C  
         __end_of_I2C_Read_Byte 0DB4           __end_of_I2C_Send_NACK 0800           __size_of_selectChanel 0041  
                _InitI2C_Master 0E1B                      _ADCON0bits 001F                     __stringbase 0805  
                    _ADCON1bits 009F               ___wmul@multiplier 0036                        i1___wmul 0E50  
                    printf@flag 00C9                      printf@prec 00C6               interruptions@cont 0034  
                      i1_printf 04A2             selectChanel@channel 0036                __size_ofi1_putch 0008  
                  _selectChanel 0F74          __end_of_InitI2C_Master 0E35                __size_of___awmod 004B  
              __size_of___lwdiv 003E  __size_of_configUSARTInterrupts 000F                __size_of___lwmod 0034  
 __end_of_configUSARTInterrupts 0DEA                    ?_I2C_ReStart 0070              __end_of__stringtab 0806  
                   _isdigit$900 0036                        _data_ADC 00A0                        _changing 02B9  
              __size_of_isdigit 0010                 ___lwdiv@divisor 0036                 ___lwdiv@counter 003D  
                      __ptext10 0DA2                        __ptext11 0041                        __ptext20 0D99  
                      __ptext12 0D71                        __ptext21 0DEA                        __ptext13 0DFA  
                      __ptext30 0E35                        __ptext22 0E1B                        __ptext14 0E71  
                      __ptext31 0FB5                        __ptext23 0671                        __ptext15 0EC6  
                      __ptext24 04A2                        __ptext16 0F36                        __ptext25 0D69  
                      __ptext17 0DDB                        __ptext26 0DCD                        __ptext18 0DC0  
                      __ptext27 0E50                        __ptext19 0E0A                        __ptext28 0E94  
                      __ptext29 0EFA                        _configAD 0DEA              i1___lwdiv@dividend 0072  
                    strcpy@from 0070                   __size_of_main 0214           __end_of_write_RTC_I2c 079E  
             _configADInterrupt 0D99                 ?_InitI2C_Master 0070                       printf@idx 00C4  
                     printf@val 00C7                        main@cont 00DC              ?_configADInterrupt 0070  
            i1___lwdiv@quotient 0075                       putch@byte 0036                      _INTCONbits 000B  
           ??_configADInterrupt 0036                        isdigit@c 0037                        intlevel1 0000  
              ___lwmod@dividend 0040                ??_I2C_Write_Byte 0036                       stringcode 0800  
     __end_of_configADInterrupt 0DA2                        printf@ap 00C5                 ___lwmod@divisor 003E  
                      strcpy@cp 0073                        strcpy@to 0072                 ___lwmod@counter 0043  
                      stringdir 0800                        stringtab 0800                     _SSPCON2bits 0091  
                  ?_configRS232 0070                    ?_configTimer 0070  
